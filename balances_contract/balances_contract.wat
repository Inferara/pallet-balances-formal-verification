(module
  ;; ============================================================================
  ;; TYPE DEFINITIONS
  ;; ============================================================================

  ;; Type 0: Generic 3-parameter function returning i32
  ;; Used for: comparisons, memory operations, encoding/decoding operations
  ;; Parameters: (pointer/value, pointer/value, length/value) -> result/status
  (type $type_generic_3param_ret_i32 (;0;) (func (param i32 i32 i32) (result i32)))
  
  ;; Type 1: Binary function with i32 result
  ;; Used for: trait method implementations, equality checks, formatting operations
  ;; Parameters: (self_ptr, other_ptr) -> bool/status
  (type $type_binary_op_ret_i32 (;1;) (func (param i32 i32) (result i32)))
  
  ;; Type 2: Binary procedure (no return)
  ;; Used for: SCALE codec operations, memory copies, event emission setup
  ;; Parameters: (dest_ptr, src_ptr) -> void
  (type $type_binary_proc (;2;) (func (param i32 i32)))
  
  ;; Type 3: 3-parameter procedure (no return)
  ;; Used for: memory operations (fill/copy), hashing, error handling
  ;; Parameters: (dest, src, length) -> void
  (type $type_ternary_proc (;3;) (func (param i32 i32 i32)))
  
  ;; Type 4: Single parameter procedure
  ;; Used for: cleanup operations, panic handlers, initialization
  ;; Parameters: (ptr/value) -> void
  (type $type_unary_proc (;4;) (func (param i32)))
  
  ;; Type 5: 4-parameter procedure
  ;; Used for: seal_deposit_event, complex memory operations
  ;; Parameters: (ptr1, ptr2, len1, len2) -> void
  (type $type_quad_proc (;5;) (func (param i32 i32 i32 i32)))
  
  ;; Type 6: Nullary procedure (no params, no return)
  ;; Used for: module initialization, empty handlers, finalization
  ;; Parameters: () -> void
  (type $type_nullary_proc (;6;) (func))
  
  ;; Type 7: Storage operation with result
  ;; Used for: seal_get_storage, seal_set_storage, seal_clear_storage
  ;; Parameters: (key_ptr, key_len, value_ptr, value_len) -> status_code
  (type $type_storage_op_ret_i32 (;7;) (func (param i32 i32 i32 i32) (result i32)))
  
  ;; Type 8: 5-parameter procedure
  ;; Used for: bounds checking, complex buffer operations
  ;; Parameters: (buf, offset, len, min, max) -> void
  (type $type_quintuple_proc (;8;) (func (param i32 i32 i32 i32 i32)))
  
  ;; Type 9: Unary function with result
  ;; Used for: balance queries, type conversions, option unwrapping
  ;; Parameters: (value/ptr) -> result
  (type $type_unary_func_ret_i32 (;9;) (func (param i32) (result i32)))
  
  ;; Type 10: 128-bit value operation
  ;; Used for: Balance (u128) encoding, storage key generation
  ;; Parameters: (value_low_64, value_high_64, output_ptr) -> void
  (type $type_u128_operation (;10;) (func (param i64 i64 i32)))
  
  ;; Type 11: Nullary function with result
  ;; Used for: getters (total_issuance, active_issuance), status queries
  ;; Parameters: () -> value
  (type $type_nullary_func_ret_i32 (;11;) (func (result i32)))
  
  ;; Type 12: Complex balance operation
  ;; Used for: deposit/withdrawal with imbalances, multi-balance updates
  ;; Parameters: (account_ptr, amount_low, amount_high, flags, extra_ptr) -> void
  (type $type_balance_complex_op (;12;) (func (param i32 i64 i64 i32 i32)))
  
  ;; Type 13: 5-parameter function with result
  ;; Used for: formatted output, complex comparisons
  ;; Parameters: (ptr1, ptr2, ptr3, len1, len2) -> status
  (type $type_quintuple_func_ret_i32 (;13;) (func (param i32 i32 i32 i32 i32) (result i32)))
  
  ;; Type 14: 6-parameter procedure
  ;; Used for: vector resize, allocation with metadata
  ;; Parameters: (dst, old_ptr, old_len, new_len, align, flags) -> void
  (type $type_sextuple_proc (;14;) (func (param i32 i32 i32 i32 i32 i32)))
  
  ;; Type 15: 128-bit binary operation
  ;; Used for: u128 arithmetic (addition/subtraction), balance updates
  ;; Parameters: (value1_low, value1_high, value2_low, value2_high) -> void
  (type $type_u128_binary_op (;15;) (func (param i64 i64)))
  
  ;; Type 16: Transfer/withdrawal with 128-bit amounts
  ;; Used for: transfer operations, can_withdraw checks
  ;; Parameters: (account_ptr, flags, amount_low, amount_high) -> status
  (type $type_transfer_op_ret_i32 (;16;) (func (param i32 i32 i64 i64) (result i32)))
  
  ;; Type 17: Complex balance transfer
  ;; Used for: transfer_with_preservation, burn_from with all parameters
  ;; Parameters: (from_ptr, to_ptr, flags, amount_low, amount_high, preserve, precision) -> void
  (type $type_transfer_complex (;17;) (func (param i32 i32 i32 i64 i64 i32 i32)))
  
  ;; Type 18: Transfer check with result
  ;; Used for: can_deposit, can_withdraw with provenance tracking
  ;; Parameters: (account_ptr, metadata, flags, amount_low, amount_high, mode) -> consequence
  (type $type_transfer_check_ret_i32 (;18;) (func (param i32 i32 i32 i64 i64 i32) (result i32)))
  
  ;; Type 19: Balance update operation
  ;; Used for: increase_balance, decrease_balance with precision/fortitude
  ;; Parameters: (account_ptr, amount_low, amount_high, flags) -> void
  (type $type_balance_update (;19;) (func (param i32 i64 i64 i32)))

  ;; ============================================================================
  ;; IMPORT DECLARATIONS
  ;; ============================================================================

  ;; Import 0: Get value from contract storage (seal1 version with result code)
  ;; Returns: 0 on success, 1 if key not found, 2 on other errors
  ;; Used for: Reading AccountData, locks, and other persistent state
  ;; Parameters: (key_ptr, key_len, out_ptr, out_len_ptr) -> status_code
  (import "seal1" "get_storage" (func $seal_get_storage (;0;) (type 7)))
  
  ;; Import 1: Read the input data passed to the contract call
  ;; Reads the SCALE-encoded input buffer into contract memory
  ;; Used for: Decoding message selector and parameters
  ;; Parameters: (buf_ptr, buf_len_ptr) -> void
  (import "seal0" "input" (func $seal_input (;1;) (type 2)))
  
  ;; Import 2: Emit an event from the contract
  ;; Writes event data to the host for indexing (Transfer, Endowed, etc.)
  ;; Used for: Emitting all balance-related events
  ;; Parameters: (topics_ptr, topics_len, data_ptr, data_len) -> void
  (import "seal0" "deposit_event" (func $seal_deposit_event (;2;) (type 5)))
  
  ;; Import 3: Set/update a value in contract storage (seal2 version)
  ;; Returns: 0 if new key, size of old value if updating
  ;; Used for: Persisting AccountData, locks, and configuration
  ;; Parameters: (key_ptr, key_len, value_ptr, value_len) -> old_value_size
  (import "seal2" "set_storage" (func $seal_set_storage (;3;) (type 7)))
  
  ;; Import 4: Remove a key from contract storage (seal1 version)
  ;; Returns: 0 if key didn't exist, size of removed value otherwise
  ;; Used for: Cleaning up empty accounts, removing locks
  ;; Parameters: (key_ptr, key_len) -> old_value_size
  (import "seal1" "clear_storage" (func $seal_clear_storage (;4;) (type 1)))
  
  ;; Import 5: Write debug message to host (development/logging)
  ;; Outputs UTF-8 string for debugging contract execution
  ;; Used for: Debug logging during development
  ;; Parameters: (str_ptr, str_len) -> status
  (import "seal0" "debug_message" (func $seal_debug_message (;5;) (type 1)))
  
  ;; Import 6: Return from contract execution with data
  ;; Terminates execution and returns SCALE-encoded result to caller
  ;; Used for: Returning query results and errors
  ;; Parameters: (flags, data_ptr, data_len) -> never_returns
  (import "seal0" "seal_return" (func $seal_return (;6;) (type 3)))
  
  ;; Import 7: Get the caller's AccountId
  ;; Writes the 32-byte AccountId of the message sender
  ;; Used for: Authentication, transfer source identification
  ;; Parameters: (output_ptr, output_len_ptr) -> void
  (import "seal0" "caller" (func $seal_caller (;7;) (type 2)))
  
  ;; Import 8: Get the value (balance) transferred with this call
  ;; Writes the 128-bit balance value sent with the message
  ;; Used for: Payable message handling
  ;; Parameters: (output_ptr, output_len_ptr) -> void
  (import "seal0" "value_transferred" (func $seal_value_transferred (;8;) (type 2)))
  
  ;; Import 9: Compute BLAKE2-256 hash
  ;; Hashes input data using BLAKE2b-256 algorithm
  ;; Used for: Generating storage keys for Mapping<K,V>
  ;; Parameters: (input_ptr, input_len, output_ptr) -> void
  (import "seal0" "hash_blake2_256" (func $seal_hash_blake2_256 (;9;) (type 3)))
  
  ;; Import 10: Linear memory shared between contract and host
  ;; Initial: 2 pages (128 KiB), Maximum: 16 pages (1 MiB)
  ;; Used for: All contract data, stack, heap allocations
  ;; Layout: [stack | heap | static data]
  (import "env" "memory" (memory (;0;) 2 16))

  ;; ============================================================================
  ;; INITIALIZATION AND SETUP
  ;; ============================================================================

  ;; Function 10: Module initialization (runs at instantiation)
  ;; Zeroes out the BSS section (uninitialized static data)
  ;; Clears 16,398 bytes starting at address 69,244
  ;; Parameters: none -> void
  ;; Called: Automatically at module start
  (func $__init (;10;) (type 6)
    i32.const 69244      ;; Start of BSS section
    i32.const 0          ;; Fill value (zero)
    i32.const 16398      ;; Number of bytes to clear
    memory.fill)         ;; Zero-initialize static memory

  ;; ============================================================================
  ;; LOW-LEVEL MEMORY OPERATIONS
  ;; ============================================================================

  ;; Function 11: Forward memory copy loop
  ;; Copies memory byte-by-byte in forward direction (low to high addresses)
  ;; Used when: source and destination don't overlap, or dest < src
  ;; Parameters: (dest, src, len) -> dest
  ;; Returns: Original destination pointer
  (func $memcpy_forward_loop (;11;) (type 0) (param i32 i32 i32) (result i32)
    (local i32)          ;; Local 3: loop counter
    loop (result i32)
      local.get 2        ;; len
      local.get 3        ;; counter
      i32.eq
      if (result i32)    ;; if counter == len, done
        local.get 0      ;; return dest
      else
        local.get 0
        local.get 3
        i32.add          ;; dest[counter]
        local.get 1
        local.get 3
        i32.add
        i32.load8_u      ;; src[counter]
        i32.store8       ;; dest[counter] = src[counter]
        local.get 3
        i32.const 1
        i32.add
        local.set 3      ;; counter++
        br 1             ;; continue loop
      end
    end)

  ;; Function 12: Safe memory move (handles overlapping regions)
  ;; Chooses forward or backward copy based on pointer relationship
  ;; Used for: SCALE codec buffer management, vector operations
  ;; Parameters: (dest, src, len) -> dest
  ;; Returns: Destination pointer
  (func $memmove (;12;) (type 0) (param i32 i32 i32) (result i32)
    (local i32)          ;; Local 3: working pointer
    block
      local.get 0        ;; dest
      local.get 1        ;; src
      i32.le_u
      if                 ;; if dest <= src (forward copy safe)
        ;; Forward copy loop
        local.get 0
        local.set 3
        loop
          local.get 2    ;; len
          i32.eqz
          br_if 2        ;; if len == 0, exit
          local.get 3
          local.get 1
          i32.load8_u
          i32.store8     ;; *dest++ = *src++
          local.get 3
          i32.const 1
          i32.add
          local.set 3
          local.get 1
          i32.const 1
          i32.add
          local.set 1
          local.get 2
          i32.const 1
          i32.sub
          local.set 2
          br 0           ;; continue
        end
        unreachable
      end
      ;; Backward copy (dest > src, overlapping)
      local.get 0
      i32.const 1
      i32.sub
      local.set 3
      local.get 1
      i32.const 1
      i32.sub
      local.set 1
      loop
        local.get 2
        i32.eqz
        br_if 1          ;; if len == 0, exit
        local.get 2
        local.get 3
        i32.add
        local.get 1
        local.get 2
        i32.add
        i32.load8_u
        i32.store8       ;; Copy from end backwards
        local.get 2
        i32.const 1
        i32.sub
        local.set 2
        br 0             ;; continue
      end
      unreachable
    end
    local.get 0)         ;; return dest

  ;; Function 13: Memory fill loop
  ;; Fills memory region with a specific byte value
  ;; Used for: Zeroing buffers, initializing arrays
  ;; Parameters: (dest, fill_byte, len) -> dest
  ;; Returns: Destination pointer
  (func $memset_loop (;13;) (type 0) (param i32 i32 i32) (result i32)
    (local i32)          ;; Local 3: counter
    loop (result i32)
      local.get 2        ;; len
      local.get 3        ;; counter
      i32.eq
      if (result i32)
        local.get 0      ;; return dest
      else
        local.get 0
        local.get 3
        i32.add
        local.get 1      ;; fill_byte
        i32.store8       ;; dest[counter] = fill_byte
        local.get 3
        i32.const 1
        i32.add
        local.set 3      ;; counter++
        br 1             ;; continue loop
      end
    end)

  ;; Function 14: Memory comparison (memcmp)
  ;; Compares two memory regions byte-by-byte
  ;; Used for: AccountId equality, storage key comparison
  ;; Parameters: (ptr1, ptr2, len) -> difference
  ;; Returns: 0 if equal, negative if ptr1 < ptr2, positive if ptr1 > ptr2
  (func $memcmp (;14;) (type 0) (param i32 i32 i32) (result i32)
    (local i32 i32)      ;; Local 3: byte1, Local 4: byte2
    loop
      local.get 2
      i32.eqz
      if                 ;; if len == 0
        i32.const 0
        return           ;; regions are equal
      end
      local.get 2
      i32.const 1
      i32.sub
      local.set 2        ;; len--
      local.get 1
      i32.load8_u
      local.set 3        ;; byte2 = *ptr2
      local.get 0
      i32.load8_u
      local.set 4        ;; byte1 = *ptr1
      local.get 1
      i32.const 1
      i32.add
      local.set 1        ;; ptr2++
      local.get 0
      i32.const 1
      i32.add
      local.set 0        ;; ptr1++
      local.get 3
      local.get 4
      i32.eq             ;; if bytes equal
      br_if 0            ;; continue loop
    end
    local.get 4          ;; byte1
    local.get 3          ;; byte2
    i32.sub)             ;; return difference

  ;; ============================================================================
  ;; SCALE CODEC - BUFFER READING
  ;; ============================================================================

  ;; Function 15: Read bytes from SCALE decode buffer
  ;; Consumes bytes from a decode cursor, checking bounds
  ;; Used for: Decoding message parameters, storage values
  ;; Parameters: (reader_state_ptr, output_ptr, bytes_to_read) -> success_flag
  ;; Returns: 0 on success, 1 on buffer underflow
  (func $scale_read_bytes (;15;) (type 0) (param i32 i32 i32) (result i32)
    (local i32 i32 i32)  ;; Locals: cursor_advanced_flag, cursor_ptr, remaining_len
    global.get 0
    i32.const 16
    i32.sub
    local.tee 4          ;; Allocate 16 bytes on stack
    global.set 0
    
    ;; Load reader state
    local.get 0
    i32.load8_u offset=4 ;; Check if cursor already advanced
    local.set 3
    local.get 0
    i32.const 0
    i32.store8 offset=4  ;; Clear advanced flag
    
    block (result i32)
      block
        local.get 3
        i32.eqz
        if                ;; Normal path: read from cursor
          i32.const 1
          local.get 0
          i32.load         ;; Get reader struct pointer
          local.tee 0
          i32.load offset=4 ;; remaining = reader.len
          local.tee 5
          local.get 2       ;; bytes_to_read
          i32.lt_u
          br_if 2          ;; if remaining < bytes_to_read, fail
          drop
          
          ;; Copy data
          local.get 0
          i32.load         ;; reader.ptr
          local.set 3
          local.get 2
          if               ;; if bytes_to_read > 0
            local.get 1    ;; output_ptr
            local.get 3    ;; reader.ptr
            local.get 2    ;; bytes_to_read
            memory.copy
          end
          
          ;; Advance cursor
          local.get 0
          local.get 5      ;; old remaining
          local.get 2      ;; bytes_to_read
          i32.sub
          i32.store offset=4 ;; remaining -= bytes_to_read
          local.get 0
          local.get 2
          local.get 3
          i32.add
          i32.store        ;; ptr += bytes_to_read
          br 1
        end
        
        ;; Alternate path: single-byte read
        local.get 1
        local.get 0
        i32.load8_u offset=5 ;; Read single byte value
        i32.store8
        local.get 0
        i32.load
        local.set 0
        
        ;; Validate bounds
        local.get 4
        i32.const 8
        i32.add
        i32.const 1      ;; bytes_to_read = 1
        local.get 1      ;; output_ptr
        local.get 2      ;; expected_len
        i32.const 66820  ;; error message location
        call 16          ;; bounds check
        
        i32.const 1
        local.get 0
        i32.load offset=4 ;; remaining
        local.tee 5
        local.get 4
        i32.load offset=12 ;; actual_read
        local.tee 1
        i32.lt_u
        br_if 1          ;; if remaining < actual_read, fail
        drop
        
        ;; Advance cursor
        local.get 0
        i32.load
        local.set 2
        local.get 1
        if
          local.get 4
          i32.load offset=8
          local.get 2
          local.get 1
          memory.copy
        end
        local.get 0
        local.get 5
        local.get 1
        i32.sub
        i32.store offset=4
        local.get 0
        local.get 1
        local.get 2
        i32.add
        i32.store
      end
      i32.const 0        ;; success
    end
    local.set 3
    local.get 4
    i32.const 16
    i32.add
    global.set 0         ;; Restore stack pointer
    local.get 3)         ;; Return success/failure

  ;; Function 16: Bounds check helper for buffer reads
  ;; Validates that read operation is within bounds
  ;; Used by: SCALE decoder, input validation
  ;; Parameters: (offset_out_ptr, actual_len, expected_len, min, error_msg_ptr) -> void
  ;; Panics if: actual_len < expected_len
  (func $bounds_check_slice (;16;) (type 8) (param i32 i32 i32 i32 i32)
    local.get 1          ;; actual_len
    local.get 3          ;; expected_len
    i32.le_u
    if                   ;; if actual_len <= expected_len, ok
      local.get 0
      local.get 3
      local.get 1
      i32.sub
      i32.store offset=4 ;; store (expected - actual)
      local.get 0
      local.get 1
      local.get 2
      i32.add
      i32.store          ;; store (base + actual)
      return
    end
    ;; Bounds violation - panic
    local.get 1          ;; actual
    local.get 3          ;; expected
    local.get 4          ;; error message
    call 19              ;; panic handler
    unreachable)

  ;; Function 17: Slice length validation wrapper
  ;; Ensures slice operations don't exceed bounds
  ;; Parameters: (offset_out_ptr, len, base_ptr, max_len, error_msg_ptr) -> void
  (func $check_slice_length (;17;) (type 8) (param i32 i32 i32 i32 i32)
    local.get 1          ;; len
    local.get 3          ;; max_len
    i32.le_u
    if                   ;; if len <= max_len
      local.get 0
      local.get 1
      i32.store offset=4
      local.get 0
      local.get 2        ;; base_ptr
      i32.store
      return
    end
    ;; Length exceeds bounds
    local.get 1
    local.get 3
    local.get 4          ;; error message
    call 18              ;; panic
    unreachable)

  ;; Function 18: Panic with slice index error (specialized)
  ;; Formats and panics with "index out of bounds" style message
  ;; Parameters: (index, len, error_context_ptr) -> never_returns
  (func $panic_bounds_check (;18;) (type 3) (param i32 i32 i32)
    local.get 0          ;; index
    local.get 1          ;; len
    local.get 2          ;; error context string
    i32.const 68816      ;; Panic handler function ptr
    call 103)            ;; Format and panic

  ;; Function 19: Panic with range error message
  ;; Formats and panics with "range out of bounds" message
  ;; Parameters: (start, end, error_context_ptr) -> never_returns
  (func $panic_range_check (;19;) (type 3) (param i32 i32 i32)
    local.get 0          ;; start
    local.get 1          ;; end
    local.get 2          ;; error context
    i32.const 68784      ;; Different panic message format
    call 103)

  ;; ============================================================================
  ;; SCALE CODEC - ENCODING TO STORAGE
  ;; ============================================================================

  ;; Function 20: Encode and write Mapping<AccountId, Vec<BalanceLock>>
  ;; Encodes a vector of balance locks and writes to storage
  ;; Used for: Persisting account lock data in set_lock/remove_lock
  ;; Parameters: (result_ptr, locks_vec_ptr) -> void
  ;; Result: Stores encoded data info in result_ptr (ptr, len, capacity)
  (func $encode_locks_to_storage (;20;) (type 2) (param i32 i32)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i64)
    global.get 0
    i32.const 144
    i32.sub
    local.tee 2          ;; Allocate stack frame
    global.set 0
    
    ;; Copy vector metadata (locks are [BalanceLock; N])
    local.get 2
    i32.const 40
    i32.add
    local.get 1
    i32.const 8
    i32.add
    i64.load align=1
    i64.store align=4
    local.get 2
    i32.const 48
    i32.add
    local.get 1
    i32.const 16
    i32.add
    i64.load align=1
    i64.store align=4
    local.get 2
    i32.const 56
    i32.add
    local.get 1
    i32.const 24
    i32.add
    i64.load align=1
    i64.store align=4
    local.get 2
    i32.const 66836      ;; Storage key prefix
    i32.store offset=28
    local.get 2
    local.get 1
    i64.load align=1
    i64.store offset=32 align=4
    
    ;; Initialize encoder buffer (16 KiB at 69258)
    local.get 2
    i32.const 0
    i32.store offset=72
    local.get 2
    i64.const 16384      ;; Buffer size
    i64.store offset=100 align=4
    local.get 2
    i32.const 69258      ;; Buffer start
    i32.store offset=96
    
    ;; Encode the storage key and locks vector
    local.get 2
    i32.const 28
    i32.add
    local.get 2
    i32.const 96
    i32.add
    local.tee 3
    call 21              ;; Encode storage key
    local.get 2
    local.get 2
    i64.load offset=96 align=4
    i64.store offset=64 align=4
    local.get 2
    i32.const 16
    i32.add
    local.get 2
    i32.const -64
    i32.sub
    local.get 2
    i32.load offset=104
    call 22              ;; Get buffer slice
    
    ;; Call seal_set_storage
    local.get 2
    i32.load offset=20
    local.set 5          ;; value_len
    local.get 2
    i32.load offset=16
    local.set 4          ;; value_ptr
    local.get 2
    i32.load offset=64
    local.set 7          ;; key_ptr
    local.get 2
    local.get 2
    i32.load offset=68
    local.tee 1          ;; key_len
    i32.store offset=96
    local.get 4
    local.get 5
    local.get 7
    local.get 3
    call 0               ;; seal_get_storage (reads for verification)
    local.set 4
    
    ;; Validate storage operation result
    local.get 2
    i32.const 8
    i32.add
    local.get 2
    i32.load offset=96
    local.get 7
    local.get 1
    i32.const 66964      ;; Error context
    call 17              ;; Bounds check
    
    block
      block
        local.get 4      ;; storage result code
        i32.const 15
        i32.ge_u
        br_if 0
        local.get 4
        i32.const 68012  ;; Result code lookup table
        i32.add
        i32.load8_u
        local.tee 1
        i32.const 16
        i32.ne
        if               ;; if not Success (16)
          local.get 1
          i32.const 3
          i32.ne
          br_if 1
          i32.const -2147483648 ;; Special error code
          local.set 1
          br 2
        end
        ;; Success path: decode result
        local.get 2
        i32.load offset=12
        local.set 5
        local.get 2
        local.get 2
        i32.load offset=8
        local.tee 4
        i32.store offset=76
        local.get 2
        local.get 5
        i32.store offset=80
        block  ;; label = @3
          block  ;; label = @4
            local.get 5
            i32.eqz
            br_if 0 (;@4;)
            local.get 2
            local.get 5
            i32.const 1
            i32.sub
            i32.store offset=80
            local.get 2
            local.get 4
            i32.const 1
            i32.add
            i32.store offset=76
            block  ;; label = @5
              block  ;; label = @6
                block  ;; label = @7
                  block  ;; label = @8
                    block  ;; label = @9
                      local.get 4
                      i32.load8_u
                      local.tee 1
                      i32.const 3
                      i32.and
                      i32.const 1
                      i32.sub
                      br_table 1 (;@8;) 2 (;@7;) 3 (;@6;) 0 (;@9;)
                    end
                    local.get 1
                    i32.const 2
                    i32.shr_u
                    local.set 6
                    br 3 (;@5;)
                  end
                  local.get 2
                  local.get 1
                  i32.store8 offset=101
                  local.get 2
                  i32.const 1
                  i32.store8 offset=100
                  local.get 2
                  local.get 2
                  i32.const 76
                  i32.add
                  i32.store offset=96
                  local.get 2
                  i32.const 0
                  i32.store16 offset=132
                  local.get 2
                  i32.const 96
                  i32.add
                  local.get 2
                  i32.const 132
                  i32.add
                  i32.const 2
                  call 15
                  br_if 3 (;@4;)
                  local.get 2
                  i32.load16_u offset=132
                  local.tee 1
                  i32.const 256
                  i32.lt_u
                  br_if 3 (;@4;)
                  local.get 1
                  i32.const 65532
                  i32.and
                  i32.const 2
                  i32.shr_u
                  local.set 6
                  br 2 (;@5;)
                end
                local.get 2
                local.get 1
                i32.store8 offset=101
                local.get 2
                i32.const 1
                i32.store8 offset=100
                local.get 2
                local.get 2
                i32.const 76
                i32.add
                i32.store offset=96
                local.get 2
                i32.const 0
                i32.store offset=132
                local.get 2
                i32.const 96
                i32.add
                local.get 2
                i32.const 132
                i32.add
                i32.const 4
                call 15
                br_if 2 (;@4;)
                local.get 2
                i32.load offset=132
                local.tee 1
                i32.const 65536
                i32.lt_u
                br_if 2 (;@4;)
                local.get 1
                i32.const 2
                i32.shr_u
                local.set 6
                br 1 (;@5;)
              end
              local.get 5
              i32.const 5
              i32.lt_u
              local.get 1
              i32.const 4
              i32.ge_u
              i32.or
              br_if 1 (;@4;)
              local.get 2
              local.get 5
              i32.const 5
              i32.sub
              i32.store offset=80
              local.get 2
              local.get 4
              i32.const 5
              i32.add
              i32.store offset=76
              local.get 4
              i32.load offset=1 align=1
              local.tee 6
              i32.const 1073741824
              i32.lt_u
              br_if 1 (;@4;)
            end
            local.get 2
            i32.const 100
            i32.add
            local.set 5
            local.get 2
            i32.const 104
            i32.add
            local.set 4
            i32.const 0
            local.set 3
            local.get 2
            i32.const 0
            i32.store offset=92
            local.get 2
            i64.const 68719476736
            i64.store offset=84 align=4
            i32.const 512
            local.set 1
            loop  ;; label = @5
              block  ;; label = @6
                local.get 6
                if  ;; label = @7
                  local.get 6
                  local.get 1
                  local.get 1
                  local.get 6
                  i32.gt_u
                  select
                  local.tee 7
                  local.get 2
                  i32.load offset=84
                  local.tee 9
                  local.get 3
                  i32.sub
                  i32.le_u
                  br_if 1 (;@6;)
                  block  ;; label = @8
                    local.get 3
                    local.get 7
                    i32.add
                    local.tee 8
                    i32.const 67108863
                    i32.gt_u
                    if  ;; label = @9
                      i32.const 0
                      local.set 1
                      br 1 (;@8;)
                    end
                    i32.const 0
                    local.set 3
                    local.get 5
                    local.set 1
                    local.get 9
                    if (result i32)  ;; label = @9
                      local.get 2
                      i32.const 16
                      i32.store offset=100
                      local.get 2
                      local.get 2
                      i32.load offset=88
                      i32.store offset=96
                      local.get 9
                      i32.const 5
                      i32.shl
                      local.set 3
                      local.get 4
                    else
                      local.get 1
                    end
                    local.get 3
                    i32.store
                    local.get 2
                    i32.const 132
                    i32.add
                    i32.const 16
                    local.get 8
                    i32.const 5
                    i32.shl
                    local.get 2
                    i32.const 96
                    i32.add
                    call 23
                    local.get 2
                    i32.load offset=136
                    local.set 1
                    local.get 2
                    i32.load offset=132
                    i32.eqz
                    if  ;; label = @9
                      local.get 2
                      local.get 8
                      i32.store offset=84
                      local.get 2
                      local.get 1
                      i32.store offset=88
                      br 3 (;@6;)
                    end
                    local.get 1
                    i32.const -2147483647
                    i32.eq
                    br_if 2 (;@6;)
                    local.get 2
                    i32.load offset=140
                    local.set 2
                  end
                  local.get 1
                  local.get 2
                  i32.const 66932
                  call 24
                  unreachable
                end
                local.get 2
                i32.load offset=84
                local.tee 1
                i32.const -2147483648
                i32.eq
                br_if 2 (;@4;)
                local.get 2
                i32.load offset=80
                br_if 2 (;@4;)
                local.get 2
                i64.load offset=88 align=4
                local.set 10
                local.get 1
                i32.const -2147483647
                i32.ne
                br_if 5 (;@1;)
                br 3 (;@3;)
              end
              local.get 7
              local.set 3
              loop  ;; label = @6
                local.get 3
                i32.eqz
                if  ;; label = @7
                  local.get 6
                  local.get 7
                  i32.sub
                  local.set 6
                  local.get 2
                  i32.load offset=92
                  local.tee 3
                  local.set 1
                  br 2 (;@5;)
                end
                local.get 2
                i32.load offset=80
                local.tee 1
                i32.const 8
                i32.lt_u
                local.get 1
                i32.const 8
                i32.sub
                i32.const 16
                i32.lt_u
                i32.or
                br_if 2 (;@4;)
                local.get 2
                local.get 2
                i32.load offset=76
                local.tee 8
                i64.load align=1
                i64.store offset=112
                local.get 2
                local.get 8
                i64.load offset=16 align=1
                i64.store offset=104
                local.get 2
                local.get 8
                i64.load offset=8 align=1
                i64.store offset=96
                local.get 2
                local.get 1
                i32.const 24
                i32.sub
                i32.store offset=80
                local.get 2
                local.get 8
                i32.const 24
                i32.add
                i32.store offset=76
                local.get 2
                i32.const 84
                i32.add
                local.get 2
                i32.const 96
                i32.add
                i32.const 66948
                call 25
                local.get 3
                i32.const 1
                i32.sub
                local.set 3
                br 0 (;@6;)
              end
              unreachable
            end
            unreachable
          end
          i64.const 16
          local.set 10
        end
        local.get 2
        local.get 10
        i64.store8 offset=84
        local.get 2
        i32.const 1
        i32.store offset=100
        local.get 2
        i32.const 66876
        i32.store offset=96
        local.get 2
        i64.const 1
        i64.store offset=108 align=4
        local.get 2
        i32.const 1
        i32.store offset=136
        local.get 2
        local.get 2
        i32.const 132
        i32.add
        i32.store offset=104
        local.get 2
        local.get 2
        i32.const 84
        i32.add
        i32.store offset=132
        local.get 2
        i32.const 96
        i32.add
        i32.const 66884
        call 27
        unreachable
      end
      local.get 2
      i32.const 0
      i32.store offset=112
      local.get 2
      i32.const 1
      i32.store offset=100
      local.get 2
      i32.const 67384
      i32.store offset=96
      local.get 2
      i64.const 4
      i64.store offset=104 align=4
      local.get 2
      i32.const 96
      i32.add
      i32.const 67392
      call 27
      unreachable
    end
    local.get 0
    local.get 10
    i64.store offset=4 align=4
    local.get 0
    local.get 1
    i32.store
    local.get 2
    i32.const 144
    i32.add
    global.set 0)
        
  ;; Function 21: Encode storage key for Mapping
  ;; Hashes the Mapping prefix + AccountId to generate storage key
  ;; Used for: All Mapping operations (accounts, locks)
  ;; Parameters: (key_data_ptr, encoder_ptr) -> void
  (func $encode_mapping_key (;21;) (type 2) (param i32 i32)
    local.get 0
    i32.load             ;; Load Mapping instance ptr
    i32.load             ;; Load storage prefix
    local.get 1
    call 40              ;; Encode u32 prefix
    local.get 0
    i32.const 4
    i32.add
    local.get 1
    call 36)             ;; Encode AccountId (32 bytes)

  ;; Function 22: Extract encoded buffer slice
  ;; Gets pointer and length from encoder state after encoding
  ;; Used for: Preparing data for seal_set_storage calls
  ;; Parameters: (result_ptr, encoder_ptr, used_len) -> void
  ;; Result: Stores (ptr, len) in result_ptr
  (func $get_encoder_slice (;22;) (type 3) (param i32 i32 i32)
    (local i32 i32)
    global.get 0
    i32.const 32
    i32.sub
    local.tee 3
    global.set 0
    
    ;; Validate bounds
    local.get 2          ;; used_len
    local.get 1
    i32.load offset=4    ;; encoder.capacity
    local.tee 4
    i32.gt_u
    if
      ;; Panic: "index out of bounds"
      local.get 3
      i32.const 0
      i32.store offset=24
      local.get 3
      i32.const 1
      i32.store offset=12
      local.get 3
      i32.const 69080    ;; Error message
      i32.store offset=8
      local.get 3
      i64.const 4
      i64.store offset=16 align=4
      local.get 3
      i32.const 8
      i32.add
      i32.const 69172
      call 27            ;; Panic
      unreachable
    end
    
    ;; Calculate remaining capacity
    local.get 1
    local.get 4
    local.get 2
    i32.sub
    i32.store offset=4   ;; capacity -= used
    local.get 1
    local.get 1
    i32.load             ;; encoder.ptr
    local.tee 1
    local.get 2
    i32.add
    i32.store            ;; ptr += used
    
    ;; Store result
    local.get 0
    local.get 2          ;; len
    i32.store offset=4
    local.get 0
    local.get 1          ;; ptr
    i32.store
    local.get 3
    i32.const 32
    i32.add
    global.set 0)

  ;; Function 23: Allocate or resize encoder buffer
  ;; Grows the encoding buffer when more space needed
  ;; Used for: Encoding large structures, vectors
  ;; Parameters: (result_ptr, align, new_size, realloc_params_ptr) -> void
  (func $encoder_buffer_resize (;23;) (type 5) (param i32 i32 i32 i32)
    (local i32 i32 i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 4
    global.set 0
    
    block (result i32)
      local.get 3
      i32.load offset=4  ;; Check if realloc params present
      if
        local.get 3
        i32.load offset=8
        local.tee 5
        i32.eqz
        if               ;; New allocation
          local.get 4
          i32.const 8
          i32.add
          local.get 1    ;; align
          local.get 2    ;; new_size
          call 78        ;; Allocate
          local.get 4
          i32.load offset=8
          local.set 3
          local.get 4
          i32.load offset=12
          br 2
        end
        ;; Reallocation path
        local.get 3
        i32.load
        local.set 6      ;; old_ptr
        local.get 1
        local.get 2
        call 79          ;; Allocate new buffer
        local.tee 3
        i32.eqz
        local.get 5      ;; old_size
        i32.eqz
        i32.or
        i32.eqz
        if               ;; if both non-zero
          local.get 3
          local.get 6    ;; old_ptr
          local.get 5    ;; old_size
          memory.copy    ;; Copy old data to new buffer
        end
        local.get 2      ;; new_size
        br 1
      end
      ;; Simple allocation
      local.get 4
      local.get 1
      local.get 2
      call 78
      local.get 4
      i32.load
      local.set 3
      local.get 4
      i32.load offset=4
    end
    local.set 5
    
    ;; Store result
    local.get 0
    local.get 3
    local.get 1
    local.get 3
    select               ;; Use align as fallback if allocation failed
    i32.store offset=4
    local.get 0
    local.get 3
    i32.eqz
    i32.store            ;; 0 if success, 1 if failed
    local.get 0
    local.get 5
    local.get 2
    local.get 3
    select
    i32.store offset=8
    local.get 4
    i32.const 16
    i32.add
    global.set 0)

  ;; Function 24: Panic handler for allocation failures
  ;; Reports allocation error with size information
  ;; Parameters: (align, size, error_msg_ptr) -> never_returns
  (func $panic_alloc_failed (;24;) (type 3) (param i32 i32 i32)
    local.get 0
    if                   ;; if align != 0
      global.get 0
      i32.const 48
      i32.sub
      local.tee 0
      global.set 0
      local.get 0
      local.get 1        ;; size
      i32.store offset=12
      local.get 0
      i32.const 2
      i32.store offset=20
      local.get 0
      i32.const 68156    ;; "memory allocation of "
      i32.store offset=16
      local.get 0
      i64.const 1
      i64.store offset=28 align=4
      local.get 0
      i32.const 7
      i32.store offset=44
      local.get 0
      local.get 0
      i32.const 40
      i32.add
      i32.store offset=24
      local.get 0
      local.get 0
      i32.const 12
      i32.add
      i32.store offset=40
      ;; Format and display error
      global.get 0
      i32.const 16
      i32.sub
      local.tee 1
      global.set 0
      local.get 1
      i32.const 0
      i32.store16 offset=12
      local.get 1
      i32.const 68172    ;; " bytes failed"
      i32.store offset=8
      local.get 1
      local.get 0
      i32.const 16
      i32.add
      i32.store offset=4
      local.get 1
      i32.const 4
      i32.add
      call 87            ;; Display error and abort
      unreachable
    end
    ;; Null pointer allocation error
    global.get 0
    i32.const 32
    i32.sub
    local.tee 0
    global.set 0
    local.get 0
    i32.const 0
    i32.store offset=24
    local.get 0
    i32.const 1
    i32.store offset=12
    local.get 0
    i32.const 68096      ;; Generic alloc error
    i32.store offset=8
    local.get 0
    i64.const 4
    i64.store offset=16 align=4
    local.get 0
    i32.const 8
    i32.add
    local.get 2
    call 27              ;; Panic
    unreachable)

  ;; Function 25: Push BalanceLock to vector
  ;; Appends a 32-byte lock structure to locks vector
  ;; Used for: set_lock when adding new lock entry
  ;; Parameters: (vec_ptr, lock_struct_ptr, error_context_ptr) -> void
  (func $vec_push_balance_lock (;25;) (type 3) (param i32 i32 i32)
    (local i32 i32 i32)
    
    ;; Check if vector needs to grow
    local.get 0
    i32.load offset=8    ;; vec.len
    local.tee 4
    local.get 0
    i32.load             ;; vec.capacity
    i32.eq
    if                   ;; if len == capacity, need to grow
      global.get 0
      i32.const 16
      i32.sub
      local.tee 3
      global.set 0
      local.get 3
      i32.const 8
      i32.add
      local.get 0
      local.get 0
      i32.load
      i32.const 1        ;; grow by 1
      i32.const 16       ;; align (BalanceLock is 16 bytes)
      i32.const 32       ;; size of BalanceLock
      call 56            ;; Grow vector
      local.get 3
      i32.load offset=8
      local.tee 5
      i32.const -2147483647
      i32.ne
      if
        ;; Allocation failed
        local.get 5
        local.get 3
        i32.load offset=12
        local.get 2      ;; error context
        call 24          ;; Panic with alloc error
        unreachable
      end
      local.get 3
      i32.const 16
      i32.add
      global.set 0
    end
    
    ;; Increment length
    local.get 0
    local.get 4
    i32.const 1
    i32.add
    i32.store offset=8   ;; vec.len++
    
    ;; Copy lock data (32 bytes: 8-byte id + 24 bytes padding/amount)
    local.get 0
    i32.load offset=4    ;; vec.ptr
    local.get 4
    i32.const 5
    i32.shl              ;; index * 32
    i32.add
    local.tee 0
    local.get 1
    i64.load             ;; Copy first 8 bytes
    i64.store
    local.get 0
    i32.const 8
    i32.add
    local.get 1
    i32.const 8
    i32.add
    i64.load             ;; Copy bytes 8-15
    i64.store
    local.get 0
    i32.const 16
    i32.add
    local.get 1
    i32.const 16
    i32.add
    i64.load             ;; Copy bytes 16-23
    i64.store
    local.get 0
    i32.const 24
    i32.add
    local.get 1
    i32.const 24
    i32.add
    i64.load             ;; Copy bytes 24-31
    i64.store)

  ;; Function 26: Format Error enum for display
  ;; Converts Error variant to string for debug output
  ;; Used for: Error message formatting, panic displays
  ;; Parameters: (formatter_ptr, error_ptr) -> format_result
  (func $fmt_error_enum (;26;) (type 1) (param i32 i32) (result i32)
    (local i32 i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2
    global.set 0
    
    block (result i32)
      block
        block
          block
            ;; Decode error discriminant (first byte - 16)
            i32.const 2
            local.get 0
            i32.load8_u      ;; Error discriminant
            i32.const 16
            i32.sub
            i32.const 255
            i32.and
            local.tee 3
            local.get 3
            i32.const 2
            i32.ge_u
            select
            i32.const 1
            i32.sub
            br_table 1 2 0   ;; Match error variants
          end
          ;; Format specific error with data
          local.get 2
          local.get 0
          i32.store offset=8
          local.get 1
          i32.const 66996  ;; Error name string
          i32.const 6
          local.get 2
          i32.const 8
          i32.add
          i32.const 2      ;; Format specifier
          call 55          ;; Format with args
          br 2
        end
        ;; Simple error (no associated data)
        local.get 1
        i32.load
        i32.const 67002    ;; Error message
        i32.const 14       ;; message length
        local.get 1
        i32.load offset=4
        i32.load offset=12
        call_indirect (type 0) ;; Call formatter
        br 1
      end
      ;; Another error variant
      local.get 2
      local.get 0
      i32.store offset=12
      local.get 1
      i32.const 67016      ;; Different error string
      i32.const 11
      local.get 2
      i32.const 12
      i32.add
      i32.const 3
      call 55
    end
    local.set 0
    local.get 2
    i32.const 16
    i32.add
    global.set 0
    local.get 0)           ;; Return format result

  ;; Function 27: Panic with formatted error
  ;; Final panic handler with error display
  ;; Parameters: (error_struct_ptr, context_ptr) -> never_returns
  (func $panic_fmt (;27;) (type 2) (param i32 i32)
    (local i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2
    global.set 0
    local.get 2
    i32.const 1
    i32.store16 offset=12
    local.get 2
    local.get 1          ;; context
    i32.store offset=8
    local.get 2
    local.get 0          ;; error
    i32.store offset=4
    local.get 2
    i32.const 4
    i32.add
    call 87              ;; Display and abort
    unreachable)

  ;; Function 28: Write AccountData to storage
  ;; Encodes account balance data and persists via seal_set_storage
  ;; Used for: Updating account state after transfers, minting, burning
  ;; Parameters: (account_id_ptr, account_data_ptr) -> void
  ;; Storage key format: BLAKE2(Mapping_prefix || AccountId)
  (func $write_account_to_storage (;28;) (type 2) (param i32 i32)
    (local i32 i32 i32 i32 i64)
    global.get 0
    i32.const 80
    i32.sub
    local.tee 2          ;; Local 2: stack frame pointer
    global.set 0
    
    ;; Copy AccountId (32 bytes) to stack at offset 24
    ;; This builds the full storage key: prefix || account_id
    local.get 2
    i32.const 32
    i32.add
    local.get 0
    i32.const 8
    i32.add
    i64.load align=1
    i64.store align=4    ;; Copy bytes 8-15 of AccountId
    local.get 2
    i32.const 40
    i32.add
    local.get 0
    i32.const 16
    i32.add
    i64.load align=1
    i64.store align=4    ;; Copy bytes 16-23 of AccountId
    local.get 2
    i32.const 48
    i32.add
    local.get 0
    i32.const 24
    i32.add
    i64.load align=1
    i64.store align=4    ;; Copy bytes 24-31 of AccountId
    
    ;; Set up storage key structure at offset 20
    local.get 2
    i32.const 66840      ;; Mapping prefix (for account mapping)
    i32.store offset=20
    local.get 2
    local.get 0
    i64.load align=1
    i64.store offset=24 align=4 ;; Copy bytes 0-7 of AccountId
    
    ;; Initialize encoder buffer at offset 68
    local.get 2
    i32.const 0
    i32.store offset=64  ;; encoder.used = 0
    local.get 2
    i64.const 16384      ;; encoder.capacity = 16384
    i64.store offset=72 align=4
    local.get 2
    i32.const 69258      ;; encoder.ptr = 69258 (global buffer)
    i32.store offset=68
    
    ;; Encode the storage key (prefix + AccountId)
    local.get 2
    i32.const 20
    i32.add
    local.get 2
    i32.const 68
    i32.add
    local.tee 3          ;; Local 3: encoder ptr
    call 21              ;; Encode Mapping key
    
    ;; Get encoded key slice
    local.get 2
    local.get 2
    i64.load offset=68 align=4
    i64.store offset=56 align=4
    local.get 2
    i32.const 8
    i32.add
    local.get 2
    i32.const 56
    i32.add
    local.tee 4          ;; Local 4: buffer state ptr
    local.get 2
    i32.load offset=76   ;; encoder.used (key length)
    call 22              ;; Extract slice (ptr, len)
    
    local.get 2
    i32.load offset=12
    local.set 0          ;; Local 0: key_len
    local.get 2
    i32.load offset=8
    local.set 5          ;; Local 5: key_ptr
    
    ;; Reset encoder for value encoding
    local.get 2
    i64.load offset=56 align=4
    local.set 6          ;; Local 6: save encoder state
    local.get 2
    i32.const 0
    i32.store offset=76  ;; encoder.used = 0 (reset)
    local.get 2
    local.get 6
    i64.store offset=68 align=4
    
    ;; Encode AccountData (free, reserved, frozen)
    local.get 1          ;; account_data_ptr
    local.get 3          ;; encoder ptr
    call 29              ;; Encode 3 x u128 fields
    
    ;; Get encoded value slice
    local.get 2
    local.get 2
    i64.load offset=68 align=4
    i64.store offset=56 align=4
    local.get 2
    local.get 4
    local.get 2
    i32.load offset=76   ;; encoder.used (value length)
    call 22              ;; Extract value slice
    
    ;; Call seal_set_storage
    local.get 5          ;; key_ptr
    local.get 0          ;; key_len
    local.get 2
    i32.load             ;; value_ptr
    local.get 2
    i32.load offset=4    ;; value_len
    call 3               ;; seal_set_storage(key_ptr, key_len, val_ptr, val_len)
    drop                 ;; Ignore return value
    
    local.get 2
    i32.const 80
    i32.add
    global.set 0)        ;; Restore stack

  ;; Function 29: Encode 3 u128 values (AccountData fields)
  ;; Writes free, reserved, frozen balances to encoder
  ;; Used for: AccountData encoding
  ;; Parameters: (account_data_ptr, encoder_ptr) -> void
  (func $encode_account_data (;29;) (type 2) (param i32 i32)
    local.get 0
    i64.load             ;; free (low 64 bits)
    local.get 0
    i64.load offset=8    ;; free (high 64 bits)
    local.get 1
    call 33              ;; Encode first u128
    local.get 0
    i64.load offset=16   ;; reserved (low)
    local.get 0
    i64.load offset=24   ;; reserved (high)
    local.get 1
    call 33              ;; Encode second u128
    local.get 0
    i64.load offset=32   ;; frozen (low)
    local.get 0
    i64.load offset=40   ;; frozen (high)
    local.get 1
    call 33)             ;; Encode third u128

  ;; ============================================================================
  ;; STORAGE OPERATIONS - WRITE PATHS
  ;; ============================================================================

  ;; Function 30: Write Vec<BalanceLock> to storage
  ;; Encodes a vector of locks and persists to storage key
  ;; Used for: set_lock, remove_lock when updating account locks
  ;; Parameters: (account_id_ptr, locks_vec_ptr, vec_len) -> void
  ;; Storage layout: Compact<u32> length prefix + N × BalanceLock entries
  (func $write_locks_to_storage (;30;) (type 3) (param i32 i32 i32)
    (local i32 i32 i32 i64)
    global.get 0
    i32.const 80
    i32.sub
    local.tee 3
    global.set 0
    
    ;; Copy AccountId to build storage key
    local.get 3
    i32.const 32
    i32.add
    local.get 0
    i32.const 8
    i32.add
    i64.load align=1
    i64.store align=4    ;; AccountId bytes 8-15
    local.get 3
    i32.const 40
    i32.add
    local.get 0
    i32.const 16
    i32.add
    i64.load align=1
    i64.store align=4    ;; AccountId bytes 16-23
    local.get 3
    i32.const 48
    i32.add
    local.get 0
    i32.const 24
    i32.add
    i64.load align=1
    i64.store align=4    ;; AccountId bytes 24-31
    
    ;; Set Mapping prefix for locks
    local.get 3
    i32.const 66836      ;; Locks mapping prefix (different from accounts)
    i32.store offset=20
    local.get 3
    local.get 0
    i64.load align=1
    i64.store offset=24 align=4 ;; AccountId bytes 0-7
    
    ;; Initialize encoder
    local.get 3
    i32.const 0
    i32.store offset=64
    local.get 3
    i64.const 16384
    i64.store offset=72 align=4
    local.get 3
    i32.const 69258      ;; Global encoder buffer
    i32.store offset=68
    
    ;; Encode storage key
    local.get 3
    i32.const 20
    i32.add
    local.get 3
    i32.const 68
    i32.add
    local.tee 0          ;; Local 0: encoder ptr (reused)
    call 21              ;; Encode key
    
    ;; Get key slice
    local.get 3
    local.get 3
    i64.load offset=68 align=4
    i64.store offset=56 align=4
    local.get 3
    i32.const 8
    i32.add
    local.get 3
    i32.const 56
    i32.add
    local.get 3
    i32.load offset=76
    call 22              ;; Extract key
    
    ;; Reset encoder for value
    local.get 3
    i64.load offset=56 align=4
    local.set 6
    local.get 3
    i64.const 1          ;; Special marker for Vec encoding
    i64.store offset=56 align=4
    local.get 3
    i32.load offset=12
    local.set 4          ;; Local 4: key_len
    local.get 3
    i32.load offset=8
    local.set 5          ;; Local 5: key_ptr
    local.get 3
    i32.const 0
    i32.store offset=76
    local.get 3
    local.get 6
    i64.store offset=68 align=4
    
    ;; Encode Vec length and elements
    local.get 2          ;; vec_len
    local.get 0
    call 31              ;; Encode Compact<u32> length prefix
    
    ;; Encode each BalanceLock (loop over vec_len)
    local.get 2
    i32.const 5
    i32.shl              ;; vec_len * 32 (size of BalanceLock)
    local.set 0
    loop
      local.get 0
      if
        local.get 3
        i32.const 68
        i32.add
        local.tee 2        ;; encoder
        local.get 1
        i32.const 16
        i32.add
        i32.const 8
        call 32            ;; Encode lock.id (8 bytes)
        local.get 1
        i64.load           ;; lock.amount (low 64)
        local.get 1
        i64.load offset=8  ;; lock.amount (high 64)
        local.get 2
        call 33            ;; Encode u128 amount
        local.get 0
        i32.const 32
        i32.sub
        local.set 0
        local.get 1
        i32.const 32
        i32.add
        local.set 1        ;; Next lock
        br 1
      end
    end
    
    ;; Get encoded value slice and write to storage
    local.get 3
    local.get 3
    i64.load offset=68 align=4
    i64.store offset=56 align=4
    local.get 3
    local.get 3
    i32.const 56
    i32.add
    local.get 3
    i32.load offset=76
    call 22              ;; Extract value
    local.get 5          ;; key_ptr
    local.get 4          ;; key_len
    local.get 3
    i32.load             ;; value_ptr
    local.get 3
    i32.load offset=4    ;; value_len
    call 3               ;; seal_set_storage
    drop
    local.get 3
    i32.const 80
    i32.add
    global.set 0)

  ;; ============================================================================
  ;; SCALE ENCODING PRIMITIVES
  ;; ============================================================================

  ;; Function 31: Encode Compact<u32> (variable-length integer)
  ;; SCALE compact encoding: 0-63 = 1 byte, 64-16383 = 2 bytes, etc.
  ;; Used for: Vec lengths, enum discriminants, small integers
  ;; Parameters: (value, encoder_ptr) -> void
  (func $encode_compact_u32 (;31;) (type 2) (param i32 i32)
    (local i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2
    global.set 0
    
    block
      ;; Single-byte mode (0-63)
      local.get 0
      i32.const 63
      i32.le_u
      if
        local.get 1
        local.get 0
        i32.const 2
        i32.shl          ;; value << 2 (mode bits = 00)
        call 64          ;; Write single byte
        br 1
      end
      
      ;; Two-byte mode (64-16383)
      local.get 0
      i32.const 16383
      i32.le_u
      if
        local.get 2
        local.get 0
        i32.const 2
        i32.shl
        i32.const 1
        i32.or           ;; (value << 2) | 0b01
        i32.store16 offset=14
        local.get 1
        local.get 2
        i32.const 14
        i32.add
        i32.const 2      ;; Write 2 bytes
        call 32
        br 1
      end
      
      ;; Four-byte mode (16384-1073741823)
      local.get 0
      i32.const 1073741823
      i32.le_u
      if
        local.get 0
        i32.const 2
        i32.shl
        i32.const 2
        i32.or           ;; (value << 2) | 0b10
        local.get 1
        call 40          ;; Write 4 bytes
        br 1
      end
      
      ;; Big-integer mode (>= 1073741824)
      local.get 1
      i32.const 3
      call 64            ;; Mode byte = 0b11
      local.get 0
      local.get 1
      call 40            ;; Write full u32
    end
    local.get 2
    i32.const 16
    i32.add
    global.set 0)

  ;; Function 32: Write bytes to encoder buffer
  ;; Appends raw bytes to the encoding buffer with bounds checking
  ;; Used for: Encoding byte arrays, AccountIds, lock IDs
  ;; Parameters: (encoder_ptr, data_ptr, data_len) -> void
  ;; Panics if: Buffer capacity exceeded
  (func $encoder_write_bytes (;32;) (type 3) (param i32 i32 i32)
    (local i32 i32 i32)
    block
      ;; Calculate new position
      local.get 0
      i32.load offset=8  ;; encoder.used
      local.tee 4
      local.get 2        ;; data_len
      i32.add
      local.tee 3        ;; new_used = used + data_len
      local.get 4
      i32.ge_u           ;; Check for overflow
      if
        local.get 3
        local.get 0
        i32.load offset=4 ;; encoder.capacity
        local.tee 5
        i32.gt_u
        br_if 1          ;; if new_used > capacity, panic
        
        ;; Copy data to buffer
        local.get 2
        if               ;; if data_len > 0
          local.get 0
          i32.load       ;; encoder.ptr
          local.get 4    ;; old used offset
          i32.add
          local.get 1    ;; data_ptr
          local.get 2    ;; data_len
          memory.copy    ;; Copy bytes
        end
        
        ;; Update used count
        local.get 0
        local.get 3
        i32.store offset=8 ;; encoder.used = new_used
        return
      end
      ;; Overflow in addition
      i32.const 69108    ;; "capacity overflow"
      call 38
      unreachable
    end
    ;; Capacity exceeded
    local.get 3          ;; new_used
    local.get 5          ;; capacity
    i32.const 69124      ;; Error context
    call 18              ;; Panic
    unreachable)

  ;; Function 33: Encode u128 (Balance) value
  ;; Writes 128-bit integer in little-endian format (16 bytes)
  ;; Used for: Encoding Balance fields (free, reserved, frozen, amounts)
  ;; Parameters: (value_low_64, value_high_64, encoder_ptr) -> void
  (func $encode_u128 (;33;) (type 10) (param i64 i64 i32)
    (local i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 3
    global.set 0
    
    ;; Store u128 on stack in little-endian
    local.get 3
    local.get 1          ;; high 64 bits
    i64.store offset=8
    local.get 3
    local.get 0          ;; low 64 bits
    i64.store
    
    ;; Write 16 bytes to encoder
    local.get 2          ;; encoder_ptr
    local.get 3          ;; stack pointer
    i32.const 16         ;; length (16 bytes for u128)
    call 32              ;; encoder_write_bytes
    
    local.get 3
    i32.const 16
    i32.add
    global.set 0)

  ;; Function 34: Encode event topic (AccountId) to encoder
  ;; Encodes AccountId and hashes it to create event topic
  ;; Used for: Event emission - creating indexed topics for Transfer, Endowed, etc.
  ;; Parameters: (buffer_state_ptr, account_id_ptr) -> void
  ;; Process: AccountId -> SCALE encode -> BLAKE2-256 hash -> append to buffer
  (func $encode_event_topic (;34;) (type 2) (param i32 i32)
    (local i32 i32 i32 i64)
    global.get 0
    i32.const 80
    i32.sub
    local.tee 2          ;; Local 2: stack frame
    global.set 0
    
    ;; Extract remaining buffer (where to write encoded key)
    local.get 2
    i32.const 24
    i32.add
    local.tee 4          ;; Local 4: buffer slice ptr
    local.get 0
    call 35              ;; get_remaining_buffer
    
    ;; Save buffer state
    local.get 2
    i64.load offset=24 align=4
    local.set 5          ;; Local 5: saved buffer descriptor
    local.get 2
    i32.const 0
    i32.store offset=44
    local.get 2
    local.get 5
    i64.store offset=36 align=4
    
    ;; Encode the AccountId (32 bytes)
    local.get 1          ;; account_id_ptr
    local.get 2
    i32.const 36
    i32.add
    local.tee 3          ;; Local 3: encoder state ptr
    call 36              ;; encode_account_id (writes 32 bytes)
    
    ;; Get the encoded AccountId slice
    local.get 2
    local.get 2
    i64.load offset=36 align=4
    i64.store offset=24 align=4
    local.get 2
    i32.const 16
    i32.add
    local.get 4
    local.get 2
    i32.load offset=44   ;; bytes_written (should be 32)
    call 22              ;; Extract encoded data slice
    
    ;; Hash the encoded AccountId to create topic
    local.get 3
    local.get 2
    i32.load offset=16   ;; encoded_ptr
    local.get 2
    i32.load offset=20   ;; encoded_len (32)
    call 37              ;; encode_storage_key_hash (BLAKE2-256)
    
    ;; Update original buffer's used count
    local.get 2
    i32.const 8
    i32.add
    local.get 0
    i32.load offset=8    ;; buffer.used
    local.tee 1          ;; Local 1: reused for old_used
    local.get 0
    i32.load             ;; buffer.ptr
    local.get 0
    i32.load offset=4    ;; buffer.capacity
    i32.const 67408      ;; Error context
    call 16              ;; Bounds check
    
    ;; Initialize encoder for the hash result
    local.get 2
    i32.const 0
    i32.store offset=76
    local.get 2
    local.get 2
    i64.load offset=8
    i64.store offset=68 align=4
    
    ;; Append the 32-byte hash to original buffer
    local.get 3
    local.get 2
    i32.const 68
    i32.add
    call 36              ;; Write hash as AccountId-sized value
    
    ;; Update buffer used count
    local.get 1          ;; old_used
    local.get 1
    local.get 2
    i32.load offset=76   ;; hash_bytes_written (32)
    i32.add
    local.tee 3          ;; new_used
    i32.gt_u
    if
      i32.const 67424    ;; "capacity overflow"
      call 38
      unreachable
    end
    
    local.get 0
    local.get 3
    i32.store offset=8   ;; buffer.used = old_used + 32
    local.get 2
    i32.const 80
    i32.add
    global.set 0)

  ;; ============================================================================
  ;; CONTRACT ENTRYPOINTS AND MESSAGE DISPATCH
  ;; ============================================================================

  ;; Function 35: Extract remaining buffer slice
  ;; Gets the unread portion of a buffer
  ;; Used for: Input buffer handling, decoder state management
  ;; Parameters: (result_ptr, buffer_state_ptr) -> void
  ;; Result: Stores (ptr, len, 0) representing unused buffer portion
  (func $get_remaining_buffer (;35;) (type 2) (param i32 i32)
    (local i32 i32)
    local.get 1
    i32.load offset=4    ;; buffer.capacity
    local.tee 3
    local.get 1
    i32.load offset=8    ;; buffer.used
    local.tee 2
    i32.lt_u
    if
      ;; Invalid state: used > capacity
      local.get 2
      local.get 3
      i32.const 69156    ;; Error message
      call 19            ;; Panic
      unreachable
    end
    
    ;; Calculate remaining
    local.get 0
    i32.const 0
    i32.store offset=8   ;; result.extra = 0
    local.get 0
    local.get 3
    local.get 2
    i32.sub
    i32.store offset=4   ;; result.len = capacity - used
    local.get 0
    local.get 1
    i32.load             ;; buffer.ptr
    local.get 2          ;; used offset
    i32.add
    i32.store)           ;; result.ptr = ptr + used

  ;; Function 36: Encode fixed 32-byte array (AccountId)
  ;; Writes AccountId without length prefix (fixed-size type)
  ;; Used for: Encoding AccountId in events, storage keys, transfers
  ;; Parameters: (account_id_ptr, encoder_ptr) -> void
  (func $encode_account_id (;36;) (type 2) (param i32 i32)
    local.get 1          ;; encoder_ptr
    local.get 0          ;; account_id_ptr
    i32.const 32         ;; AccountId is always 32 bytes
    call 32)             ;; encoder_write_bytes

  ;; Function 37: Encode and hash 32-byte value to storage key
  ;; Creates deterministic storage key using BLAKE2-256
  ;; Used for: Mapping<AccountId, T> key generation
  ;; Parameters: (encoder_ptr, key_data_ptr, key_len) -> void
  ;; Output: 32-byte BLAKE2 hash appended to encoder
  (func $encode_storage_key_hash (;37;) (type 3) (param i32 i32 i32)
    (local i32 i32 i32 i32 i32 i32 i32)
    global.get 0
    i32.const 80
    i32.sub
    local.tee 3
    global.set 0
    
    ;; Prepare hash input buffer (32-byte output)
    local.get 3
    i32.const 40
    i32.add
    local.tee 4
    i64.const 0
    i64.store
    local.get 3
    i32.const 32
    i32.add
    local.tee 5
    i64.const 0
    i64.store
    local.get 3
    i32.const 24
    i32.add
    local.tee 6
    i64.const 0
    i64.store
    local.get 3
    i64.const 0
    i64.store offset=16  ;; Zero output buffer
    
    block
      block
        local.get 2        ;; key_len
        i32.const 33
        i32.ge_u
        if                 ;; if len >= 33, hash it
          ;; Prepare 32-byte hash output on stack
          local.get 3
          i32.const 72
          i32.add
          local.tee 7
          i64.const 0
          i64.store
          local.get 3
          i32.const -64
          i32.sub
          local.tee 8
          i64.const 0
          i64.store
          local.get 3
          i32.const 56
          i32.add
          local.tee 9
          i64.const 0
          i64.store
          local.get 3
          i64.const 0
          i64.store offset=48
          
          ;; Hash the key data
          local.get 1      ;; key_data_ptr
          local.get 2      ;; key_len
          local.get 3
          i32.const 48
          i32.add
          call 9           ;; seal_hash_blake2_256
          
          ;; Copy hash to output buffer
          local.get 4
          local.get 7
          i64.load
          i64.store
          local.get 5
          local.get 8
          i64.load
          i64.store
          local.get 6
          local.get 9
          i64.load
          i64.store
          local.get 3
          local.get 3
          i64.load offset=48
          i64.store offset=16
          br 1
        end
        
        ;; Key fits in 32 bytes: direct copy
        local.get 3
        i32.const 8
        i32.add
        local.get 2      ;; key_len
        local.get 3
        i32.const 16
        i32.add
        i32.const 32     ;; max_len
        i32.const 66900  ;; Error context
        call 17          ;; Bounds check
        local.get 3
        i32.load offset=12
        local.tee 4
        local.get 2
        i32.ne
        br_if 1          ;; Length mismatch - panic
        
        local.get 2
        i32.eqz
        br_if 0          ;; if len == 0, skip copy
        local.get 3
        i32.load offset=8
        local.get 1      ;; src
        local.get 2      ;; len
        memory.copy
      end
      
      ;; Write 32-byte result to encoder
      local.get 0        ;; encoder_ptr
      local.get 3
      i64.load offset=16
      i64.store align=1
      local.get 0
      i32.const 24
      i32.add
      local.get 3
      i32.const 40
      i32.add
      i64.load
      i64.store align=1
      local.get 0
      i32.const 16
      i32.add
      local.get 3
      i32.const 32
      i32.add
      i64.load
      i64.store align=1
      local.get 0
      i32.const 8
      i32.add
      local.get 3
      i32.const 24
      i32.add
      i64.load
      i64.store align=1
      local.get 3
      i32.const 80
      i32.add
      global.set 0
      return
    end
    
    ;; Length validation failed
    global.get 0
    i32.const 48
    i32.sub
    local.tee 0
    global.set 0
    local.get 0
    local.get 4          ;; actual_len
    i32.store offset=4
    local.get 0
    local.get 2          ;; expected_len
    i32.store
    local.get 0
    i32.const 3
    i32.store offset=12
    local.get 0
    i32.const 68916      ;; Error format string
    i32.store offset=8
    local.get 0
    i64.const 2
    i64.store offset=20 align=4
    local.get 0
    i32.const 7
    i32.store offset=44
    local.get 0
    i32.const 7
    i32.store offset=36
    local.get 0
    local.get 0
    i32.const 32
    i32.add
    i32.store offset=16
    local.get 0
    local.get 0
    i32.const 4
    i32.add
    i32.store offset=40
    local.get 0
    local.get 0
    i32.store offset=32
    local.get 0
    i32.const 8
    i32.add
    i32.const 66916      ;; Panic context
    call 27
    unreachable)

  ;; Function 38: Panic with message
  ;; Generic panic handler for string messages
  ;; Parameters: (message_ptr) -> never_returns
  (func $panic_with_msg (;38;) (type 4) (param i32)
    (local i32)
    global.get 0
    i32.const 32
    i32.sub
    local.tee 1
    global.set 0
    local.get 1
    i32.const 0
    i32.store offset=16
    local.get 1
    i32.const 1
    i32.store offset=4
    local.get 1
    i64.const 4
    i64.store offset=8 align=4
    local.get 1
    i32.const 43
    i32.store offset=28
    local.get 1
    i32.const 68326      ;; Panic format context
    i32.store offset=24
    local.get 1
    local.get 1
    i32.const 24
    i32.add
    i32.store
    local.get 1
    local.get 0          ;; message
    call 27
    unreachable)

  ;; Function 39: Encode Compact<u32> length prefix for vectors
  ;; Wrapper around compact encoding specifically for Vec lengths
  ;; Used for: Vec<BalanceLock>, Vec<Event> serialization
  ;; Parameters: (vec_len, encoder_ptr) -> void
  (func $encode_vec_length (;39;) (type 2) (param i32 i32)
    (local i32 i32)
    global.get 0
    i32.const 32
    i32.sub
    local.tee 2
    global.set 0
    
    ;; Get current encoder position for bounds checking
    local.get 2
    i32.const 8
    i32.add
    local.get 0
    i32.load offset=8    ;; encoder.used
    local.tee 3
    local.get 0
    i32.load             ;; encoder.ptr
    local.get 0
    i32.load offset=4    ;; encoder.capacity
    i32.const 67408      ;; Error context
    call 16              ;; Bounds check
    
    ;; Set up compact encoding state
    local.get 2
    i32.const 0
    i32.store offset=28
    local.get 2
    local.get 2
    i64.load offset=8
    i64.store offset=20 align=4
    
    ;; Encode the length as Compact<u32>
    local.get 1          ;; vec_len
    local.get 2
    i32.const 20
    i32.add
    call 31              ;; encode_compact_u32
    
    ;; Update encoder used count
    local.get 3
    local.get 3
    local.get 2
    i32.load offset=28   ;; bytes written
    i32.add
    local.tee 1
    i32.gt_u
    if
      i32.const 67424    ;; "capacity overflow"
      call 38
      unreachable
    end
    local.get 0
    local.get 1
    i32.store offset=8   ;; encoder.used = old_used + bytes_written
    local.get 2
    i32.const 32
    i32.add
    global.set 0)

  ;; ============================================================================
  ;; SCALE ENCODING PRIMITIVES (continued)
  ;; ============================================================================

  ;; Function 40: Encode u32 value to encoder
  ;; Writes 4-byte integer in little-endian format
  ;; Used for: Encoding counters, discriminants, Mapping prefixes
  ;; Parameters: (value_u32, encoder_ptr) -> void
  (func $encode_u32 (;40;) (type 2) (param i32 i32)
    (local i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2
    global.set 0
    
    ;; Store u32 on stack
    local.get 2
    local.get 0          ;; value
    i32.store offset=12
    
    ;; Write 4 bytes to encoder
    local.get 1          ;; encoder_ptr
    local.get 2
    i32.const 12
    i32.add
    i32.const 4          ;; length (4 bytes for u32)
    call 32              ;; encoder_write_bytes
    
    local.get 2
    i32.const 16
    i32.add
    global.set 0)

  ;; Function 41: Read single byte from decode buffer (with EOF handling)
  ;; Attempts to read one byte, returns success flag and value
  ;; Used for: Decoding enum discriminants, flags, Option<T>
  ;; Parameters: (result_ptr, reader_ptr) -> void
  ;; Result: result[0] = EOF flag (0=success, 1=EOF), result[1] = byte value
  (func $decode_byte (;41;) (type 2) (param i32 i32)
    (local i32)
    local.get 0
    local.get 1
    i32.load offset=4    ;; reader.remaining
    local.tee 2
    if (result i32)      ;; if remaining > 0
      local.get 1
      local.get 2
      i32.const 1
      i32.sub
      i32.store offset=4 ;; remaining--
      local.get 1
      local.get 1
      i32.load           ;; reader.ptr
      local.tee 1
      i32.const 1
      i32.add
      i32.store          ;; ptr++
      local.get 1
      i32.load8_u        ;; Read byte
    else
      local.get 1        ;; EOF: return reader ptr as dummy
    end
    i32.store8 offset=1  ;; result.value = byte
    local.get 0
    local.get 2
    i32.eqz
    i32.store8)          ;; result.is_eof = (remaining == 0)

  ;; ============================================================================
  ;; CONTRACT INITIALIZATION AND CALLER CONTEXT
  ;; ============================================================================

  ;; Function 42: Emit Transfer event
  ;; Constructs and emits Transfer event with from/to/value fields
  ;; Used for: All balance transfer operations
  ;; Parameters: (transfer_event_ptr) -> void
  ;; Event layout: Option<AccountId> from, Option<AccountId> to, Balance value
  (func $emit_transfer_event (;42;) (type 4) (param i32)
    (local i32 i32 i32 i32 i32 i64 i64 i64)
    global.get 0
    i32.const -64
    i32.add
    local.tee 1          ;; Local 1: stack frame
    global.set 0
    
    ;; Initialize encoder for event data
    local.get 1
    i64.const 16384
    i64.store offset=40 align=4
    local.get 1
    i32.const 69258      ;; Global encoder buffer
    i32.store offset=36
    
    ;; Load transfer value (Balance)
    local.get 0
    i64.load offset=40   ;; value (high 64)
    local.set 6
    local.get 0
    i64.load offset=32   ;; value (low 64)
    local.set 7
    
    ;; Encode event type discriminant
    local.get 1
    i32.const 36
    i32.add
    local.tee 2          ;; Local 2: encoder ptr
    i32.const 2          ;; Transfer event discriminant
    call 39              ;; encode_vec_length (reused for discriminant)
    
    ;; Encode event signature string
    local.get 2
    i32.const 67586      ;; "Transfer" string
    call 34              ;; encode_event_topic
    
    ;; Build event payload structure
    local.get 1
    i32.const 48
    i32.add
    local.tee 3          ;; Local 3: payload builder ptr
    local.get 2
    local.get 0          ;; transfer_event_ptr
    call 43              ;; Build event with from/to topics
    
    ;; Extract encoded event data
    local.get 1
    i32.const 16
    i32.add
    local.tee 2
    local.get 3
    call 44              ;; Get event buffer slice
    
    local.get 1
    i32.const 56
    i32.add
    local.get 1
    i32.const 24
    i32.add
    i32.load
    i32.store
    local.get 1
    local.get 1
    i64.load offset=16 align=4
    local.tee 8          ;; Local 8: event buffer descriptor
    i64.store offset=48
    
    ;; Prepare topics and data for seal_deposit_event
    local.get 1
    i32.load offset=28
    local.set 4          ;; Local 4: topics_ptr
    local.get 1
    i32.load offset=32
    local.set 5          ;; Local 5: topics_len
    local.get 1
    i32.const 0
    i32.store offset=24
    local.get 1
    local.get 8
    i64.store offset=16 align=4
    
    ;; Encode event fields to data section
    local.get 0          ;; transfer_event_ptr
    local.get 2
    call 36              ;; Encode from (Option<AccountId>)
    local.get 7          ;; value (low 64)
    local.get 6          ;; value (high 64)
    local.get 2
    call 33              ;; Encode Balance value
    
    ;; Get final event data slice
    local.get 1
    local.get 1
    i64.load offset=16 align=4
    i64.store offset=48
    local.get 1
    i32.const 8
    i32.add
    local.get 3
    local.get 1
    i32.load offset=24
    call 22              ;; Extract data slice
    
    ;; Emit the event
    local.get 4          ;; topics_ptr
    local.get 5          ;; topics_len
    local.get 1
    i32.load offset=8    ;; data_ptr
    local.get 1
    i32.load offset=12   ;; data_len
    call 2               ;; seal_deposit_event
    
    local.get 1
    i32.const -64
    i32.sub
    global.set 0)

  ;; Function 43: Build event topics buffer with hashed AccountId
  ;; Encodes AccountId, hashes it, and appends to encoder buffer
  ;; Used for: Creating indexed topics for events (Transfer from/to, etc.)
  ;; Parameters: (result_ptr, encoder_ptr, account_id_ptr) -> void
  ;; Result: Updates encoder and returns buffer state with appended topic hash
  (func $build_event_topic_hash (;43;) (type 3) (param i32 i32 i32)
    (local i32 i32 i32 i64)
    global.get 0
    i32.const 80
    i32.sub
    local.tee 3          ;; Local 3: stack frame
    global.set 0
    
    ;; Extract remaining buffer space from encoder
    local.get 3
    i32.const 24
    i32.add
    local.tee 5          ;; Local 5: temp buffer state ptr
    local.get 1          ;; encoder_ptr
    call 35              ;; get_remaining_buffer
    
    ;; Save buffer state
    local.get 3
    i64.load offset=24 align=4
    local.set 6          ;; Local 6: saved buffer descriptor
    local.get 3
    i32.const 0
    i32.store offset=44
    local.get 3
    local.get 6
    i64.store offset=36 align=4
    
    ;; Encode the AccountId (32 bytes) into temporary buffer
    local.get 2          ;; account_id_ptr
    local.get 3
    i32.const 36
    i32.add
    local.tee 4          ;; Local 4: temp encoder ptr
    call 36              ;; encode_account_id (writes 32 bytes)
    
    ;; Get the encoded AccountId slice
    local.get 3
    local.get 3
    i64.load offset=36 align=4
    i64.store offset=24 align=4
    local.get 3
    i32.const 16
    i32.add
    local.get 5
    local.get 3
    i32.load offset=44   ;; bytes_written (should be 32)
    call 22              ;; Extract encoded slice
    
    ;; Hash the encoded AccountId to create 32-byte topic
    local.get 4
    local.get 3
    i32.load offset=16   ;; encoded_account_ptr
    local.get 3
    i32.load offset=20   ;; encoded_account_len (32)
    call 37              ;; encode_storage_key_hash (BLAKE2-256)
    
    ;; Prepare to append hash to original encoder buffer
    local.get 3
    i32.const 8
    i32.add
    local.get 1
    i32.load offset=8    ;; encoder.used
    local.tee 2          ;; Local 2: old_used (reused)
    local.get 1
    i32.load             ;; encoder.ptr
    local.get 1
    i32.load offset=4    ;; encoder.capacity
    i32.const 67408      ;; Error context
    call 16              ;; Bounds check
    
    ;; Initialize temp encoder for hash
    local.get 3
    i32.const 0
    i32.store offset=76
    local.get 3
    local.get 3
    i64.load offset=8
    i64.store offset=68 align=4
    
    ;; Write 32-byte hash to temp encoder
    local.get 4
    local.get 3
    i32.const 68
    i32.add
    call 36              ;; Write hash (32 bytes)
    
    ;; Calculate new used count
    local.get 2          ;; old_used
    local.get 2
    local.get 3
    i32.load offset=76   ;; bytes_written (32)
    i32.add
    local.tee 4          ;; Local 4: new_used (reused)
    i32.gt_u
    if
      i32.const 67424    ;; "capacity overflow"
      call 38
      unreachable
    end
    
    ;; Update original encoder's used count
    local.get 1
    i32.const 8
    i32.add
    local.tee 2          ;; Local 2: encoder.used field ptr (reused)
    local.get 4
    i32.store            ;; encoder.used = old_used + 32
    
    ;; Copy updated encoder state to result
    local.get 0
    i32.const 8
    i32.add
    local.get 2
    i32.load
    i32.store            ;; result.used = encoder.used
    local.get 0
    local.get 1
    i64.load align=4
    i64.store align=4    ;; result.ptr, result.capacity = encoder.ptr, encoder.capacity
    
    local.get 3
    i32.const 80
    i32.add
    global.set 0)

  ;; Function 44: Extract event buffer descriptor
  ;; Copies buffer state for event construction
  ;; Used for: Preparing event data before seal_deposit_event
  ;; Parameters: (result_ptr, buffer_ptr) -> void
  ;; Result: Copies buffer metadata (ptr, len, capacity)
  (func $copy_event_buffer_state (;44;) (type 2) (param i32 i32)
    (local i32 i32 i64)
    global.get 0
    i32.const 32
    i32.sub
    local.tee 2
    global.set 0
    
    ;; Copy buffer descriptor
    local.get 2
    i32.const 24
    i32.add
    local.tee 3          ;; Local 3: temp descriptor ptr
    i32.const 0
    i32.store
    local.get 2
    local.get 1
    i64.load align=4
    i64.store offset=16
    
    ;; Extract slice from buffer
    local.get 2
    i32.const 8
    i32.add
    local.get 2
    i32.const 16
    i32.add
    local.get 1
    i32.const 8
    i32.add
    i32.load             ;; buffer.used
    call 22              ;; get_encoder_slice
    
    local.get 2
    i64.load offset=8
    local.set 4          ;; Local 4: slice descriptor
    
    ;; Store result
    local.get 0
    i32.const 8
    i32.add
    local.get 3
    i32.load
    i32.store            ;; result.extra = 0
    local.get 0
    local.get 2
    i64.load offset=16
    i64.store align=4    ;; result.buffer_state
    local.get 0
    local.get 4
    i64.store offset=12 align=4 ;; result.slice (ptr, len)
    
    local.get 2
    i32.const 32
    i32.add
    global.set 0)

  ;; ============================================================================
  ;; CONTRACT CALLER AND VALUE CONTEXT
  ;; ============================================================================

  ;; Function 45: Get caller AccountId from host
  ;; Retrieves the AccountId of the contract caller
  ;; Used for: Authentication in transfer, mint, set_balance
  ;; Parameters: (output_buffer_ptr) -> void
  ;; Output: Writes 32-byte AccountId via seal_caller
  (func $get_caller_account_id (;45;) (type 4) (param i32)
    (local i32 i32 i32 i32)
    global.get 0
    i32.const 48
    i32.sub
    local.tee 1
    global.set 0
    
    ;; Prepare buffer for seal_caller
    local.get 1
    i32.const 16384      ;; buffer size
    i32.store offset=16
    i32.const 69258      ;; buffer ptr
    local.get 1
    i32.const 16
    i32.add
    local.tee 2          ;; Local 2: size_ptr
    call 7               ;; seal_caller(output_ptr, size_ptr)
    
    ;; Validate returned size
    local.get 1
    i32.const 8
    i32.add
    local.get 1
    i32.load offset=16   ;; actual_size
    i32.const 69258      ;; buffer_ptr
    i32.const 16384      ;; buffer_capacity
    call 46              ;; Validate bounds
    
    ;; Check if we got 32 bytes (AccountId size)
    local.get 1
    i32.load offset=12   ;; actual_len
    i32.const 31
    i32.gt_u
    if
      ;; Copy AccountId to output (32 bytes)
      local.get 1
      i32.load offset=8  ;; buffer_ptr
      local.tee 3        ;; Local 3: source ptr
      i32.load8_u        ;; first byte (discriminant/version)
      local.set 4        ;; Local 4: first_byte
      
      ;; Copy remaining 31 bytes
      local.get 2
      local.get 3
      i32.const 1
      i32.add
      i32.const 31       ;; 31 remaining bytes
      memory.copy
      
      ;; Store complete AccountId in output
      local.get 0
      i32.const 24
      i32.add
      local.get 1
      i32.const 39
      i32.add
      i64.load align=1
      i64.store align=1  ;; Bytes 24-31
      local.get 0
      i32.const 17
      i32.add
      local.get 1
      i32.const 32
      i32.add
      i64.load align=1
      i64.store align=1  ;; Bytes 17-23
      local.get 0
      i32.const 9
      i32.add
      local.get 1
      i32.const 24
      i32.add
      i64.load align=1
      i64.store align=1  ;; Bytes 9-16
      local.get 0
      local.get 1
      i64.load offset=16 align=1
      i64.store offset=1 align=1 ;; Bytes 1-8
      local.get 0
      local.get 4
      i32.store8         ;; Byte 0
      
      local.get 1
      i32.const 48
      i32.add
      global.set 0
      return
    end
    
    ;; Invalid AccountId size - panic
    local.get 1
    i32.const 16
    i32.store8 offset=16
    i32.const 67259      ;; Error message location
    i32.const 65
    local.get 1
    i32.const 16
    i32.add
    i32.const 66980      ;; Context
    i32.const 67324      ;; Additional context
    call 47              ;; Panic with context
    unreachable)

  ;; Function 46: Validate buffer read size
  ;; Ensures that data read from host function fits in buffer
  ;; Used for: Validating seal_caller, seal_input results
  ;; Parameters: (result_ptr, actual_len, buffer_ptr, buffer_capacity) -> void
  ;; Panics if: actual_len > buffer_capacity
  (func $validate_buffer_read (;46;) (type 5) (param i32 i32 i32 i32)
    local.get 1          ;; actual_len
    local.get 3          ;; buffer_capacity
    i32.gt_u
    if
      ;; Buffer overflow
      local.get 1
      local.get 3
      i32.const 69188    ;; Error context
      call 18
      unreachable
    end
    
    ;; Store validated result
    local.get 0
    local.get 1          ;; len
    i32.store offset=4
    local.get 0
    local.get 2          ;; ptr
    i32.store)

  ;; Function 47: Panic with formatted context (5 parameters)
  ;; Complex panic handler with multiple message components
  ;; Parameters: (msg1_ptr, msg1_len, value_ptr, msg2_ptr, msg3_ptr) -> never
  (func $panic_with_context (;47;) (type 8) (param i32 i32 i32 i32 i32)
    (local i32)
    global.get 0
    i32.const -64
    i32.add
    local.tee 5
    global.set 0
    
    ;; Build panic message parts
    local.get 5
    local.get 1          ;; msg1_len
    i32.store offset=12
    local.get 5
    local.get 0          ;; msg1_ptr
    i32.store offset=8
    local.get 5
    local.get 3          ;; msg2_ptr
    i32.store offset=20
    local.get 5
    local.get 2          ;; value_ptr
    i32.store offset=16
    local.get 5
    i32.const 2
    i32.store offset=28  ;; Number of message parts
    local.get 5
    i32.const 68480      ;; Format template
    i32.store offset=24
    local.get 5
    i64.const 2
    i64.store offset=36 align=4
    local.get 5
    i32.const 4
    i32.store offset=60
    local.get 5
    i32.const 5
    i32.store offset=52
    local.get 5
    local.get 5
    i32.const 48
    i32.add
    i32.store offset=32
    local.get 5
    local.get 5
    i32.const 16
    i32.add
    i32.store offset=56
    local.get 5
    local.get 5
    i32.const 8
    i32.add
    i32.store offset=48
    local.get 5
    i32.const 24
    i32.add
    local.get 4          ;; msg3_ptr (panic location)
    call 27
    unreachable)

  ;; Function 48: Check if contract was paid (has transferred value)
  ;; Reads value_transferred and checks if non-zero
  ;; Used for: Payable message validation
  ;; Returns: 5 if no value sent, 4 if value was sent
  (func $check_value_transferred (;48;) (type 11) (result i32)
    (local i32 i32 i64 i64)
    global.get 0
    i32.const 48
    i32.sub
    local.tee 0
    global.set 0
    
    ;; Initialize 16-byte buffer for u128 value
    local.get 0
    i64.const 0
    i64.store offset=24
    local.get 0
    i64.const 0
    i64.store offset=16
    
    ;; Get transferred value
    local.get 0
    i32.const 16
    i32.store offset=44  ;; size = 16
    local.get 0
    i32.const 16
    i32.add
    local.tee 1          ;; buffer ptr
    local.get 0
    i32.const 44
    i32.add
    call 8               ;; seal_value_transferred(buf, size_ptr)
    
    ;; Validate size
    local.get 0
    i32.const 8
    i32.add
    local.get 0
    i32.load offset=44
    local.get 1
    i32.const 16
    call 46              ;; validate_buffer_read
    
    ;; Check if value is zero
    local.get 0
    i64.load offset=24   ;; high 64 bits
    local.set 2
    local.get 0
    i64.load offset=16   ;; low 64 bits
    local.set 3
    local.get 0
    i32.const 48
    i32.add
    global.set 0
    
    i32.const 5          ;; Return code: unpayable
    i32.const 4          ;; Return code: payable
    local.get 2
    local.get 3
    i64.or               ;; Check if value != 0
    i64.eqz
    select)              ;; Return 5 if zero, 4 if non-zero

  ;; ============================================================================
  ;; FORMAT AND DEBUG DISPLAY
  ;; ============================================================================

  ;; Function 49: Format Result type for display
  ;; Formats Ok/Err enum for debug output
  ;; Used for: Error reporting in queries
  ;; Parameters: (formatter_ptr, result_ptr) -> format_result
  (func $fmt_result_enum (;49;) (type 1) (param i32 i32) (result i32)
    local.get 1
    i32.load             ;; formatter.buf
    i32.const 68044      ;; "Ok" or "Err" string
    i32.const 5          ;; string length
    local.get 1
    i32.load offset=4
    i32.load offset=12   ;; formatter vtable
    call_indirect (type 0)) ;; Call format function

  ;; Function 50: Format Error discriminant for display
  ;; Looks up error variant name from lookup tables
  ;; Used for: Debug formatting of Error enum variants
  ;; Parameters: (formatter_ptr, error_variant_ptr) -> format_result
  ;; Returns: 0 on success, non-zero on formatting error
  (func $fmt_error_discriminant (;50;) (type 1) (param i32 i32) (result i32)
    local.get 1
    i32.load             ;; formatter.buf
    local.get 0
    i32.load             ;; error_ptr
    i32.load8_u          ;; error discriminant
    i32.const 2
    i32.shl              ;; discriminant * 4 (for table lookup)
    local.tee 0
    i32.const 67948      ;; Error name length table
    i32.add
    i32.load             ;; Get name length
    local.get 0
    i32.const 67884      ;; Error name pointer table
    i32.add
    i32.load             ;; Get name ptr
    local.get 1
    i32.load offset=4
    i32.load offset=12   ;; formatter vtable
    call_indirect (type 0)) ;; Call write_str(formatter, name_ptr, name_len)

  ;; Function 51: Compare two AccountIds for equality
  ;; Wrapper around memcmp for 32-byte AccountId comparison
  ;; Used for: AccountId equality checks throughout the contract
  ;; Parameters: (account_id_ptr1, account_id_ptr2) -> bool_result
  ;; Returns: 1 if different, 0 if equal
  (func $account_id_ne (;51;) (type 1) (param i32 i32) (result i32)
    local.get 0
    local.get 1
    i32.const 32         ;; AccountId is always 32 bytes
    call 14              ;; memcmp
    i32.const 0
    i32.ne)              ;; Convert to boolean (0=equal, 1=not equal)

  ;; Function 52: Read AccountData from storage (internal helper)
  ;; Loads account balance data from contract storage, returns zeroed data if not found
  ;; Used for: All balance queries and modifications
  ;; Parameters: (result_ptr, account_id_ptr) -> void
  ;; Result: Writes 48-byte AccountData struct to result_ptr
  (func $read_account_from_storage (;52;) (type 2) (param i32 i32)
    (local i32 i32 i32 i32 i32 i64 i64 i64 i64 i64)
    ;; Local 2: stack frame ptr
    ;; Local 3: key_len (reused for result code)
    ;; Local 4: encoder ptr
    ;; Local 5: key_ptr
    ;; Local 6: output buffer capacity
    ;; Locals 7-11: i64 temps for AccountData fields
    
    global.get 0
    i32.const 96
    i32.sub
    local.tee 2          ;; Allocate 96-byte stack frame
    global.set 0
    
    ;; Build storage key: copy AccountId (32 bytes) to stack at offset 24-56
    local.get 2
    i32.const 32
    i32.add
    local.get 1
    i32.const 8
    i32.add
    i64.load align=1
    i64.store align=4    ;; Copy bytes 8-15 of AccountId
    local.get 2
    i32.const 40
    i32.add
    local.get 1
    i32.const 16
    i32.add
    i64.load align=1
    i64.store align=4    ;; Copy bytes 16-23 of AccountId
    local.get 2
    i32.const 48
    i32.add
    local.get 1
    i32.const 24
    i32.add
    i64.load align=1
    i64.store align=4    ;; Copy bytes 24-31 of AccountId
    
    ;; Set Mapping prefix for accounts
    local.get 2
    i32.const 66840      ;; Accounts mapping prefix
    i32.store offset=20
    local.get 2
    local.get 1
    i64.load align=1
    i64.store offset=24 align=4 ;; Copy bytes 0-7 of AccountId
    
    ;; Initialize encoder for storage key at offset 72
    local.get 2
    i32.const 0
    i32.store offset=64  ;; encoder.used = 0 (NOTE: offset 64, not 72!)
    local.get 2
    i64.const 16384      ;; capacity = 16384
    i64.store offset=76 align=4
    local.get 2
    i32.const 69258      ;; Global encoder buffer
    i32.store offset=72
    
    ;; Encode storage key (Mapping prefix + AccountId hash)
    local.get 2
    i32.const 20
    i32.add
    local.get 2
    i32.const 72
    i32.add
    local.tee 4          ;; Local 4: encoder ptr
    call 21              ;; encode_mapping_key
    
    ;; Copy encoder state to offset 56 and extract key slice
    local.get 2
    local.get 2
    i64.load offset=72 align=4
    i64.store offset=56 align=4
    local.get 2
    i32.const 8
    i32.add
    local.get 2
    i32.const 56
    i32.add
    local.get 2
    i32.load offset=80   ;; encoder.used (key length)
    call 22              ;; get_encoder_slice -> stores (key_ptr, key_len) at offset 8
    
    ;; Save key metadata
    local.get 2
    i32.load offset=12   ;; key_len
    local.set 3
    local.get 2
    i32.load offset=8    ;; key_ptr
    local.set 5
    
    ;; Prepare output buffer for seal_get_storage
    local.get 2
    i32.load offset=56   ;; encoder.ptr (will be output buffer)
    local.set 1          ;; Local 1: output_ptr (reused)
    local.get 2
    local.get 2
    i32.load offset=60   ;; encoder.capacity
    local.tee 6          ;; Local 6: output buffer capacity
    i32.store offset=72  ;; Store at offset 72 (will be output_len_ptr)
    
    ;; Call seal_get_storage
    local.get 5          ;; key_ptr
    local.get 3          ;; key_len
    local.get 1          ;; output_ptr
    local.get 4          ;; output_len_ptr (offset 72)
    call 0               ;; seal_get_storage(key_ptr, key_len, out_ptr, out_len_ptr)
    local.set 3          ;; Local 3: result code (reused)
    
    ;; Validate the output length against buffer capacity
    local.get 2
    local.get 2
    i32.load offset=72   ;; Actual bytes written
    local.get 1          ;; output_ptr
    local.get 6          ;; output_capacity
    i32.const 66964      ;; Error context
    call 17              ;; check_slice_length
    
    block  ;; @1 - Length validation error path
      block  ;; @2 - Exit point
        block  ;; @3 - KeyNotFound path
          block  ;; @4 - Success path
            local.get 3      ;; result code
            i32.const 15
            i32.lt_u
            if               ;; if result_code < 15 (valid range)
              local.get 3
              i32.const 68012 ;; Result code lookup table
              i32.add
              i32.load8_u
              local.tee 1    ;; Local 1: decoded result (reused)
              i32.const 16
              i32.eq         ;; 16 = Success
              br_if 1        ;; @4 - Success: data was read
              local.get 1
              i32.const 3
              i32.eq         ;; 3 = KeyNotFound
              br_if 2        ;; @3 - KeyNotFound: return zeroed data
            end
            
            ;; Invalid result code - panic
            local.get 2
            i32.const 0
            i32.store offset=88
            local.get 2
            i32.const 1
            i32.store offset=76
            local.get 2
            i32.const 67384  ;; "encountered unexpected error"
            i32.store offset=72
            local.get 2
            i64.const 4
            i64.store offset=80 align=4
            local.get 2
            i32.const 72
            i32.add
            i32.const 67392  ;; Panic location
            call 27          ;; panic_fmt
            unreachable
          end
          
          ;; Success path: validate and decode AccountData
          local.get 2
          i32.load offset=4  ;; Read actual data length from offset 0 result
          i32.const 48
          i32.ne
          br_if 2            ;; @1 - Panic if not 48 bytes
          
          ;; Load AccountData pointer from offset 0
          local.get 2
          i32.load           ;; data_ptr (stored at offset 0 by check_slice_length)
          local.tee 1        ;; Local 1: data_ptr (reused)
          
          ;; Load all AccountData fields (3 × u128 = 48 bytes)
          i64.load align=1
          local.set 7        ;; free (low 64)
          local.get 1
          i64.load offset=8 align=1
          local.set 8        ;; free (high 64)
          local.get 1
          i64.load offset=16 align=1
          local.set 9        ;; reserved (low 64)
          local.get 1
          i64.load offset=24 align=1
          local.set 10       ;; reserved (high 64)
          local.get 1
          i64.load offset=32 align=1
          local.set 11       ;; frozen (low 64)
          
          ;; Store AccountData in result_ptr
          local.get 0
          local.get 1
          i64.load offset=40 align=1
          i64.store offset=40 ;; frozen (high 64)
          local.get 0
          local.get 11
          i64.store offset=32 ;; frozen (low 64)
          local.get 0
          local.get 10
          i64.store offset=24 ;; reserved (high 64)
          local.get 0
          local.get 9
          i64.store offset=16 ;; reserved (low 64)
          local.get 0
          local.get 8
          i64.store offset=8  ;; free (high 64)
          local.get 0
          local.get 7
          i64.store           ;; free (low 64)
          br 1               ;; @2 - Exit successfully
        end
        
        ;; KeyNotFound path: return zeroed AccountData
        local.get 0
        i32.const 0
        i32.const 48
        memory.fill          ;; Zero all 48 bytes
      end
      
      ;; Normal exit
      local.get 2
      i32.const 96
      i32.add
      global.set 0
      return
    end
    
    ;; Data length validation failed (not 48 bytes) - panic
    local.get 2
    i32.const 16
    i32.store8 offset=71
    local.get 2
    i32.const 1
    i32.store offset=76
    local.get 2
    i32.const 66876      ;; "unexpected return value" or similar
    i32.store offset=72
    local.get 2
    i64.const 1
    i64.store offset=84 align=4
    local.get 2
    i32.const 1
    i32.store offset=60
    local.get 2
    local.get 2
    i32.const 56
    i32.add
    i32.store offset=80
    local.get 2
    local.get 2
    i32.const 71
    i32.add
    i32.store offset=56
    local.get 2
    i32.const 72
    i32.add
    i32.const 66884      ;; Panic location
    call 27              ;; panic_fmt
    unreachable)

  ;; Function 53: Calculate reducible balance helper
  ;; Computes the maximum balance that can be reduced while respecting frozen amount
  ;; Used for: Internal balance calculations in transfers and burns
  ;; Parameters: (result_ptr, amount_low, amount_high, account_data_ptr, preserve_flag) -> void
  ;; Result: Stores reducible amount (low, high) in result_ptr
  (func $calculate_reducible_balance (;53;) (type 12) (param i32 i64 i64 i32 i32)
    (local i64 i64 i64 i64 i32)
    global.get 0
    i32.const 48
    i32.sub
    local.tee 9          ;; Local 9: stack frame
    global.set 0
    
    ;; Load account data from storage
    local.get 9
    local.get 3          ;; account_data_ptr
    call 52              ;; read_account_from_storage
    
    ;; Calculate: free - frozen
    local.get 0
    i64.const 0
    i64.const 0
    local.get 9
    i64.load offset=8    ;; free (high 64)
    local.tee 6
    local.get 9
    i64.load offset=40   ;; frozen (high 64)
    i64.sub
    local.get 9
    i64.load             ;; free (low 64)
    local.tee 5
    local.get 9
    i64.load offset=32   ;; frozen (low 64)
    local.tee 8
    i64.lt_u
    i64.extend_i32_u
    i64.sub
    local.tee 7
    local.get 5
    local.get 5
    local.get 8
    i64.sub
    local.tee 5          ;; usable = free - frozen (low)
    i64.lt_u
    local.get 6
    local.get 7
    i64.lt_u
    local.get 6
    local.get 7
    i64.eq
    select
    local.tee 3          ;; Local 3: borrow flag (reused)
    select
    local.tee 6          ;; usable (high 64)
    
    ;; Subtract requested amount
    local.get 2          ;; amount (high 64)
    i64.sub
    i64.const 0
    local.get 5
    local.get 3
    select               ;; usable (low 64)
    local.tee 2          ;; Local 2: reused for result low
    local.get 1          ;; amount (low 64)
    i64.lt_u
    i64.extend_i32_u
    i64.sub
    local.tee 5          ;; result (high) with borrow
    local.get 2
    local.get 1
    i64.sub
    local.tee 1          ;; result (low)
    local.get 2
    i64.gt_u
    local.get 5
    local.get 6
    i64.gt_u
    local.get 5
    local.get 6
    i64.eq
    select
    local.tee 3          ;; underflow flag
    select               ;; Select 0 if underflow
    local.get 6
    local.get 4          ;; preserve_flag
    i32.const 255
    i32.and
    local.tee 4
    select               ;; Apply preservation
    i64.store offset=8   ;; Store result (high)
    
    local.get 0
    i64.const 0
    local.get 1
    local.get 3
    select               ;; Select 0 if underflow
    local.get 2
    local.get 4
    select               ;; Apply preservation
    i64.store            ;; Store result (low)
    
    local.get 9
    i32.const 48
    i32.add
    global.set 0)

  ;; Function 54: Format Preservation enum for display
  ;; Converts Preservation variant to string for debug output
  ;; Used for: Debug logging, error messages with preservation mode
  ;; Parameters: (formatter_ptr, preservation_ptr) -> format_result
  ;; Returns: 0 on success, non-zero on error
  (func $fmt_preservation_enum (;54;) (type 1) (param i32 i32) (result i32)
    (local i32)
    global.get 0
    i32.const 48
    i32.sub
    local.tee 2
    global.set 0
    
    ;; Set up format args
    local.get 2
    i32.const 1
    i32.store offset=12
    local.get 2
    i32.const 68940      ;; Format template base
    i32.store offset=8
    local.get 2
    i64.const 1
    i64.store offset=20 align=4
    local.get 2
    i32.const 5          ;; Format specifier
    i32.store offset=36
    
    ;; Load enum discriminant and look up name
    local.get 2
    local.get 0
    i32.load8_u          ;; preservation discriminant (0=Expendable, 1=Preserve, 2=Protect)
    i32.const 2
    i32.shl              ;; * 4 for table lookup
    local.tee 0
    i32.const 69204      ;; Preservation name length table
    i32.add
    i32.load
    i32.store offset=44
    local.get 2
    local.get 0
    i32.const 69224      ;; Preservation name pointer table
    i32.add
    i32.load
    i32.store offset=40
    
    ;; Call formatter
    local.get 2
    local.get 2
    i32.const 32
    i32.add
    i32.store offset=16
    local.get 2
    local.get 2
    i32.const 40
    i32.add
    i32.store offset=32
    local.get 1
    i32.load             ;; formatter.buf
    local.get 1
    i32.load offset=4    ;; formatter.vtable
    local.get 2
    i32.const 8
    i32.add
    call 81              ;; Format with args
    local.set 0
    
    local.get 2
    i32.const 48
    i32.add
    global.set 0
    local.get 0)         ;; Return format result

  ;; ============================================================================
  ;; STRING FORMATTING AND DEBUG UTILITIES
  ;; ============================================================================

  ;; Function 55: Format with debug braces (wrapper/closure formatter)
  ;; Formats values with surrounding context (e.g., "name { field: value }")
  ;; Used for: Debug trait implementations, structured error messages
  ;; Parameters: (formatter_ptr, prefix_ptr, prefix_len, value_ptr, format_spec) -> format_result
  ;; Returns: 0 on success, non-zero on formatting error
  (func $fmt_with_braces (;55;) (type 13) (param i32 i32 i32 i32 i32) (result i32)
    (local i32 i32 i32)
    ;; Local 5: stack frame
    ;; Local 6: formatter.buf
    ;; Local 7: result accumulator
    
    global.get 0
    i32.const 32
    i32.sub
    local.tee 5
    global.set 0
    
    i32.const 1
    local.set 7          ;; Default to error (1)
    
    block  ;; @1 - Error exit
      ;; Write prefix string
      local.get 0
      i32.load           ;; formatter.buf
      local.tee 6
      local.get 1        ;; prefix_ptr
      local.get 2        ;; prefix_len
      local.get 0
      i32.load offset=4  ;; formatter.vtable
      local.tee 2        ;; Local 2: vtable (reused)
      i32.load offset=12 ;; write_str function ptr
      local.tee 1        ;; Local 1: write_str function (reused)
      call_indirect (type 0) ;; write_str(buf, str_ptr, str_len)
      br_if 0            ;; @1 - Exit if error
      
      block  ;; @2 - Check for alternate mode
        ;; Check if alternate format flag is set (#)
        local.get 0
        i32.load8_u offset=10 ;; formatter.flags (byte at offset 10)
        i32.const 128        ;; Alternate flag bit
        i32.and
        i32.eqz
        if                   ;; if NOT alternate mode
          ;; Simple format: write " { "
          local.get 6
          i32.const 68526    ;; " { "
          i32.const 1        ;; length = 1 (just opening brace with space?)
          local.get 1
          call_indirect (type 0)
          br_if 2            ;; @1 - Exit if error
          
          ;; Format the value using provided closure
          local.get 3        ;; value_ptr
          local.get 0        ;; formatter
          local.get 4        ;; format_spec (function index)
          call_indirect (type 1) ;; value.fmt(formatter)
          br_if 2            ;; @1 - Exit if error
          
          ;; Reload formatter state
          local.get 0
          i32.load           ;; formatter.buf
          local.set 6
          local.get 0
          i32.load offset=4
          i32.load offset=12 ;; formatter.vtable.write_str
          local.set 1
          br 1               ;; @2 - Skip to closing brace
        end
        
        ;; Alternate format (pretty-print with newlines)
        local.get 6
        i32.const 68527    ;; " {\n" or similar
        i32.const 2        ;; length = 2
        local.get 1
        call_indirect (type 0)
        br_if 1            ;; @1 - Exit if error
        
        ;; Set up indented formatter wrapper
        local.get 5
        i32.const 1
        i32.store8 offset=15 ;; indent flag
        local.get 5
        local.get 2        ;; original vtable
        i32.store offset=4
        local.get 5
        local.get 6        ;; original buf
        i32.store
        local.get 5
        i32.const 68496    ;; Indenting formatter vtable
        i32.store offset=20
        local.get 5
        local.get 0
        i64.load offset=8 align=4
        i64.store offset=24 align=4 ;; Copy formatter flags
        local.get 5
        local.get 5
        i32.const 15
        i32.add
        i32.store offset=8 ;; Store indent flag ptr
        local.get 5
        local.get 5
        i32.store offset=16 ;; Store wrapper state
        
        ;; Format value with indented formatter
        local.get 3        ;; value_ptr
        local.get 5
        i32.const 16
        i32.add            ;; wrapped formatter
        local.get 4        ;; format_spec
        call_indirect (type 1)
        br_if 1            ;; @1 - Exit if error
        
        ;; Write closing with newline
        local.get 5
        i32.load offset=16 ;; wrapped formatter buf
        i32.const 68524    ;; "\n}" or similar
        i32.const 2
        local.get 5
        i32.load offset=20
        i32.load offset=12 ;; vtable.write_str
        call_indirect (type 0)
        br_if 1            ;; @1 - Exit if error
      end
      
      ;; Write closing brace " }"
      local.get 6
      i32.const 68324      ;; " }"
      i32.const 1          ;; length
      local.get 1
      call_indirect (type 0)
      local.set 7          ;; Result of final write
    end
    
    local.get 5
    i32.const 32
    i32.add
    global.set 0
    local.get 7)           ;; Return accumulated result

  ;; Function 56: Grow vector capacity (RawVec::reserve)
  ;; Reallocates vector storage when capacity needs to increase
  ;; Used for: Vec<BalanceLock> growth, dynamic buffer expansion
  ;; Parameters: (result_ptr, vec_metadata_ptr, current_len, additional, align, element_size) -> void
  ;; Result: Stores (result_code, new_ptr, new_capacity) at result_ptr
  (func $vec_reserve (;56;) (type 14) (param i32 i32 i32 i32 i32 i32)
    (local i32 i32 i32 i32 i64)
    ;; Local 6: stack frame
    ;; Local 7: preferred_capacity (max of current*2, current+additional)
    ;; Local 8: old_capacity
    ;; Local 9: new_size_bytes
    ;; Local 10: size_calculation (i64)
    
    global.get 0
    i32.const 32
    i32.sub
    local.tee 6
    global.set 0
    
    block  ;; @1 - Allocation error exit
      ;; Calculate new required capacity
      local.get 2        ;; current_len
      local.get 2
      local.get 3        ;; additional
      i32.add
      local.tee 3        ;; Local 3: new_len (reused)
      i32.gt_u
      if                 ;; if overflow in addition
        i32.const 0
        local.set 2      ;; Error code
        br 1             ;; @1
      end
      
      i32.const 0
      local.set 2        ;; Error code
      
      ;; Calculate aligned size: (align + element_size - 1) & ~(align - 1)
      local.get 4        ;; align
      local.get 5        ;; element_size
      i32.add
      i32.const 1
      i32.sub
      i32.const 0
      local.get 4        ;; align
      i32.sub
      i32.and
      i64.extend_i32_u
      
      ;; Calculate preferred capacity (max of current*2, new_len)
      local.get 3        ;; new_len
      local.get 1
      i32.load           ;; vec.capacity
      local.tee 8        ;; Local 8: old_capacity
      i32.const 1
      i32.shl            ;; capacity * 2
      local.tee 7        ;; Local 7: preferred_capacity
      local.get 3
      local.get 7
      i32.gt_u
      select             ;; max(capacity*2, new_len)
      local.tee 3        ;; Local 3: final new_capacity (reused)
      
      ;; Ensure minimum capacity (4 or 8 depending on element_size)
      i32.const 8
      i32.const 4
      local.get 5        ;; element_size
      i32.const 1
      i32.eq
      select
      local.tee 7        ;; Local 7: min_capacity (reused)
      local.get 3
      local.get 7
      i32.gt_u
      select
      local.tee 7        ;; Final capacity
      i64.extend_i32_u
      
      ;; Multiply: aligned_element_size * new_capacity
      i64.mul
      local.tee 10       ;; Local 10: size calculation
      
      ;; Check for overflow in upper 32 bits
      i64.const 32
      i64.shr_u
      i32.wrap_i64
      br_if 0            ;; @1 - Overflow error
      
      local.get 10
      i32.wrap_i64
      local.tee 9        ;; Local 9: new_size_bytes
      i32.const -2147483648
      local.get 4        ;; align
      i32.sub
      i32.gt_u           ;; Check if new_size > (i32::MAX - align)
      br_if 0            ;; @1 - Size too large
      
      block (result i32) ;; Allocate or reallocate
        local.get 8      ;; old_capacity
        i32.eqz
        if               ;; if old_capacity == 0 (new allocation)
          i32.const 0
          local.set 3
          local.get 6
          i32.const 24
          i32.add
          br 1           ;; Return allocate path
        end
        
        ;; Reallocation path
        local.get 6
        local.get 4      ;; align
        i32.store offset=24
        local.get 6
        local.get 1
        i32.load offset=4 ;; vec.ptr
        i32.store offset=20
        local.get 5      ;; element_size
        local.get 8      ;; old_capacity
        i32.mul
        local.set 3      ;; Local 3: old_size_bytes (reused)
        local.get 6
        i32.const 28
        i32.add          ;; Return realloc path
      end
      local.get 3        ;; old_size (or 0 for new allocation)
      i32.store
      
      ;; Call allocation function
      local.get 6
      i32.const 8
      i32.add
      local.get 4        ;; align
      local.get 9        ;; new_size_bytes
      local.get 6
      i32.const 20
      i32.add            ;; realloc params (or null for new alloc)
      call 23            ;; encoder_buffer_resize (allocation function)
      
      local.get 6
      i32.load offset=12 ;; new_ptr
      local.set 2
      local.get 6
      i32.load offset=8  ;; result code
      if                 ;; if allocation failed
        local.get 6
        i32.load offset=16 ;; error info
        local.set 3
        br 1             ;; @1 - Error
      end
      
      ;; Success: update vec metadata
      local.get 1
      local.get 7        ;; new_capacity
      i32.store
      local.get 1
      local.get 2        ;; new_ptr
      i32.store offset=4
      i32.const -2147483647 ;; Success code
      local.set 2
    end
    
    ;; Store result
    local.get 0
    local.get 3          ;; error info or 0
    i32.store offset=4
    local.get 0
    local.get 2          ;; result code or new_ptr
    i32.store
    
    local.get 6
    i32.const 32
    i32.add
    global.set 0)

  ;; Function 57: Encode Result<(), Error> and return to caller
  ;; Encodes success (Ok) or error (Err) variant and calls seal_return
  ;; Used for: Returning from mutable contract methods
  ;; Parameters: (return_value_ptr, error_discriminant_u8) -> never_returns
  (func $encode_and_return_result (;57;) (type 2) (param i32 i32)
    (local i32 i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2
    global.set 0
    
    ;; Initialize encoder
    local.get 2
    i64.const 16384
    i64.store offset=8 align=4
    local.get 2
    i32.const 69258      ;; Global encoder buffer
    i32.store offset=4
    local.get 2
    i32.const 4
    i32.add
    local.tee 3          ;; Local 3: encoder ptr
    
    ;; Encode Result discriminant (0 = Ok, 1 = Err)
    i32.const 0
    call 64              ;; Write outer discriminant (Result enum)
    
    ;; Check error type
    local.get 3
    local.get 1          ;; error_discriminant
    i32.const 255
    i32.and
    i32.const 7
    i32.ne               ;; Check if error is variant 7
    if (result i32)      ;; if error != 7
      ;; Write Err variant
      local.get 3
      i32.const 1
      call 64            ;; Write 1 (Err discriminant)
      local.get 1        ;; error_discriminant
    else
      ;; Write Ok variant (unit type = no payload)
      i32.const 0        ;; Ok() has no data
    end
    call 64              ;; Write error value or 0
    
    ;; Check encoded length
    local.get 2
    i32.load offset=12   ;; encoder.used
    local.tee 1
    i32.const 16385      ;; Max allowed length
    i32.ge_u
    if
      ;; Length check failed - panic
      local.get 1
      i32.const 16384
      i32.const 67340    ;; Error context
      call 18            ;; panic_bounds_check
      unreachable
    end
    
    ;; Return encoded result to caller
    local.get 0
    local.get 1          ;; data_len
    call 65              ;; seal_return_wrapper
    unreachable)

  ;; Function 58: Return success (Ok(())) to caller
  ;; Shortcut for returning successful unit result
  ;; Used for: Successful completion of mutable methods
  ;; Parameters: () -> never_returns
  (func $return_ok_unit (;58;) (type 6)
    i32.const 0          ;; Result<()> return value ptr
    call 104)            ;; encode_and_seal_return_ok

  ;; Function 59: Return error to caller  
  ;; Shortcut for returning error result
  ;; Used for: Error conditions in contract methods
  ;; Parameters: () -> never_returns
  (func $return_err (;59;) (type 6)
    i32.const 1          ;; Error flag
    call 104)            ;; encode_and_seal_return_err

  ;; Function 60: Return u128 value to caller
  ;; Encodes Result<u128, Error> and returns via seal_return
  ;; Used for: Query methods that return Balance values
  ;; Parameters: (value_low_64, value_high_64) -> never_returns
  (func $return_u128_result (;60;) (type 15) (param i64 i64)
    (local i32 i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2
    global.set 0
    
    ;; Initialize encoder
    local.get 2
    i64.const 16384
    i64.store offset=8 align=4
    local.get 2
    i32.const 69258
    i32.store offset=4
    local.get 2
    i32.const 4
    i32.add
    local.tee 3          ;; encoder ptr
    
    ;; Encode Result::Ok discriminant
    i32.const 0
    call 64              ;; Write 0 (Ok)
    
    ;; Encode the u128 value
    local.get 0          ;; value_low
    local.get 1          ;; value_high
    local.get 3
    call 33              ;; encode_u128
    
    ;; Validate and return
    local.get 2
    i32.load offset=12   ;; encoder.used
    local.tee 2
    i32.const 16385
    i32.ge_u
    if
      local.get 2
      i32.const 16384
      i32.const 67340
      call 18
      unreachable
    end
    
    i32.const 0          ;; flags = 0 (success)
    local.get 2          ;; data_len
    call 65              ;; seal_return_wrapper
    unreachable)

  ;; Function 61: Return Result<Error> to caller
  ;; Encodes nested Result type for error reporting
  ;; Used for: Methods that can return multiple error types
  ;; Parameters: (result_ptr, error_struct_ptr) -> never_returns
  (func $return_result_error (;61;) (type 2) (param i32 i32)
    (local i32 i32 i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2
    global.set 0
    
    ;; Initialize encoder
    local.get 2
    i64.const 16384
    i64.store offset=8 align=4
    local.get 2
    i32.const 69258
    i32.store offset=4
    
    block  ;; Encode based on error type
      local.get 1
      i32.load8_u        ;; error.discriminant
      local.tee 4
      i32.const 2
      i32.eq
      if                 ;; if error variant == 2
        ;; Special error case
        local.get 2
        i32.const 4
        i32.add
        local.tee 1
        i32.const 1
        call 64          ;; Write Err discriminant
        local.get 1
        i32.const 1
        call 64          ;; Write inner error discriminant
        br 1
      end
      
      ;; Regular error encoding
      local.get 2
      i32.const 4
      i32.add
      local.tee 3
      i32.const 0
      call 64            ;; Write Ok discriminant
      
      local.get 4
      i32.const 1
      i32.and
      if                 ;; if error has single-byte payload
        local.get 3
        i32.const 1
        call 64          ;; Write error type
        local.get 3
        local.get 1
        i32.load8_u offset=1 ;; error.value
        call 64          ;; Write error value
        br 1
      end
      
      ;; Error with u128 payload
      local.get 2
      i32.const 4
      i32.add
      local.tee 3
      i32.const 0
      call 64            ;; Write error type
      local.get 1
      i64.load offset=16 ;; error.amount (low)
      local.get 1
      i64.load offset=24 ;; error.amount (high)
      local.get 3
      call 33            ;; encode_u128
    end
    
    ;; Validate and return
    local.get 2
    i32.load offset=12
    local.tee 1
    i32.const 16385
    i32.ge_u
    if
      local.get 1
      i32.const 16384
      i32.const 67340
      call 18
      unreachable
    end
    
    local.get 0
    local.get 1
    call 65
    unreachable)

  ;; Function 62: Encode and return AccountData to caller
  ;; Encodes Result<AccountData, Error> with all three Balance fields
  ;; Used for: account() query method
  ;; Parameters: (account_data_ptr) -> never_returns
  (func $return_account_data (;62;) (type 4) (param i32)
    (local i32 i32 i32 i32 i32 i64)
    global.get 0
    i32.const 48
    i32.sub
    local.tee 1
    global.set 0
    
    ;; Initialize encoder
    local.get 1
    i32.const 0
    i32.store offset=32
    local.get 1
    i64.const 16384
    i64.store offset=40 align=4
    local.get 1
    i32.const 69258
    i32.store offset=36
    
    ;; Encode Result::Ok discriminant
    i32.const 0
    local.get 1
    i32.const 36
    i32.add
    local.tee 2          ;; Local 2: encoder ptr
    call 40              ;; encode_u32 (writes 4-byte 0)
    
    ;; Extract encoded prefix
    local.get 1
    local.get 1
    i64.load offset=36 align=4
    i64.store offset=24 align=4
    local.get 1
    i32.const 16
    i32.add
    local.get 1
    i32.const 24
    i32.add
    local.tee 3
    local.get 1
    i32.load offset=44   ;; encoder.used
    call 22              ;; get_encoder_slice
    
    ;; Save prefix info
    local.get 1
    i32.load offset=20
    local.set 4          ;; prefix_len
    local.get 1
    i32.load offset=16
    local.set 5          ;; prefix_ptr
    local.get 1
    i64.load offset=24 align=4
    local.set 6          ;; saved encoder state
    
    ;; Reset encoder for AccountData
    local.get 1
    i32.const 0
    i32.store offset=44
    local.get 1
    local.get 6
    i64.store offset=36 align=4
    
    ;; Encode AccountData (3 × u128)
    local.get 0
    i64.load             ;; free (low)
    local.get 0
    i64.load offset=8    ;; free (high)
    local.get 2
    call 33              ;; encode_u128
    
    local.get 0
    i64.load offset=16   ;; reserved (low)
    local.get 0
    i64.load offset=24   ;; reserved (high)
    local.get 2
    call 33
    
    local.get 0
    i64.load offset=32   ;; frozen (low)
    local.get 0
    i64.load offset=40   ;; frozen (high)
    local.get 2
    call 33
    
    ;; Encode existential_deposit and owner fields
    local.get 0
    i32.load offset=80   ;; existential_deposit (assuming it's at +80)
    local.get 2
    call 40              ;; encode_u32
    
    local.get 0
    i32.const 48
    i32.add              ;; owner AccountId
    local.get 2
    call 36              ;; encode_account_id
    
    local.get 0
    i32.const 84
    i32.add              ;; dust_trap Option<AccountId>
    local.get 2
    call 63              ;; encode_option_account_id
    
    ;; Extract final encoded data
    local.get 1
    local.get 1
    i64.load offset=36 align=4
    i64.store offset=24 align=4
    local.get 1
    i32.const 8
    i32.add
    local.get 3
    local.get 1
    i32.load offset=44
    call 22
    
    ;; Write to storage (seems to be storing the encoded result?)
    local.get 5          ;; prefix_ptr
    local.get 4          ;; prefix_len
    local.get 1
    i32.load offset=8    ;; data_ptr
    local.get 1
    i32.load offset=12   ;; data_len
    call 3               ;; seal_set_storage
    drop
    
    local.get 1
    i32.const 48
    i32.add
    global.set 0)

  ;; Function 63: Encode Option<AccountId>
  ;; Writes Option discriminant + AccountId if Some
  ;; Used for: Encoding dust_trap field
  ;; Parameters: (option_ptr, encoder_ptr) -> void
  (func $encode_option_account_id (;63;) (type 2) (param i32 i32)
    local.get 0
    i32.load8_u          ;; option discriminant (0=None, 1=Some)
    i32.const 1
    i32.eq
    if                   ;; if Some
      local.get 1
      i32.const 1
      call 64            ;; Write Some discriminant
      local.get 0
      i32.const 1
      i32.add            ;; AccountId data starts at +1
      local.get 1
      call 36            ;; encode_account_id (32 bytes)
      return
    end
    
    ;; None case
    local.get 1
    i32.const 0
    call 64              ;; Write None discriminant
  )

  ;; Function 64: Write single byte to encoder with bounds check
  ;; Low-level encoder operation for single bytes
  ;; Used for: Writing discriminants, flags, small integers
  ;; Parameters: (encoder_ptr, byte_value) -> void
  ;; Panics if: Encoder buffer full
  (func $encoder_write_byte (;64;) (type 2) (param i32 i32)
    (local i32 i32)
    local.get 0
    i32.load offset=8    ;; encoder.used
    local.tee 2
    local.get 0
    i32.load offset=4    ;; encoder.capacity
    local.tee 3
    i32.lt_u
    if                   ;; if used < capacity
      ;; Write byte
      local.get 0
      local.get 2
      i32.const 1
      i32.add
      i32.store offset=8 ;; used++
      local.get 0
      i32.load           ;; encoder.ptr
      local.get 2        ;; offset
      i32.add
      local.get 1        ;; byte_value
      i32.store8
      return
    end
    
    ;; Capacity exceeded - panic with formatted message
    global.get 0
    i32.const 48
    i32.sub
    local.tee 0
    global.set 0
    
    local.get 0
    local.get 3          ;; capacity
    i32.store offset=4
    local.get 0
    local.get 2          ;; used (current position)
    i32.store
    local.get 0
    i32.const 2
    i32.store offset=12
    local.get 0
    i32.const 68460      ;; "assertion failed: "
    i32.store offset=8
    local.get 0
    i64.const 2
    i64.store offset=20 align=4
    local.get 0
    i32.const 7          ;; Format type
    i32.store offset=44
    local.get 0
    i32.const 7
    i32.store offset=36
    local.get 0
    local.get 0
    i32.const 32
    i32.add
    i32.store offset=16
    local.get 0
    local.get 0
    i32.store offset=40
    local.get 0
    local.get 0
    i32.const 4
    i32.add
    i32.store offset=32
    local.get 0
    i32.const 8
    i32.add
    i32.const 69140      ;; Panic location
    call 27
    unreachable)

  ;; Function 65: seal_return wrapper
  ;; Calls seal_return to exit contract with encoded data
  ;; Used for: All contract return paths
  ;; Parameters: (flags, data_len) -> never_returns
  ;; Data: Always uses global buffer at 69258
  (func $seal_return_wrapper (;65;) (type 2) (param i32 i32)
    local.get 0          ;; flags (0=success, non-zero=revert)
    i32.const 69258      ;; Global encoder buffer (data_ptr)
    local.get 1          ;; data_len
    call 6               ;; seal_return(flags, data_ptr, data_len)
    unreachable)

  ;; ============================================================================
  ;; SCALE DECODING AND INPUT HANDLING
  ;; ============================================================================

  ;; Function 66: Decode Option<AccountId> from input buffer
  ;; Reads Option discriminant and conditionally reads 32-byte AccountId
  ;; Used for: Decoding transfer recipients, optional account parameters
  ;; Parameters: (result_ptr, reader_ptr) -> void
  ;; Result: Writes Option<AccountId> (33 bytes: 1 discriminant + 32 AccountId) to result_ptr
  (func $decode_option_account_id (;66;) (type 2) (param i32 i32)
    (local i32 i32 i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2
    global.set 0
    
    ;; Read Option discriminant byte
    local.get 2
    i32.const 8
    i32.add
    local.get 1          ;; reader_ptr
    call 41              ;; decode_byte -> (is_eof, value)
    
    i32.const 2          ;; Default result = None (discriminant 2)
    local.set 3
    
    block  ;; @1 - Exit point
      ;; Check if EOF (no data available)
      local.get 2
      i32.load8_u offset=8 ;; is_eof flag
      br_if 0            ;; @1 - Exit with None if EOF
      
      block  ;; @2 - Some(AccountId) case
        block  ;; @3 - Match discriminant
          ;; Check discriminant value
          local.get 2
          i32.load8_u offset=9 ;; discriminant byte
          br_table 0 1 2   ;; 0 -> @3 (None), 1 -> @2 (Some), 2+ -> @1 (invalid)
          ;; br_table: case 0 jumps to @3, case 1 jumps to @2, default jumps to @1
        end
        
        ;; Case 0: None
        i32.const 0
        local.set 3        ;; discriminant = 0 (None)
        br 1               ;; @1
      end
      
      ;; Case 1: Some - read 32-byte AccountId
      local.get 1
      i32.load offset=4    ;; reader.remaining
      local.tee 4
      i32.const 32
      i32.lt_u             ;; Check if at least 32 bytes available
      br_if 0              ;; @1 - Exit if insufficient data
      
      ;; Consume 32 bytes from reader
      local.get 1
      local.get 4
      i32.const 32
      i32.sub
      i32.store offset=4   ;; remaining -= 32
      local.get 1
      local.get 1
      i32.load             ;; reader.ptr
      local.tee 1          ;; Local 1: data_ptr (reused)
      i32.const 32
      i32.add
      i32.store            ;; ptr += 32
      
      ;; Copy AccountId to result (32 bytes in 4 × 8-byte chunks)
      local.get 0
      local.get 1
      i64.load align=1
      i64.store offset=1 align=1   ;; Bytes 0-7 (at result+1)
      local.get 0
      i32.const 9
      i32.add
      local.get 1
      i32.const 8
      i32.add
      i64.load align=1
      i64.store align=1    ;; Bytes 8-15
      local.get 0
      i32.const 17
      i32.add
      local.get 1
      i32.const 16
      i32.add
      i64.load align=1
      i64.store align=1    ;; Bytes 16-23
      local.get 0
      i32.const 25
      i32.add
      local.get 1
      i32.const 24
      i32.add
      i64.load align=1
      i64.store align=1    ;; Bytes 24-31
      
      i32.const 1          ;; discriminant = 1 (Some)
      local.set 3
    end
    
    ;; Store discriminant at offset 0
    local.get 0
    local.get 3
    i32.store8
    
    local.get 2
    i32.const 16
    i32.add
    global.set 0)

  ;; Function 67: Decode Preservation enum from input
  ;; Reads single-byte discriminant and validates range
  ;; Used for: Decoding preservation mode in transfer/burn operations
  ;; Parameters: (reader_ptr) -> preservation_value
  ;; Returns: 0=Expendable, 1=Preserve, 2=Protect, or panics if invalid
  (func $decode_preservation (;67;) (type 9) (param i32) (result i32)
    (local i32 i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 1
    global.set 0
    
    ;; Read discriminant byte
    local.get 1
    i32.const 8
    i32.add
    local.get 0
    call 41              ;; decode_byte
    
    local.get 1
    i32.load8_u offset=9 ;; discriminant value
    local.set 0
    local.get 1
    i32.load8_u offset=8 ;; is_eof flag
    local.set 2
    
    local.get 1
    i32.const 16
    i32.add
    global.set 0
    
    ;; Validate and return
    i32.const 2          ;; Default/max valid value
    i32.const 1
    i32.const 2
    local.get 0
    i32.const 1
    i32.eq
    select               ;; Select 1 if discriminant == 1
    i32.const 0
    local.get 0
    select               ;; Select 0 if discriminant == 0
    local.get 2          ;; is_eof
    select)              ;; Return 2 if EOF, else validated discriminant

  ;; Function 68: Decode Precision/Fortitude/Provenance enum
  ;; Reads single-byte discriminant, validates range (0-2)
  ;; Used for: Decoding operation mode parameters
  ;; Parameters: (reader_ptr) -> enum_value
  ;; Returns: Validated enum value (0-2) or 3 for invalid/EOF
  (func $decode_ternary_enum (;68;) (type 9) (param i32) (result i32)
    (local i32 i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 1
    global.set 0
    
    ;; Read discriminant byte
    local.get 1
    i32.const 8
    i32.add
    local.get 0
    call 41              ;; decode_byte
    
    local.get 1
    i32.load8_u offset=9 ;; discriminant value
    local.set 0
    local.get 1
    i32.load8_u offset=8 ;; is_eof flag
    local.set 2
    
    local.get 1
    i32.const 16
    i32.add
    global.set 0
    
    ;; Validate: return 3 for EOF or out-of-range values
    i32.const 3          ;; Invalid/error value
    i32.const 3
    local.get 0          ;; discriminant
    local.get 0
    i32.const 3
    i32.ge_u             ;; Check if >= 3 (invalid)
    select               ;; Clamp to 3 if out of range
    local.get 2          ;; is_eof
    select)              ;; Return 3 if EOF, else validated/clamped value

  ;; Function 69: Panic with invalid enum discriminant value
  ;; Formats and panics when an out-of-range enum discriminant is decoded
  ;; Used for: Input validation failures in message decoding
  ;; Parameters: (enum_value_ptr) -> never_returns
  (func $panic_invalid_enum (;69;) (type 4) (param i32)
    (local i32)
    global.get 0
    i32.const 32
    i32.sub
    local.tee 1
    global.set 0
    
    ;; Build panic message structure
    local.get 1
    i32.const 1
    i32.store offset=4   ;; arg_count = 1
    local.get 1
    i32.const 68940      ;; Message format template
    i32.store            ;; Store at offset 0
    local.get 1
    i64.const 1
    i64.store offset=12 align=4 ;; formatter_args metadata
    local.get 1
    i32.const 6          ;; Format type specifier
    i32.store offset=28
    
    ;; Store the enum value pointer directly (not a table lookup)
    local.get 1
    local.get 0          ;; enum_value_ptr (the invalid discriminant)
    i32.store offset=24
    
    ;; Set up formatter args pointer
    local.get 1
    local.get 1
    i32.const 24
    i32.add
    i32.store offset=8
    
    ;; Panic with context
    local.get 1
    i32.const 67440      ;; Panic location/context
    call 27              ;; panic_fmt
    unreachable)

  ;; ============================================================================
  ;; BALANCE OPERATIONS AND TRANSFER LOGIC
  ;; ============================================================================

  ;; Function 70: Deposit into account with checks
  ;; Increases account balance while checking for overflow and minimum balance
  ;; Used for: Transfer recipient side, minting operations
  ;; Parameters: (account_data_ptr, flags, amount_low, amount_high) -> result_code
  ;; Returns: 4=Overflow, 6=BelowMinimum, 7=Success
  (func $deposit_into_account (;70;) (type 16) (param i32 i32 i64 i64) (result i32)
    (local i32 i32 i32 i64 i64 i64 i64 i64 i64 i64)
    ;; Local 4: stack frame
    ;; Local 5: result code
    ;; Local 6: comparison flag
    ;; Locals 7-13: i64 temporaries for arithmetic
    
    global.get 0
    i32.const 128
    i32.sub
    local.tee 4
    global.set 0
    
    ;; Get caller's AccountId
    local.get 4
    call 45              ;; get_caller_account_id -> writes to offset 0
    
    block  ;; @1 - Exit point
      ;; Check if caller is the account being deposited to
      local.get 4
      local.get 0
      i32.const 48
      i32.add            ;; Assuming owner field is at +48
      call 51            ;; account_id_ne
      if                 ;; if caller != account.owner
        i32.const 6
        local.set 5      ;; Return BelowMinimum/NotAllowed
        br 1             ;; @1
      end
      
      ;; Check if amount is zero
      local.get 2
      local.get 3
      i64.or
      i64.eqz
      i32.eqz            ;; if amount != 0
      if
        i32.const 4
        local.set 5      ;; Default to Overflow error
        
        ;; Add amount to account.free
        local.get 0
        i64.load         ;; free (low)
        local.tee 7
        local.get 2      ;; amount (low)
        i64.add
        local.tee 11     ;; new_free (low)
        local.get 7
        i64.lt_u         ;; Check for carry
        local.tee 6
        local.get 6
        i64.extend_i32_u
        local.get 0
        i64.load offset=8 ;; free (high)
        local.tee 8
        local.get 3      ;; amount (high)
        i64.add
        i64.add          ;; free_high + amount_high + carry
        local.tee 7      ;; new_free (high)
        local.get 8
        i64.lt_u
        local.get 7
        local.get 8
        i64.eq
        select           ;; Check for overflow
        br_if 1          ;; @1 - Return Overflow if overflow detected
        
        ;; Update account.free
        local.get 0
        local.get 11
        i64.store        ;; account.free (low) = new_free_low
        local.get 0
        local.get 7
        i64.store offset=8 ;; account.free (high) = new_free_high
        
        ;; Add amount to account.reserved (seems to be adding to both free and reserved)
        local.get 0
        i64.load offset=16 ;; reserved (low)
        local.tee 8
        local.get 2      ;; amount (low)
        i64.add
        local.tee 10     ;; new_reserved (low)
        local.get 8
        i64.lt_u
        local.tee 6
        local.get 6
        i64.extend_i32_u
        local.get 0
        i64.load offset=24 ;; reserved (high)
        local.tee 9
        local.get 3      ;; amount (high)
        i64.add
        i64.add
        local.tee 8      ;; new_reserved (high)
        local.get 9
        i64.lt_u
        local.get 8
        local.get 9
        i64.eq
        select
        br_if 1          ;; @1 - Overflow
        
        local.get 0
        local.get 10
        i64.store offset=16
        local.get 0
        local.get 8
        i64.store offset=24
        
        ;; Load existential deposit for comparison
        local.get 4
        i32.const 32
        i32.add
        local.get 1      ;; flags/config pointer
        call 52          ;; read_account_from_storage
        
        block  ;; @3 - Minimum balance check
          ;; Check if account has any balance before deposit
          local.get 4
          i64.load offset=32 ;; Previous free balance (low)
          local.tee 12
          local.get 4
          i64.load offset=40 ;; Previous free balance (high)
          local.tee 9
          i64.or
          i64.const 0
          i64.ne
          br_if 0          ;; @3 - Skip ED check if account already exists
          
          ;; New account: check if deposit meets existential deposit
          local.get 2        ;; amount (low)
          local.get 0
          i64.load offset=32 ;; existential_deposit (low)
          i64.ge_u
          local.get 3        ;; amount (high)
          local.get 0
          i64.load offset=40 ;; existential_deposit (high)
          local.tee 13
          i64.ge_u
          local.get 3
          local.get 13
          i64.eq
          select
          br_if 0          ;; @3 - Amount meets ED, continue
          
          ;; Deposit below ED: revert the addition to free balance
          local.get 0
          i64.const 0
          local.get 8      ;; reserved_high
          local.get 3      ;; amount_high
          i64.sub
          local.get 2      ;; amount_low
          local.get 10     ;; reserved_low
          i64.gt_u
          i64.extend_i32_u
          i64.sub
          local.tee 9
          local.get 10
          local.get 10
          local.get 2
          i64.sub
          local.tee 10
          i64.lt_u
          local.get 8
          local.get 9
          i64.lt_u
          local.get 8
          local.get 9
          i64.eq
          select
          local.tee 1      ;; underflow flag
          select
          i64.store offset=24
          
          local.get 0
          i64.const 0
          local.get 10
          local.get 1
          select
          i64.store offset=16
          
          ;; Revert free balance
          local.get 0
          i64.const 0
          local.get 7      ;; free_high
          local.get 3      ;; amount_high
          i64.sub
          local.get 2      ;; amount_low
          local.get 11     ;; free_low
          i64.gt_u
          i64.extend_i32_u
          i64.sub
          local.tee 3
          local.get 11
          local.get 2
          i64.sub
          local.tee 2
          local.get 11
          i64.gt_u
          local.get 3
          local.get 7
          i64.gt_u
          local.get 3
          local.get 7
          i64.eq
          select
          local.tee 1
          select
          i64.store offset=8
          
          local.get 0
          i64.const 0
          local.get 2
          local.get 1
          select
          i64.store
          
          i32.const 1      ;; Error flag
          local.set 5
          br 2             ;; @1 - Exit with BelowMinimum
        end
        
        ;; Check if this deposit would cause total overflow
        local.get 2        ;; amount_low
        local.get 12       ;; prev_free_low
        i64.add
        local.tee 7
        local.get 12
        i64.lt_u
        local.tee 0        ;; carry
        local.get 0
        i64.extend_i32_u
        local.get 3        ;; amount_high
        local.get 9        ;; prev_free_high
        i64.add
        i64.add
        local.tee 2        ;; new_total_high
        local.get 9
        i64.lt_u
        local.get 2
        local.get 9
        i64.eq
        select
        br_if 1            ;; @1 - Overflow in total
        
        ;; Store successful deposit amounts
        local.get 4
        local.get 7
        i64.store offset=32
        local.get 4
        local.get 2
        i64.store offset=40
        
        ;; Write updated account to storage
        local.get 1        ;; account_id_ptr
        local.get 4
        i32.const 32
        i32.add
        call 28            ;; write_account_to_storage
        
        ;; Emit Transfer event
        local.get 4
        i32.const 104
        i32.add
        local.get 1
        i32.const 24
        i32.add
        i64.load align=1
        i64.store
        local.get 4
        i32.const 96
        i32.add
        local.get 1
        i32.const 16
        i32.add
        i64.load align=1
        i64.store
        local.get 4
        local.get 2        ;; amount_high
        i64.store offset=120
        local.get 4
        local.get 7        ;; amount_low
        i64.store offset=112
        local.get 4
        local.get 1
        i32.const 8
        i32.add
        i64.load align=1
        i64.store offset=88
        local.get 4
        local.get 1
        i64.load align=1
        i64.store offset=80
        local.get 4
        i32.const 80
        i32.add
        call 42            ;; emit_transfer_event
      end
      
      i32.const 7          ;; Success
      local.set 5
    end
    
    local.get 4
    i32.const 128
    i32.add
    global.set 0
    local.get 5)

  ;; Function 71: Transfer with preservation and fortitude checks
  ;; Implements full transfer logic with balance locking and preservation
  ;; Used for: do_transfer, transfer_keep_alive implementations
  ;; Parameters: (result_ptr, from_ptr, to_ptr, amount_low, amount_high, preservation, fortitude) -> void
  ;; Result: Writes transfer result (success/error) to result_ptr
  (func $transfer_with_checks (;71;) (type 17) (param i32 i32 i32 i64 i64 i32 i32)
    (local i32 i32 i64 i64 i64 i64)
    ;; Local 7: stack frame
    ;; Local 8: comparison flags
    ;; Locals 9-12: i64 balance temporaries
    
    global.get 0
    i32.const 160
    i32.sub
    local.tee 7
    global.set 0
    
    block  ;; @1 - Exit point
      ;; Check if amount is zero
      local.get 3
      local.get 4
      i64.or
      i64.eqz
      if                 ;; if amount == 0
        ;; Return Ok with zero amount
        local.get 0
        i64.const 0
        i64.store offset=24
        local.get 0
        i64.const 0
        i64.store offset=16
        local.get 0
        i32.const 0
        i32.store8       ;; success flag
        br 1             ;; @1
      end
      
      ;; Load sender account
      local.get 7
      i32.const 16
      i32.add
      local.get 2        ;; from_ptr
      call 52            ;; read_account_from_storage
      
      ;; Calculate reducible balance for sender
      local.get 7
      i32.const -64
      i32.sub
      local.get 1        ;; to_ptr (used for ED comparison)
      i64.load offset=32 ;; existential_deposit (low)
      local.tee 11
      local.get 1
      i64.load offset=40 ;; existential_deposit (high)
      local.tee 12
      local.get 2        ;; from_ptr
      local.get 5        ;; preservation
      call 53            ;; calculate_reducible_balance
      
      ;; Get reducible amount
      local.get 7
      i64.load offset=72 ;; reducible (high)
      local.set 9
      local.get 7
      i64.load offset=64 ;; reducible (low)
      local.set 10
      
      ;; Determine error code and check amount
      local.get 0
      block (result i32) ;; Error classification
        block  ;; @3 - Various check blocks
          block  ;; @4
            block  ;; @5
              block  ;; @6
                block  ;; @7
                  ;; Check fortitude flag
                  local.get 6
                  i32.eqz
                  if       ;; if fortitude == Polite (0)
                    ;; Check if we have enough reducible balance
                    local.get 3 ;; amount_low
                    local.get 10 ;; reducible_low
                    i64.le_u
                    local.get 4 ;; amount_high
                    local.get 9 ;; reducible_high
                    i64.le_u
                    local.get 4
                    local.get 9
                    i64.eq
                    select
                    br_if 1      ;; @6 - We have enough reducible balance
                    
                    ;; Calculate: free - frozen - amount
                    local.get 3  ;; amount_low
                    i64.const 0
                    local.get 7
                    i64.load offset=16 ;; from.free (low)
                    local.tee 3
                    local.get 7
                    i64.load offset=48 ;; from.frozen (low)
                    local.tee 10
                    i64.sub
                    local.tee 9
                    local.get 3
                    local.get 9
                    i64.lt_u
                    local.get 7
                    i64.load offset=24 ;; from.free (high)
                    local.tee 9
                    local.get 7
                    i64.load offset=56 ;; from.frozen (high)
                    i64.sub
                    local.get 3
                    local.get 10
                    i64.lt_u
                    i64.extend_i32_u
                    i64.sub
                    local.tee 3
                    local.get 9
                    i64.gt_u
                    local.get 3
                    local.get 9
                    i64.eq
                    select
                    local.tee 1  ;; underflow flag
                    select
                    i64.gt_u
                    i64.const 0
                    local.get 3
                    local.get 1
                    select
                    local.tee 3  ;; usable balance (high)
                    local.get 4  ;; amount_high
                    i64.lt_u
                    local.get 3
                    local.get 4
                    i64.eq
                    select
                    i32.eqz
                    br_if 2      ;; @5 - Insufficient balance
                    
                    ;; Set error: liquidity restrictions
                    local.get 0
                    i32.const 0
                    i32.store8 offset=1
                    br 5         ;; @2 - Return error
                  end
                  
                  ;; Fortitude == Force: check against frozen amount
                  local.get 9  ;; reducible_high
                  local.get 10 ;; reducible_low
                  i64.or
                  i64.eqz
                  br_if 2      ;; @4 - No reducible balance
                  
                  ;; Select minimum of amount and reducible
                  local.get 9  ;; reducible_high
                  local.get 4  ;; amount_high
                  local.get 3  ;; amount_low
                  local.get 10 ;; reducible_low
                  i64.gt_u
                  local.get 4
                  local.get 9
                  i64.gt_u
                  local.get 4
                  local.get 9
                  i64.eq
                  select
                  local.tee 6  ;; comparison flag
                  select
                  local.set 4  ;; actual_amount_high
                  local.get 10
                  local.get 3
                  local.get 6
                  select
                  local.set 3  ;; actual_amount_low
                end
                
                ;; Check if sender has enough free balance
                local.get 7
                i64.load offset=16 ;; from.free (low)
                local.tee 9
                local.get 3      ;; amount_low
                i64.ge_u
                local.get 7
                i64.load offset=24 ;; from.free (high)
                local.tee 10
                local.get 4      ;; amount_high
                i64.ge_u
                local.get 4
                local.get 10
                i64.eq
                select
                br_if 2          ;; @3 - Has enough balance
                
                ;; Insufficient balance
                local.get 0
                i32.const 0
                i32.store8 offset=1
                br 3             ;; @2
              end
              
              ;; Liquidity restriction error
              local.get 0
              i32.const 3
              i32.store8 offset=1
              br 2             ;; @2
            end
            
            ;; No balance available
            local.get 0
            i64.const 0
            i64.store offset=24
            local.get 0
            i64.const 0
            i64.store offset=16
            i32.const 0        ;; Success with 0 transferred
            br 2             ;; @2 result path
          end
          
          block  ;; @4 - Preservation check
            ;; Check if transfer violates preservation
            i32.const 0
            local.get 5      ;; preservation flag
            i32.const 255
            i32.and
            
            ;; Complex preservation check logic
            local.get 3      ;; amount_low
            local.get 9      ;; from.free_low
            i64.xor
            local.get 4      ;; amount_high
            local.get 10     ;; from.free_high
            i64.xor
            i64.or
            i64.eqz          ;; amount == from.free (would drain account)
            
            ;; Check against existential deposit
            local.get 11     ;; ed_low
            local.get 9      ;; from.free_low
            local.get 3      ;; amount_low
            i64.sub
            local.tee 11     ;; new_from_balance_low
            i64.le_u
            local.get 10     ;; from.free_high
            local.get 4      ;; amount_high
            i64.sub
            local.get 3
            local.get 9
            i64.gt_u
            i64.extend_i32_u
            i64.sub
            local.tee 9      ;; new_from_balance_high
            local.get 12     ;; ed_high
            i64.ge_u
            local.get 9
            local.get 12
            i64.eq
            select
            i32.or           ;; (would_drain OR below_ed)
            local.tee 6
            select
            i32.eqz
            if               ;; if preservation allows
              ;; Update from account balance
              local.get 7
              local.get 11
              i64.store offset=16
              local.get 7
              local.get 9
              i64.store offset=24
              
              local.get 6
              br_if 1        ;; @4 - Skip deposit check if special case
              
              ;; Check deposit into recipient
              local.get 1    ;; to_ptr
              local.get 2    ;; from_ptr (for ED access)
              local.get 7
              i32.const 16
              i32.add
              call 76        ;; deposit check function
              local.tee 5
              i32.const 255
              i32.and
              i32.const 7
              i32.eq         ;; Check if success
              br_if 1        ;; @4
              
              ;; Deposit check failed
              local.get 0
              local.get 5
              i32.store8 offset=1
              br 2           ;; @2
            end
            
            ;; Preservation violation
            local.get 0
            i32.const 3
            i32.store8 offset=1
            br 1             ;; @2
          end
          
          ;; Success path: perform the transfer
          ;; Subtract from sender
          local.get 1        ;; to_ptr (account data)
          i64.const 0
          local.get 1
          i64.load         ;; to.free_low
          local.tee 9
          local.get 3      ;; amount_low
          i64.sub
          local.tee 10
          local.get 9
          local.get 10
          i64.lt_u
          local.get 1
          i64.load offset=8 ;; to.free_high
          local.tee 10
          local.get 4      ;; amount_high
          i64.sub
          local.get 3
          local.get 9
          i64.gt_u
          i64.extend_i32_u
          i64.sub
          local.tee 9
          local.get 10
          i64.gt_u
          local.get 9
          local.get 10
          i64.eq
          select
          local.tee 5
          select
          i64.store
          
          local.get 1
          i64.const 0
          local.get 9
          local.get 5
          select
          i64.store offset=8
          
          ;; Subtract from sender.reserved as well
          local.get 1
          i64.const 0
          local.get 1
          i64.load offset=16
          local.tee 9
          local.get 3
          i64.sub
          local.tee 10
          local.get 9
          local.get 10
          i64.lt_u
          local.get 1
          i64.load offset=24
          local.tee 10
          local.get 4
          i64.sub
          local.get 3
          local.get 9
          i64.gt_u
          i64.extend_i32_u
          i64.sub
          local.tee 9
          local.get 10
          i64.gt_u
          local.get 9
          local.get 10
          i64.eq
          select
          local.tee 5
          select
          i64.store offset=16
          
          local.get 1
          i64.const 0
          local.get 9
          local.get 5
          select
          i64.store offset=24
          
          ;; Write updated sender account
          local.get 2      ;; from_ptr
          local.get 7
          i32.const 16
          i32.add
          call 28          ;; write_account_to_storage
          
          ;; Build Transfer event
          local.get 7
          i32.const 88
          i32.add
          local.get 2
          i32.const 24
          i32.add
          i64.load align=1
          i64.store
          local.get 7
          i32.const 80
          i32.add
          local.get 2
          i32.const 16
          i32.add
          i64.load align=1
          i64.store
          local.get 7
          local.get 4      ;; amount_high
          i64.store offset=104
          local.get 7
          local.get 3      ;; amount_low
          i64.store offset=96
          local.get 7
          local.get 2
          i32.const 8
          i32.add
          i64.load align=1
          i64.store offset=72
          local.get 7
          local.get 2
          i64.load align=1
          i64.store offset=64
          
          ;; Initialize event encoder
          local.get 7
          i64.const 16384
          i64.store offset=136 align=4
          local.get 7
          i32.const 69258
          i32.store offset=132
          local.get 7
          i32.const 132
          i32.add
          local.tee 1      ;; encoder ptr
          
          ;; Encode Transfer event
          i32.const 2
          call 39          ;; encode_vec_length (event type)
          local.get 1
          i32.const 67784  ;; "Transfer" event signature
          call 34          ;; encode_event_topic
          
          ;; Build event data
          local.get 7
          i32.const 144
          i32.add
          local.tee 5
          local.get 1
          local.get 7
          i32.const -64
          i32.sub
          local.tee 8      ;; from account data
          call 43          ;; build_event_topic_hash
          
          local.get 7
          i32.const 112
          i32.add
          local.tee 6
          local.get 5
          call 44          ;; copy_event_buffer_state
          
          local.get 7
          i32.const 152
          i32.add
          local.get 7
          i32.const 120
          i32.add
          i32.load
          i32.store
          local.get 7
          local.get 7
          i64.load offset=112 align=4
          local.tee 9
          i64.store offset=144
          
          ;; Get topics info
          local.get 7
          i32.load offset=124
          local.set 1      ;; topics_ptr
          local.get 7
          i32.load offset=128
          local.set 2      ;; topics_len
          
          ;; Reset encoder for event data
          local.get 7
          i32.const 0
          i32.store offset=120
          local.get 7
          local.get 9
          i64.store offset=112 align=4
          
          ;; Encode event fields
          local.get 8      ;; from account
          local.get 6
          call 36          ;; encode_account_id
          
          local.get 3      ;; amount_low
          local.get 4      ;; amount_high
          local.get 6
          call 33          ;; encode_u128
          
          ;; Get final event data
          local.get 7
          local.get 7
          i64.load offset=112 align=4
          i64.store offset=144
          local.get 7
          i32.const 8
          i32.add
          local.get 5
          local.get 7
          i32.load offset=120
          call 22          ;; get_encoder_slice
          
          ;; Emit event
          local.get 1      ;; topics_ptr
          local.get 2      ;; topics_len
          local.get 7
          i32.load offset=8  ;; data_ptr
          local.get 7
          i32.load offset=12 ;; data_len
          call 2           ;; seal_deposit_event
          
          ;; Set success in result
          local.get 0
          local.get 4      ;; amount_high
          i64.store offset=24
          local.get 0
          local.get 3      ;; amount_low
          i64.store offset=16
          local.get 0
          i32.const 0
          i32.store8       ;; success flag
          br 2             ;; @1
        end
        i32.const 1        ;; Error: InsufficientBalance
      end
      i32.store8           ;; Store error code at result+1
    end
    
    local.get 7
    i32.const 160
    i32.add
    global.set 0)

  ;; Function 72: Check if deposit/withdrawal is allowed (can_deposit/can_withdraw)
  ;; Validates balance operation against frozen amount, ED, and overflow
  ;; Used for: Pre-flight checks before transfers, deposits, withdrawals
  ;; Parameters: (config_ptr, account_ptr, flags, amount_low, amount_high, mode) -> consequence_code
  ;; Returns: 0=Success, 2=BalanceLow, 3=WouldDie, 4=Overflow, 7=Success(alt)
  (func $check_transfer_allowed (;72;) (type 18) (param i32 i32 i32 i64 i64 i32) (result i32)
    (local i32 i32 i64 i64 i64 i64 i64 i64 i64)
    ;; Local 6: stack frame
    ;; Local 7: comparison/borrow flags
    ;; Locals 8-14: i64 balance calculation temporaries
    
    global.get 0
    i32.const 256
    i32.sub
    local.tee 6
    global.set 0
    
    block  ;; @1 - Final exit with result code
      block  ;; @2 - Success exit path
        ;; Quick check: zero amount always succeeds
        local.get 3      ;; amount_low
        local.get 4      ;; amount_high
        i64.or
        i64.eqz
        br_if 0          ;; @2 - Exit with success if amount == 0
        
        ;; Load from account (at param 1)
        local.get 6
        i32.const 16
        i32.add
        local.get 1
        call 52          ;; read_account_from_storage -> offset 16-63
        
        ;; Load to account (at param 2)
        local.get 6
        i32.const -64
        i32.sub          ;; offset 64
        local.get 2
        call 52
        
        ;; Calculate usable balance: free - frozen
        i64.const 0
        local.get 6
        i64.load offset=16 ;; from.free_low
        local.tee 10
        local.get 6
        i64.load offset=48 ;; from.frozen_low
        local.tee 9
        i64.sub
        local.tee 8      ;; usable_low (temp)
        local.get 8
        local.get 10
        i64.gt_u         ;; Check if subtraction underflowed
        local.get 6
        i64.load offset=24 ;; from.free_high
        local.tee 8
        local.get 6
        i64.load offset=56 ;; from.frozen_high
        i64.sub
        local.get 9
        local.get 10
        i64.gt_u
        i64.extend_i32_u
        i64.sub
        local.tee 9      ;; usable_high (with borrow)
        local.get 8
        i64.gt_u
        local.get 8
        local.get 9
        i64.eq
        select
        local.tee 7      ;; underflow flag
        select           ;; usable_low (0 if underflow)
        
        ;; Check: usable >= amount
        local.get 3      ;; amount_low
        i64.ge_u
        i64.const 0
        local.get 9
        local.get 7
        select           ;; usable_high (0 if underflow)
        local.tee 9
        local.get 4      ;; amount_high
        i64.ge_u
        local.get 4
        local.get 9
        i64.eq
        select
        i32.eqz
        if               ;; if usable < amount
          i32.const 2    ;; BalanceLow
          local.set 5
          br 2           ;; @1 - Return BalanceLow
        end
        
        block  ;; @3 - Expendability check path
          block  ;; @4 - Can proceed path
            block  ;; @5 - Amount exceeds free path
              ;; Check mode/provenance parameter
              local.get 5  ;; mode parameter
              i32.const 255
              i32.and
              if           ;; if mode != 0 (preservation required)
                ;; Check if amount > free (would need to touch reserved/frozen)
                local.get 3 ;; amount_low
                local.get 10 ;; from.free_low
                i64.gt_u
                local.tee 7  ;; comparison result
                local.get 4  ;; amount_high
                local.get 8  ;; from.free_high
                i64.gt_u
                local.get 4
                local.get 8
                i64.eq
                select
                br_if 1      ;; @5 - Amount exceeds free
                
                ;; Check if new balance would be below ED
                local.get 0  ;; config_ptr
                i64.load offset=32 ;; existential_deposit_low
                local.get 10 ;; from.free_low
                local.get 3  ;; amount_low
                i64.sub
                i64.gt_u     ;; ED > (free - amount)
                local.get 8  ;; from.free_high
                local.get 4  ;; amount_high
                i64.sub
                local.get 7
                i64.extend_i32_u
                i64.sub
                local.tee 9  ;; new_balance_high
                local.get 0
                i64.load offset=40 ;; existential_deposit_high
                local.tee 11
                i64.lt_u
                local.get 9
                local.get 11
                i64.eq
                select
                br_if 3      ;; @2 - Would violate ED, but success for can_withdraw
              end
              
              ;; Check if amount <= free (basic balance check)
              local.get 3    ;; amount_low
              local.get 10   ;; from.free_low
              i64.gt_u
              local.tee 7
              local.get 4    ;; amount_high
              local.get 8    ;; from.free_high
              i64.gt_u
              local.get 4
              local.get 8
              i64.eq
              select
              i32.eqz
              br_if 1        ;; @4 - Amount ok, can proceed
            end
            
            ;; Amount validation failed
            i32.const 0      ;; Success (for certain check types)
            local.set 5
            br 3             ;; @1
          end
          
          ;; Calculate new balances after transfer
          ;; new_from_balance = from.free - amount
          local.get 6
          local.get 10       ;; from.free_low
          local.get 3        ;; amount_low
          i64.sub
          local.tee 13       ;; new_from_balance_low
          i64.store offset=16
          local.get 6
          local.get 8        ;; from.free_high
          local.get 4        ;; amount_high
          i64.sub
          local.get 7        ;; borrow flag
          i64.extend_i32_u
          i64.sub
          local.tee 9        ;; new_from_balance_high
          i64.store offset=24
          
          ;; new_to_balance = to.free + amount
          local.get 6
          i64.load offset=64 ;; to.free_low
          local.tee 11
          local.get 3        ;; amount_low
          i64.add
          local.tee 14       ;; new_to_balance_low
          local.get 11
          i64.lt_u           ;; carry flag
          local.tee 7
          local.get 7
          i64.extend_i32_u
          local.get 6
          i64.load offset=72 ;; to.free_high
          local.tee 11
          local.get 4        ;; amount_high
          i64.add
          i64.add
          local.tee 12       ;; new_to_balance_high
          local.get 11
          i64.lt_u
          local.get 11
          local.get 12
          i64.eq
          select
          if                 ;; if overflow in recipient
            i32.const 4      ;; Overflow
            local.set 5
            br 3             ;; @1
          end
          
          ;; Update temporary to account balance
          local.get 6
          local.get 14
          i64.store offset=64
          local.get 6
          local.get 12
          i64.store offset=72
          
          block  ;; @4 - Final validation
            ;; Check if this is exact balance match (would drain completely)
            local.get 3      ;; amount_low
            local.get 10     ;; from.free_low
            i64.xor
            local.get 4      ;; amount_high
            local.get 8      ;; from.free_high
            i64.xor
            i64.or
            i64.eqz
            br_if 0          ;; @4 - Exact match, skip ED check
            
            ;; Check if new balance is below ED
            local.get 13     ;; new_from_balance_low
            local.get 0
            i64.load offset=32 ;; ed_low
            i64.lt_u
            local.get 9      ;; new_from_balance_high
            local.get 0
            i64.load offset=40 ;; ed_high
            local.tee 8
            i64.lt_u
            local.get 8
            local.get 9
            i64.eq
            select
            i32.eqz
            br_if 0          ;; @4 - Above ED, ok
            
            ;; Below ED: check mode
            local.get 5
            i32.const 255
            i32.and
            br_if 1          ;; @3 - Mode allows going below ED
            
            ;; Call additional check function
            local.get 0
            local.get 1
            local.get 6
            i32.const 16
            i32.add
            call 76          ;; Additional transfer validation
            local.tee 5
            i32.const 255
            i32.and
            i32.const 7
            i32.ne           ;; Check if not Success
            br_if 3          ;; @1 - Return error from check
          end
          
          ;; All checks passed: write updated accounts
          local.get 1        ;; from_account_ptr
          local.get 6
          i32.const 16
          i32.add
          call 28            ;; write_account_to_storage
          
          local.get 2        ;; to_account_ptr
          local.get 6
          i32.const -64
          i32.sub
          call 28
          
          ;; Build Transfer event structure at various offsets
          ;; Copy to account bytes (misaligned, hence align=2)
          local.get 6
          i32.const 186
          i32.add
          local.get 2
          i32.const 24
          i32.add
          i64.load align=1
          i64.store align=2  ;; to account bytes 24-31
          
          local.get 6
          i32.const 178
          i32.add
          local.get 2
          i32.const 16
          i32.add
          i64.load align=1
          i64.store align=2  ;; to account bytes 16-23
          
          local.get 6
          i32.const 170
          i32.add
          local.get 2
          i32.const 8
          i32.add
          i64.load align=1
          i64.store align=2  ;; to account bytes 8-15
          
          ;; Copy from account bytes (aligned)
          local.get 6
          i32.const 137
          i32.add
          local.get 1
          i32.const 8
          i32.add
          i64.load align=1
          i64.store align=1  ;; from account bytes 8-15
          
          local.get 6
          i32.const 145
          i32.add
          local.get 1
          i32.const 16
          i32.add
          i64.load align=1
          i64.store align=1  ;; from account bytes 16-23
          
          local.get 6
          i32.const 153
          i32.add
          local.get 1
          i32.const 24
          i32.add
          i64.load align=1
          i64.store align=1  ;; from account bytes 24-31
          
          ;; Store transfer amount
          local.get 6
          local.get 4
          i64.store offset=120 ;; amount_high
          local.get 6
          local.get 3
          i64.store offset=112 ;; amount_low
          
          ;; Store event flags
          local.get 6
          i32.const 1
          i32.store8 offset=128 ;; Some(from) discriminant
          
          ;; Store to account at offset 162
          local.get 6
          local.get 2
          i64.load align=1
          i64.store offset=162 align=2 ;; to account bytes 0-7
          
          ;; Store from account at offset 129
          local.get 6
          local.get 1
          i64.load align=1
          i64.store offset=129 align=1 ;; from account bytes 0-7
          
          local.get 6
          i32.const 1
          i32.store8 offset=161 ;; Some(to) discriminant
          
          ;; Initialize event encoder
          local.get 6
          i32.const 69258
          i32.store offset=244
          local.get 6
          i64.const 16384
          i64.store offset=248 align=4
          local.get 6
          i32.const 244
          i32.add
          local.tee 0      ;; encoder ptr
          
          ;; Encode Transfer event (3 topics)
          i32.const 3
          call 39          ;; encode event count
          local.get 0
          i32.const 67553  ;; "Transfer" signature
          call 34          ;; encode_event_topic
          
          ;; Encode from and to topics
          local.get 0
          local.get 6
          i32.const 129
          i32.add          ;; from Option<AccountId> at offset 129
          call 34
          local.get 0
          local.get 6
          i32.const 162
          i32.add          ;; to Option<AccountId> at offset 162
          call 34
          
          ;; Get event buffer
          local.get 6
          i32.const 224
          i32.add
          local.tee 2
          local.get 0
          call 44          ;; copy_event_buffer_state
          
          local.get 6
          i32.const 216
          i32.add
          local.get 6
          i32.const 232
          i32.add
          i32.load
          i32.store
          local.get 6
          local.get 6
          i64.load offset=224 align=4
          local.tee 8
          i64.store offset=208
          
          ;; Save topics info
          local.get 6
          i32.load offset=236
          local.set 0      ;; topics_ptr
          local.get 6
          i32.load offset=240
          local.set 1      ;; topics_len
          
          ;; Reset for data encoding
          local.get 6
          i32.const 0
          i32.store offset=232
          local.get 6
          local.get 8
          i64.store offset=224 align=4
          
          ;; Encode event data payload
          local.get 6
          i32.const 128
          i32.add          ;; from Option<AccountId>
          local.get 2
          call 63          ;; encode_option_account_id
          
          local.get 6
          i32.const 161
          i32.add          ;; to Option<AccountId>
          local.get 2
          call 63
          
          ;; Encode transfer amount
          local.get 3      ;; amount_low
          local.get 4      ;; amount_high
          local.get 2
          call 33          ;; encode_u128
          
          ;; Get final event data
          local.get 6
          local.get 6
          i64.load offset=224 align=4
          i64.store offset=208
          local.get 6
          i32.const 8
          i32.add
          local.get 6
          i32.const 208
          i32.add
          local.get 6
          i32.load offset=232
          call 22          ;; get_encoder_slice
          
          ;; Emit Transfer event
          local.get 0      ;; topics_ptr
          local.get 1      ;; topics_len
          local.get 6
          i32.load offset=8  ;; data_ptr
          local.get 6
          i32.load offset=12 ;; data_len
          call 2           ;; seal_deposit_event
          br 1             ;; @2 - Success
        end
        
        ;; Expendability violation
        i32.const 3        ;; WouldDie
        local.set 5
        br 1               ;; @1
      end
      
      ;; Success path
      i32.const 7          ;; Success
      local.set 5
    end
    
    local.get 6
    i32.const 256
    i32.add
    global.set 0
    local.get 5)         ;; Return consequence code

  ;; ============================================================================
  ;; MAIN CONTRACT DISPATCHER
  ;; ============================================================================

  ;; Function 73: Main contract call dispatcher (call entrypoint)
  ;; Decodes input message selector (4-byte hash) and routes to handler
  ;; Used for: All contract message calls
  ;; Parameters: () -> never_returns (calls seal_return)
  ;; Message format: selector(4 bytes) + SCALE-encoded parameters
  (func $dispatch_call (;73;) (type 6)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i64 i64 i64 i64 i64 i64 i64 i64 i64 i64)
    ;; Local 0-9: i32 temps for control flow, pointers, flags
    ;; Local 10-19: i64 temps for Balance values, message parameters
    
    global.get 0
    i32.const 640
    i32.sub
    local.tee 0          ;; Local 0: stack frame base
    global.set 0
    
    block  ;; @1 - Dispatcher exit (calls seal_return)
      block  ;; @2 - Invalid message selector error
        ;; Check if contract was paid (payable check)
        call 48            ;; check_value_transferred
        i32.const 255
        i32.and
        i32.const 5
        i32.eq             ;; 5 = unpayable (no value sent)
        if                 ;; All messages should be unpayable
          ;; Read contract input
          local.get 0
          i32.const 16384  ;; Max input size
          i32.store offset=288
          i32.const 69258  ;; Input buffer ptr
          local.get 0
          i32.const 288
          i32.add
          call 1           ;; seal_input(buf_ptr, buf_len_ptr)
          
          ;; Validate input buffer
          local.get 0
          i32.const 72
          i32.add
          local.get 0
          i32.load offset=288 ;; actual input length
          i32.const 69258     ;; buffer ptr
          i32.const 16384     ;; buffer capacity
          i32.const 66964     ;; error context
          call 17             ;; check_slice_length
          
          ;; Set up SCALE decoder
          local.get 0
          i32.load offset=72  ;; input_ptr
          local.set 1
          local.get 0
          local.get 0
          i32.load offset=76  ;; input_len
          local.tee 2
          i32.store offset=548
          local.get 0
          local.get 1
          i32.store offset=544
          
          ;; Check minimum length (need at least 4 bytes for selector)
          local.get 2
          i32.const 4
          i32.lt_u
          br_if 1            ;; @2 - Error: input too short
          
          ;; Read 4-byte selector
          local.get 0
          local.get 2
          i32.const 4
          i32.sub
          local.tee 3        ;; Local 3: remaining_len
          i32.store offset=548
          local.get 0
          local.get 1
          i32.const 4
          i32.add
          i32.store offset=544 ;; Advance reader past selector
          
          local.get 1
          i32.load align=1   ;; Load 4-byte selector (unaligned)
          local.tee 5        ;; Local 5: full selector
          
          ;; Extract selector bytes for matching
          i32.const 24
          i32.shr_u
          local.set 4        ;; Local 4: byte 3
          local.get 5
          i32.const 16
          i32.shr_u
          local.set 6        ;; Local 6: byte 2
          local.get 5
          i32.const 8
          i32.shr_u
          local.set 7        ;; Local 7: byte 1
          
          ;; Begin massive selector matching cascade
          block  ;; @4 - Match block exit
            block  ;; @5
              block  ;; @6
                block  ;; @7
                  block  ;; @8
                    block  ;; @9
                      block  ;; @10
                        block  ;; @11
                          block  ;; @12
                            block  ;; @13
                              block  ;; @14
                                block  ;; @15
                                  block  ;; @16
                                    block  ;; @17
                                      block  ;; @18
                                        block  ;; @19
                                          block  ;; @20
                                            block  ;; @21
                                              block  ;; @22
                                                block  ;; @23
                                                  block  ;; @24
                                                    block  ;; @25
                                                      block  ;; @26
                                                        block  ;; @27
                                                          block  ;; @28
                                                            block  ;; @29
                                                              block  ;; @30
                                                                block  ;; @31
                                                                  block  ;; @32
                                                                    block  ;; @33
                                                                      block  ;; @34
                                                                        block  ;; @35
                                                                          block  ;; @36
                                                                            block  ;; @37
                                                                              ;; First-level dispatch on byte 0
                                                                              local.get 5
                                                                              i32.const 255
                                                                              i32.and
                                                                              local.tee 5    ;; Local 5: byte 0 (reused)
                                                                              
                                                                              ;; Subtable 1: selectors starting with 0xC8-0xD0
                                                                              i32.const 200
                                                                              i32.sub
                                                                              br_table 26 (;@11;) 35 (;@2;) 35 (;@2;) 9 (;@28;) 
                                                                                      35 (;@2;) 35 (;@2;) 1 (;@36;) 18 (;@19;) 
                                                                                      0 (;@37;)
                                                                            end
                                                                            
                                                                            block  ;; @37
                                                                              ;; Subtable 2: selectors starting with 0xF3-0xFA
                                                                              local.get 5
                                                                              i32.const 243
                                                                              i32.sub
                                                                              br_table 5 (;@32;) 17 (;@20;) 35 (;@2;) 35 (;@2;)
                                                                                      12 (;@25;) 35 (;@2;) 10 (;@27;) 0 (;@37;)
                                                                            end
                                                                            
                                                                            block  ;; @37
                                                                              ;; Subtable 3: selectors 0x2E-0x33
                                                                              local.get 5
                                                                              i32.const 46
                                                                              i32.sub
                                                                              br_table 21 (;@16;) 35 (;@2;) 25 (;@12;) 35 (;@2;)
                                                                                      35 (;@2;) 16 (;@21;) 0 (;@37;)
                                                                            end
                                                                            
                                                                            block  ;; @37
                                                                              ;; Subtable 4: selectors 0x05-0x07
                                                                              local.get 5
                                                                              i32.const 5
                                                                              i32.sub
                                                                              br_table 6 (;@31;) 11 (;@26;) 0 (;@37;)
                                                                            end
                                                                            
                                                                            block  ;; @37
                                                                              ;; Subtable 5: selectors 0x10-0x11
                                                                              local.get 5
                                                                              i32.const 16
                                                                              i32.sub
                                                                              br_table 20 (;@17;) 29 (;@8;) 0 (;@37;)
                                                                            end
                                                                            
                                                                            block  ;; @37
                                                                              ;; Subtable 6: selectors 0x84-0x85
                                                                              local.get 5
                                                                              i32.const 132
                                                                              i32.sub
                                                                              br_table 23 (;@14;) 7 (;@30;) 0 (;@37;)
                                                                            end
                                                                            
                                                                            block  ;; @37
                                                                              ;; Subtable 7: selectors 0xA0-0xA1
                                                                              local.get 5
                                                                              i32.const 160
                                                                              i32.sub
                                                                              br_table 15 (;@22;) 4 (;@33;) 0 (;@37;)
                                                                            end
                                                                            
                                                                            block  ;; @37
                                                                              ;; Subtable 8: selectors 0xB2-0xB4
                                                                              local.get 5
                                                                              i32.const 178
                                                                              i32.sub
                                                                              br_table 22 (;@15;) 35 (;@2;) 3 (;@34;) 0 (;@37;)
                                                                            end
                                                                            
                                                                            ;; Individual selector checks for remaining values
                                                                            local.get 5
                                                                            i32.const 26
                                                                            i32.ne
                                                                            if               ;; if byte0 != 0x1A
                                                                              local.get 5
                                                                              i32.const 39
                                                                              i32.eq
                                                                              br_if 19       ;; @18 - Selector 0x27
                                                                              
                                                                              local.get 5
                                                                              i32.const 232
                                                                              i32.eq
                                                                              br_if 14       ;; @23 - Selector 0xE8
                                                                              
                                                                              local.get 5
                                                                              i32.const 85
                                                                              i32.eq
                                                                              br_if 8        ;; @29 - Selector 0x55
                                                                              
                                                                              block  ;; @38
                                                                                local.get 5
                                                                                i32.const 106
                                                                                i32.ne
                                                                                if           ;; if byte0 != 0x6A
                                                                                  local.get 5
                                                                                  i32.const 120
                                                                                  i32.eq
                                                                                  br_if 32   ;; @7 - Selector 0x78
                                                                                  
                                                                                  local.get 5
                                                                                  i32.const 139
                                                                                  i32.eq
                                                                                  br_if 4    ;; @35 - Selector 0x8B
                                                                                  
                                                                                  local.get 5
                                                                                  i32.const 152
                                                                                  i32.eq
                                                                                  br_if 1    ;; @38 - Selector 0x98
                                                                                  
                                                                                  local.get 5
                                                                                  i32.const 167
                                                                                  i32.eq
                                                                                  br_if 15   ;; @24 - Selector 0xA7
                                                                                  
                                                                                  local.get 5
                                                                                  i32.const 194
                                                                                  i32.eq
                                                                                  br_if 26   ;; @13 - Selector 0xC2
                                                                                  
                                                                                  local.get 5
                                                                                  i32.const 220
                                                                                  i32.eq
                                                                                  br_if 30   ;; @9 - Selector 0xDC
                                                                                  
                                                                                  local.get 5
                                                                                  i32.const 225
                                                                                  i32.eq
                                                                                  br_if 29   ;; @10 - Selector 0xE1
                                                                                  
                                                                                  ;; Final check: exact 4-byte selector match for 0x8B3BEC3B
                                                                                  local.get 5
                                                                                  i32.const 59         ;; byte 0 == 0x3B
                                                                                  i32.ne
                                                                                  local.get 4
                                                                                  i32.const 244        ;; byte 3 == 0xF4
                                                                                  i32.ne
                                                                                  i32.or
                                                                                  local.get 7
                                                                                  i32.const 255
                                                                                  i32.and
                                                                                  i32.const 236        ;; byte 1 == 0xEC
                                                                                  i32.ne
                                                                                  local.get 6
                                                                                  i32.const 255
                                                                                  i32.and
                                                                                  i32.const 139        ;; byte 2 == 0x8B
                                                                                  i32.ne
                                                                                  i32.or
                                                                                  i32.or
                                                                                  br_if 37             ;; @2 - No match, error
                                                                                  br 38                ;; @1 - Match: deploy entrypoint
                                                                                end
                                                                                
                                                                                ;; Selector 0x64EA3206 (0x6A base): total_issuance()
                                                                                local.get 4
                                                                                i32.const 50
                                                                                i32.ne
                                                                                local.get 7
                                                                                i32.const 255
                                                                                i32.and
                                                                                i32.const 234
                                                                                i32.ne
                                                                                i32.or
                                                                                local.get 6
                                                                                i32.const 255
                                                                                i32.and
                                                                                i32.const 100
                                                                                i32.ne
                                                                                i32.or
                                                                                br_if 36             ;; @2 - No match
                                                                                i32.const 1          ;; Handler index = 1
                                                                                local.set 8
                                                                                br 37                ;; @1 - Matched
                                                                              end
                                                                              
                                                                              ;; Selector 0x5181F8E3 (0x98 base): active_issuance()
                                                                              local.get 4
                                                                              i32.const 143
                                                                              i32.ne
                                                                              local.get 7
                                                                              i32.const 255
                                                                              i32.and
                                                                              i32.const 248
                                                                              i32.ne
                                                                              i32.or
                                                                              local.get 6
                                                                              i32.const 255
                                                                              i32.and
                                                                              i32.const 81
                                                                              i32.ne
                                                                              i32.or
                                                                              br_if 35             ;; @2
                                                                              i32.const 2
                                                                              local.set 8
                                                                              br 36                ;; @1
                                                                            end
                                                                            
                                                                            ;; Selector 0x88A46324 (0xA7 base): existential_deposit()
                                                                            local.get 4
                                                                            i32.const 99
                                                                            i32.ne
                                                                            local.get 7
                                                                            i32.const 255
                                                                            i32.and
                                                                            i32.const 164
                                                                            i32.ne
                                                                            i32.or
                                                                            local.get 6
                                                                            i32.const 255
                                                                            i32.and
                                                                            i32.const 136
                                                                            i32.ne
                                                                            i32.or
                                                                            br_if 34             ;; @2
                                                                            i32.const 3
                                                                            local.set 8
                                                                            br 35                ;; @1
                                                                          end
                                                                          
                                                                          ;; Selector 0x461AF21A (0xC6 base): mint(to, amount)
                                                                          local.get 4
                                                                          i32.const 26
                                                                          i32.ne
                                                                          local.get 7
                                                                          i32.const 255
                                                                          i32.and
                                                                          i32.const 242
                                                                          i32.ne
                                                                          i32.or
                                                                          local.get 6
                                                                          i32.const 255
                                                                          i32.and
                                                                          i32.const 70
                                                                          i32.ne
                                                                          local.get 3                ;; remaining_len
                                                                          i32.const 31
                                                                          i32.le_u                   ;; Need at least 32 bytes (AccountId)
                                                                          i32.or
                                                                          i32.or
                                                                          br_if 33                   ;; @2
                                                                          
                                                                          ;; Decode mint parameters
                                                                          local.get 1
                                                                          i32.load8_u offset=5       ;; Load bytes for AccountId
                                                                          local.set 6
                                                                          local.get 1
                                                                          i32.load8_u offset=4
                                                                          local.set 7
                                                                          local.get 1
                                                                          i64.load offset=6 align=1
                                                                          local.set 10
                                                                          
                                                                          ;; Copy AccountId to offset 288
                                                                          local.get 0
                                                                          i32.const 300
                                                                          i32.add
                                                                          local.get 1
                                                                          i32.const 18
                                                                          i32.add
                                                                          i32.load8_u
                                                                          i32.store8
                                                                          local.get 0
                                                                          i32.const 296
                                                                          i32.add
                                                                          local.get 1
                                                                          i32.const 14
                                                                          i32.add
                                                                          i32.load align=1
                                                                          i32.store
                                                                          local.get 0
                                                                          local.get 10
                                                                          i64.store offset=288
                                                                          
                                                                          ;; Store AccountId at offset 160 as well
                                                                          local.get 0
                                                                          local.get 10
                                                                          i64.store offset=160
                                                                          local.get 0
                                                                          local.get 0
                                                                          i64.load offset=293 align=1
                                                                          i64.store offset=165 align=1
                                                                          
                                                                          ;; Decode amount (u128) at bytes 19-34
                                                                          local.get 1
                                                                          i64.load offset=27 align=1
                                                                          local.tee 11
                                                                          i64.const 56
                                                                          i64.shl
                                                                          local.get 1
                                                                          i64.load offset=19 align=1
                                                                          local.tee 10
                                                                          i64.const 8
                                                                          i64.shr_u
                                                                          i64.or
                                                                          local.set 12           ;; amount_low (reconstructed from unaligned load)
                                                                          local.get 11
                                                                          i64.const 8
                                                                          i64.shr_u
                                                                          local.set 14           ;; amount_high
                                                                          
                                                                          local.get 1
                                                                          i32.load8_u offset=35
                                                                          local.set 4            ;; Extra byte (possibly for alignment/validation)
                                                                          local.get 10
                                                                          i32.wrap_i64
                                                                          local.set 5
                                                                          
                                                                          i32.const 4            ;; Handler index = 4 (mint)
                                                                          local.set 8
                                                                          br 34                  ;; @1 - Dispatch to mint handler
                                                                        end
                                                                        
                                                                        ;; Selector 0x8F142D14 (0xCE base): transfer(to, amount)
                                                                        local.get 4
                                                                        i32.const 20
                                                                        i32.ne
                                                                        local.get 7
                                                                        i32.const 255
                                                                        i32.and
                                                                        i32.const 45
                                                                        i32.ne
                                                                        i32.or
                                                                        local.get 6
                                                                        i32.const 255
                                                                        i32.and
                                                                        i32.const 143
                                                                        i32.ne
                                                                        local.get 3
                                                                        i32.const 31
                                                                        i32.le_u
                                                                        i32.or
                                                                        i32.or
                                                                        br_if 32                 ;; @2
                                                                        
                                                                        ;; Decode transfer parameters (similar to mint)
                                                                        local.get 1
                                                                        i32.load8_u offset=5
                                                                        local.set 6
                                                                        local.get 1
                                                                        i32.load8_u offset=4
                                                                        local.set 7
                                                                        local.get 1
                                                                        i64.load offset=6 align=1
                                                                        local.set 10
                                                                        local.get 0
                                                                        i32.const 300
                                                                        i32.add
                                                                        local.get 1
                                                                        i32.const 18
                                                                        i32.add
                                                                        i32.load8_u
                                                                        i32.store8
                                                                        local.get 0
                                                                        i32.const 296
                                                                        i32.add
                                                                        local.get 1
                                                                        i32.const 14
                                                                        i32.add
                                                                        i32.load align=1
                                                                        i32.store
                                                                        local.get 0
                                                                        local.get 10
                                                                        i64.store offset=288
                                                                        local.get 0
                                                                        local.get 10
                                                                        i64.store offset=160
                                                                        local.get 0
                                                                        local.get 0
                                                                        i64.load offset=293 align=1
                                                                        i64.store offset=165 align=1
                                                                        
                                                                        ;; Decode amount
                                                                        local.get 1
                                                                        i64.load offset=27 align=1
                                                                        local.tee 11
                                                                        i64.const 56
                                                                        i64.shl
                                                                        local.get 1
                                                                        i64.load offset=19 align=1
                                                                        local.tee 10
                                                                        i64.const 8
                                                                        i64.shr_u
                                                                        i64.or
                                                                        local.set 12
                                                                        local.get 11
                                                                        i64.const 8
                                                                        i64.shr_u
                                                                        local.set 14
                                                                        local.get 1
                                                                        i32.load8_u offset=35
                                                                        local.set 4
                                                                        local.get 10
                                                                        i32.wrap_i64
                                                                        local.set 5
                                                                        i32.const 5
                                                                        local.set 8
                                                                        br 33                    ;; @1
                                                                      end
                                                                      local.get 4
                                                                      i32.const 132
                                                                      i32.ne
                                                                      local.get 7
                                                                      i32.const 255
                                                                      i32.and
                                                                      i32.const 140
                                                                      i32.ne
                                                                      i32.or
                                                                      local.get 6
                                                                      i32.const 255
                                                                      i32.and
                                                                      i32.const 22
                                                                      i32.ne
                                                                      local.get 3
                                                                      i32.const 31
                                                                      i32.le_u
                                                                      i32.or
                                                                      i32.or
                                                                      br_if 31 (;@2;)
                                                                      local.get 1
                                                                      i32.load8_u offset=5
                                                                      local.set 6
                                                                      local.get 1
                                                                      i32.load8_u offset=4
                                                                      local.set 7
                                                                      local.get 1
                                                                      i64.load offset=6 align=1
                                                                      local.set 10
                                                                      local.get 0
                                                                      i32.const 300
                                                                      i32.add
                                                                      local.get 1
                                                                      i32.const 18
                                                                      i32.add
                                                                      i32.load8_u
                                                                      i32.store8
                                                                      local.get 0
                                                                      i32.const 296
                                                                      i32.add
                                                                      local.get 1
                                                                      i32.const 14
                                                                      i32.add
                                                                      i32.load align=1
                                                                      i32.store
                                                                      local.get 0
                                                                      local.get 10
                                                                      i64.store offset=288
                                                                      local.get 0
                                                                      local.get 10
                                                                      i64.store offset=160
                                                                      local.get 0
                                                                      local.get 0
                                                                      i64.load offset=293 align=1
                                                                      i64.store offset=165 align=1
                                                                      local.get 1
                                                                      i64.load offset=27 align=1
                                                                      local.tee 11
                                                                      i64.const 56
                                                                      i64.shl
                                                                      local.get 1
                                                                      i64.load offset=19 align=1
                                                                      local.tee 10
                                                                      i64.const 8
                                                                      i64.shr_u
                                                                      i64.or
                                                                      local.set 12
                                                                      local.get 11
                                                                      i64.const 8
                                                                      i64.shr_u
                                                                      local.set 14
                                                                      local.get 1
                                                                      i32.load8_u offset=35
                                                                      local.set 4
                                                                      local.get 10
                                                                      i32.wrap_i64
                                                                      local.set 5
                                                                      i32.const 6
                                                                      local.set 8
                                                                      br 32 (;@1;)
                                                                    end
                                                                    local.get 4
                                                                    i32.const 143
                                                                    i32.ne
                                                                    local.get 7
                                                                    i32.const 255
                                                                    i32.and
                                                                    i32.const 148
                                                                    i32.ne
                                                                    i32.or
                                                                    local.get 6
                                                                    i32.const 255
                                                                    i32.and
                                                                    i32.const 163
                                                                    i32.ne
                                                                    local.get 3
                                                                    i32.const 31
                                                                    i32.le_u
                                                                    i32.or
                                                                    i32.or
                                                                    br_if 30 (;@2;)
                                                                    local.get 1
                                                                    i32.load8_u offset=5
                                                                    local.set 6
                                                                    local.get 1
                                                                    i32.load8_u offset=4
                                                                    local.set 7
                                                                    local.get 1
                                                                    i64.load offset=6 align=1
                                                                    local.set 10
                                                                    local.get 0
                                                                    i32.const 300
                                                                    i32.add
                                                                    local.get 1
                                                                    i32.const 18
                                                                    i32.add
                                                                    i32.load8_u
                                                                    i32.store8
                                                                    local.get 0
                                                                    i32.const 296
                                                                    i32.add
                                                                    local.get 1
                                                                    i32.const 14
                                                                    i32.add
                                                                    i32.load align=1
                                                                    i32.store
                                                                    local.get 0
                                                                    local.get 10
                                                                    i64.store offset=288
                                                                    local.get 0
                                                                    local.get 1
                                                                    i32.const 36
                                                                    i32.add
                                                                    i32.store offset=544
                                                                    local.get 0
                                                                    local.get 10
                                                                    i64.store offset=160
                                                                    local.get 0
                                                                    local.get 0
                                                                    i64.load offset=293 align=1
                                                                    i64.store offset=165 align=1
                                                                    local.get 1
                                                                    i64.load offset=27 align=1
                                                                    local.tee 11
                                                                    i64.const 56
                                                                    i64.shl
                                                                    local.get 1
                                                                    i64.load offset=19 align=1
                                                                    local.tee 10
                                                                    i64.const 8
                                                                    i64.shr_u
                                                                    i64.or
                                                                    local.set 12
                                                                    local.get 11
                                                                    i64.const 8
                                                                    i64.shr_u
                                                                    local.set 14
                                                                    local.get 1
                                                                    i32.load8_u offset=35
                                                                    local.set 4
                                                                    local.get 10
                                                                    i32.wrap_i64
                                                                    local.set 5
                                                                    i32.const 7
                                                                    local.set 8
                                                                    br 31 (;@1;)
                                                                  end
                                                                  local.get 4
                                                                  i32.const 96
                                                                  i32.ne
                                                                  local.get 7
                                                                  i32.const 255
                                                                  i32.and
                                                                  i32.const 54
                                                                  i32.ne
                                                                  i32.or
                                                                  local.get 6
                                                                  i32.const 255
                                                                  i32.and
                                                                  i32.const 23
                                                                  i32.ne
                                                                  local.get 3
                                                                  i32.const 31
                                                                  i32.le_u
                                                                  i32.or
                                                                  i32.or
                                                                  br_if 29 (;@2;)
                                                                  local.get 0
                                                                  local.get 2
                                                                  i32.const 36
                                                                  i32.sub
                                                                  i32.store offset=548
                                                                  local.get 1
                                                                  i32.load8_u offset=5
                                                                  local.set 6
                                                                  local.get 1
                                                                  i32.load8_u offset=4
                                                                  local.set 7
                                                                  local.get 1
                                                                  i64.load offset=6 align=1
                                                                  local.set 10
                                                                  local.get 0
                                                                  i32.const 300
                                                                  i32.add
                                                                  local.get 1
                                                                  i32.const 18
                                                                  i32.add
                                                                  i32.load8_u
                                                                  i32.store8
                                                                  i32.const 8
                                                                  local.set 8
                                                                  local.get 0
                                                                  i32.const 296
                                                                  i32.add
                                                                  local.get 1
                                                                  i32.const 14
                                                                  i32.add
                                                                  i32.load align=1
                                                                  i32.store
                                                                  local.get 0
                                                                  local.get 10
                                                                  i64.store offset=288
                                                                  local.get 0
                                                                  local.get 1
                                                                  i32.const 36
                                                                  i32.add
                                                                  i32.store offset=544
                                                                  local.get 0
                                                                  local.get 10
                                                                  i64.store offset=160
                                                                  local.get 0
                                                                  local.get 0
                                                                  i64.load offset=293 align=1
                                                                  i64.store offset=165 align=1
                                                                  local.get 1
                                                                  i64.load offset=27 align=1
                                                                  local.tee 11
                                                                  i64.const 56
                                                                  i64.shl
                                                                  local.get 1
                                                                  i64.load offset=19 align=1
                                                                  local.tee 10
                                                                  i64.const 8
                                                                  i64.shr_u
                                                                  i64.or
                                                                  local.set 12
                                                                  local.get 11
                                                                  i64.const 8
                                                                  i64.shr_u
                                                                  local.set 14
                                                                  local.get 1
                                                                  i32.load8_u offset=35
                                                                  local.set 4
                                                                  local.get 10
                                                                  i32.wrap_i64
                                                                  local.set 5
                                                                  br 30 (;@1;)
                                                                end

                                                                ;; Selector check: free_balance(who)
                                                                local.get 7
                                                                i32.const 255
                                                                i32.and
                                                                local.tee 5
                                                                i32.const 50           ;; byte1 == 0x32
                                                                i32.eq
                                                                br_if 24               ;; @6 - Jump to handler

                                                                ;; Selector: can_deposit
                                                                local.get 5
                                                                i32.const 129
                                                                i32.ne
                                                                local.get 4
                                                                i32.const 179
                                                                i32.ne
                                                                i32.or
                                                                local.get 6
                                                                i32.const 255
                                                                i32.and
                                                                i32.const 248
                                                                i32.ne
                                                                local.get 3
                                                                i32.const 32
                                                                i32.lt_u
                                                                i32.or
                                                                i32.or
                                                                br_if 28               ;; @2 - No match

                                                                ;; Decode can_deposit parameters
                                                                local.get 0
                                                                local.get 1
                                                                i32.load offset=29 align=1
                                                                i32.store offset=288
                                                                local.get 1
                                                                i32.load8_u offset=4
                                                                local.set 5
                                                                local.get 0
                                                                local.get 1
                                                                i32.const 32
                                                                i32.add
                                                                i32.load align=1
                                                                i32.store offset=291 align=1

                                                                ;; Validate remaining length for u128 amount + enum
                                                                local.get 2
                                                                i32.const 36
                                                                i32.sub
                                                                i32.const 16
                                                                i32.lt_u
                                                                br_if 28               ;; @2
                                                                
                                                                ;; Decode u128 amount (16 bytes) using unaligned loads
                                                                local.get 1
                                                                i32.const 17
                                                                i32.add
                                                                i64.load16_u align=1
                                                                local.set 13           ;; amount bytes 2-3
                                                                local.get 1
                                                                i32.const 19
                                                                i32.add
                                                                i64.load8_u
                                                                local.set 14           ;; amount byte 4
                                                                local.get 1
                                                                i32.const 13
                                                                i32.add
                                                                i64.load32_u align=1
                                                                local.set 16           ;; amount bytes 0-3
                                                                local.get 1
                                                                i64.load offset=5 align=1
                                                                local.set 12           ;; AccountId continuation
                                                                local.get 1
                                                                i64.load offset=21 align=1
                                                                local.set 15           ;; amount bytes 5-12
                                                                local.get 1
                                                                i32.load8_u offset=20
                                                                local.set 4            ;; More AccountId bytes

                                                                ;; Update reader position
                                                                local.get 0
                                                                local.get 2
                                                                i32.const 52
                                                                i32.sub
                                                                i32.store offset=548
                                                                local.get 0
                                                                local.get 1
                                                                i32.const 52
                                                                i32.add
                                                                i32.store offset=544

                                                                ;; Decode remaining parameters (enums)
                                                                local.get 1
                                                                i64.load offset=44 align=1
                                                                local.set 10           ;; More amount bytes
                                                                local.get 1
                                                                i64.load offset=36 align=1
                                                                local.set 11
                                                                local.get 0
                                                                i32.const 544
                                                                i32.add
                                                                local.tee 2
                                                                call 67                ;; decode_preservation
                                                                i32.const 255
                                                                i32.and
                                                                local.tee 1
                                                                i32.const 2
                                                                i32.eq
                                                                br_if 28               ;; @2 - Invalid preservation

                                                                ;; Decode second enum
                                                                local.get 2
                                                                call 68                ;; decode_ternary_enum
                                                                i32.const 255
                                                                i32.and
                                                                local.tee 3
                                                                i32.const 3
                                                                i32.eq
                                                                br_if 28               ;; @2

                                                                ;; Decode third enum
                                                                local.get 2
                                                                call 67
                                                                i32.const 255
                                                                i32.and
                                                                local.tee 7
                                                                i32.const 2
                                                                i32.eq
                                                                br_if 28               ;; @2

                                                                ;; Reconstruct u128 amount from scattered parts
                                                                local.get 16
                                                                local.get 14
                                                                i64.const 48
                                                                i64.shl
                                                                local.get 13
                                                                i64.const 32
                                                                i64.shl
                                                                i64.or
                                                                i64.or
                                                                local.set 14           ;; Reconstructed amount_high

                                                                ;; Store decoded AccountId
                                                                local.get 0
                                                                local.get 0
                                                                i32.load offset=291 align=1
                                                                i32.store offset=483 align=1
                                                                local.get 0
                                                                local.get 0
                                                                i32.load offset=288
                                                                i32.store offset=480

                                                                ;; Pack enum values
                                                                local.get 1
                                                                i64.extend_i32_u
                                                                local.get 3
                                                                i64.extend_i32_u
                                                                i64.const 8
                                                                i64.shl
                                                                i64.or
                                                                local.get 7
                                                                i64.extend_i32_u
                                                                i64.const 16
                                                                i64.shl
                                                                i64.or
                                                                local.set 13           ;; Packed enums in i64

                                                                ;; Reconstruct more amount bits
                                                                local.get 15
                                                                i64.const -65536
                                                                i64.and
                                                                local.set 16
                                                                local.get 15
                                                                i64.const 8
                                                                i64.shr_u
                                                                i32.wrap_i64
                                                                local.set 3

                                                                local.get 15
                                                                i32.wrap_i64
                                                                local.set 2
                                                                i64.const 0
                                                                local.set 15
                                                                i32.const 17          ;; Handler index = 17
                                                                local.set 8
                                                                br 29                 ;; @1
                                                              end

                                                              ;; ... Many more selector match blocks continue ...
                                                              ;; Each follows similar pattern:
                                                              ;; 1. Check 4-byte selector match
                                                              ;; 2. Validate remaining input length
                                                              ;; 3. Decode SCALE-encoded parameters
                                                              ;; 4. Reconstruct multi-byte values from unaligned loads
                                                              ;; 5. Set handler index and jump to @1
                                                              local.get 4
                                                              i32.const 56
                                                              i32.ne
                                                              local.get 7
                                                              i32.const 255
                                                              i32.and
                                                              i32.const 213
                                                              i32.ne
                                                              i32.or
                                                              local.get 6
                                                              i32.const 255
                                                              i32.and
                                                              i32.const 17
                                                              i32.ne
                                                              local.get 3
                                                              i32.const 16
                                                              i32.lt_u
                                                              i32.or
                                                              i32.or
                                                              br_if 27 (;@2;)
                                                              local.get 0
                                                              local.get 2
                                                              i32.const 20
                                                              i32.sub
                                                              i32.store offset=548
                                                              local.get 0
                                                              local.get 1
                                                              i32.const 20
                                                              i32.add
                                                              i32.store offset=544
                                                              local.get 1
                                                              i64.load offset=12 align=1
                                                              local.tee 11
                                                              i64.const 56
                                                              i64.shl
                                                              local.get 1
                                                              i64.load offset=4 align=1
                                                              local.tee 10
                                                              i64.const 8
                                                              i64.shr_u
                                                              i64.or
                                                              local.set 12
                                                              local.get 11
                                                              i64.const 8
                                                              i64.shr_u
                                                              local.set 14
                                                              local.get 10
                                                              i32.wrap_i64
                                                              local.set 5
                                                              i32.const 10
                                                              local.set 8
                                                              br 28 (;@1;)
                                                            end
                                                            local.get 7
                                                            i32.const 255
                                                            i32.and
                                                            local.tee 5
                                                            i32.const 92
                                                            i32.eq
                                                            br_if 23 (;@5;)
                                                            local.get 5
                                                            i32.const 226
                                                            i32.ne
                                                            local.get 4
                                                            i32.const 33
                                                            i32.ne
                                                            i32.or
                                                            local.get 6
                                                            i32.const 255
                                                            i32.and
                                                            i32.const 178
                                                            i32.ne
                                                            local.get 3
                                                            i32.const 32
                                                            i32.lt_u
                                                            i32.or
                                                            i32.or
                                                            br_if 26 (;@2;)
                                                            local.get 1
                                                            i32.load8_u offset=5
                                                            local.set 6
                                                            local.get 1
                                                            i32.load8_u offset=4
                                                            local.set 7
                                                            local.get 1
                                                            i64.load offset=6 align=1
                                                            local.set 10
                                                            local.get 0
                                                            i32.const 300
                                                            i32.add
                                                            local.get 1
                                                            i32.const 18
                                                            i32.add
                                                            i32.load8_u
                                                            i32.store8
                                                            local.get 0
                                                            i32.const 296
                                                            i32.add
                                                            local.get 1
                                                            i32.const 14
                                                            i32.add
                                                            i32.load align=1
                                                            i32.store
                                                            local.get 0
                                                            local.get 10
                                                            i64.store offset=288
                                                            local.get 2
                                                            i32.const 36
                                                            i32.sub
                                                            i32.const 7
                                                            i32.le_u
                                                            br_if 26 (;@2;)
                                                            local.get 1
                                                            i64.load offset=27 align=1
                                                            local.set 10
                                                            local.get 1
                                                            i64.load offset=19 align=1
                                                            local.set 11
                                                            local.get 1
                                                            i32.load8_u offset=35
                                                            local.set 4
                                                            local.get 0
                                                            local.get 0
                                                            i64.load offset=288
                                                            i64.store offset=160
                                                            local.get 0
                                                            local.get 0
                                                            i64.load offset=293 align=1
                                                            i64.store offset=165 align=1
                                                            local.get 0
                                                            local.get 2
                                                            i32.const 44
                                                            i32.sub
                                                            i32.store offset=548
                                                            local.get 0
                                                            local.get 1
                                                            i32.const 44
                                                            i32.add
                                                            i32.store offset=544
                                                            local.get 10
                                                            i64.const 56
                                                            i64.shl
                                                            local.get 11
                                                            i64.const 8
                                                            i64.shr_u
                                                            i64.or
                                                            local.set 12
                                                            local.get 10
                                                            i64.const 8
                                                            i64.shr_u
                                                            local.set 14
                                                            local.get 1
                                                            i64.load offset=36 align=1
                                                            local.tee 10
                                                            i64.const -65536
                                                            i64.and
                                                            local.set 16
                                                            local.get 10
                                                            i64.const 8
                                                            i64.shr_u
                                                            i32.wrap_i64
                                                            local.set 3
                                                            local.get 11
                                                            i32.wrap_i64
                                                            local.set 5
                                                            local.get 10
                                                            i32.wrap_i64
                                                            local.set 2
                                                            i32.const 33
                                                            local.set 8
                                                            br 27 (;@1;)
                                                          end
                                                          local.get 4
                                                          i32.const 176
                                                          i32.ne
                                                          local.get 7
                                                          i32.const 255
                                                          i32.and
                                                          i32.const 177
                                                          i32.ne
                                                          i32.or
                                                          local.get 6
                                                          i32.const 255
                                                          i32.and
                                                          i32.const 230
                                                          i32.ne
                                                          local.get 3
                                                          i32.const 32
                                                          i32.lt_u
                                                          i32.or
                                                          i32.or
                                                          br_if 25 (;@2;)
                                                          local.get 0
                                                          local.get 1
                                                          i32.load offset=29 align=1
                                                          i32.store offset=288
                                                          local.get 1
                                                          i32.load8_u offset=4
                                                          local.set 5
                                                          local.get 0
                                                          local.get 1
                                                          i32.const 32
                                                          i32.add
                                                          i32.load align=1
                                                          i32.store offset=291 align=1
                                                          local.get 2
                                                          i32.const 36
                                                          i32.sub
                                                          i32.const 16
                                                          i32.lt_u
                                                          br_if 25 (;@2;)
                                                          local.get 1
                                                          i32.const 17
                                                          i32.add
                                                          i64.load16_u align=1
                                                          local.set 13
                                                          local.get 1
                                                          i32.const 19
                                                          i32.add
                                                          i64.load8_u
                                                          local.set 14
                                                          local.get 1
                                                          i32.const 13
                                                          i32.add
                                                          i64.load32_u align=1
                                                          local.set 16
                                                          local.get 1
                                                          i64.load offset=5 align=1
                                                          local.set 12
                                                          local.get 1
                                                          i64.load offset=21 align=1
                                                          local.set 15
                                                          local.get 1
                                                          i32.load8_u offset=20
                                                          local.set 4
                                                          local.get 0
                                                          local.get 2
                                                          i32.const 52
                                                          i32.sub
                                                          i32.store offset=548
                                                          local.get 0
                                                          local.get 1
                                                          i32.const 52
                                                          i32.add
                                                          i32.store offset=544
                                                          local.get 1
                                                          i64.load offset=44 align=1
                                                          local.set 10
                                                          local.get 1
                                                          i64.load offset=36 align=1
                                                          local.set 11
                                                          local.get 0
                                                          i32.const 544
                                                          i32.add
                                                          call 68
                                                          i32.const 255
                                                          i32.and
                                                          local.tee 2
                                                          i32.const 3
                                                          i32.eq
                                                          br_if 25 (;@2;)
                                                          local.get 16
                                                          local.get 14
                                                          i64.const 48
                                                          i64.shl
                                                          local.get 13
                                                          i64.const 32
                                                          i64.shl
                                                          i64.or
                                                          i64.or
                                                          local.set 14
                                                          local.get 0
                                                          local.get 0
                                                          i32.load offset=291 align=1
                                                          i32.store offset=483 align=1
                                                          local.get 0
                                                          local.get 0
                                                          i32.load offset=288
                                                          i32.store offset=480
                                                          local.get 15
                                                          i64.const -65536
                                                          i64.and
                                                          local.set 16
                                                          local.get 15
                                                          i64.const 8
                                                          i64.shr_u
                                                          i32.wrap_i64
                                                          local.set 3
                                                          local.get 2
                                                          i64.extend_i32_u
                                                          local.set 13
                                                          local.get 15
                                                          i32.wrap_i64
                                                          local.set 2
                                                          i64.const 0
                                                          local.set 15
                                                          i32.const 12
                                                          local.set 8
                                                          br 26 (;@1;)
                                                        end
                                                        local.get 4
                                                        i32.const 149
                                                        i32.ne
                                                        local.get 7
                                                        i32.const 255
                                                        i32.and
                                                        i32.const 32
                                                        i32.ne
                                                        i32.or
                                                        local.get 6
                                                        i32.const 255
                                                        i32.and
                                                        i32.const 114
                                                        i32.ne
                                                        local.get 3
                                                        i32.const 32
                                                        i32.lt_u
                                                        i32.or
                                                        i32.or
                                                        br_if 24 (;@2;)
                                                        local.get 0
                                                        local.get 2
                                                        i32.const 36
                                                        i32.sub
                                                        i32.store offset=548
                                                        local.get 1
                                                        i32.load8_u offset=4
                                                        local.set 6
                                                        local.get 1
                                                        i64.load offset=5 align=1
                                                        local.set 10
                                                        local.get 0
                                                        i32.const 300
                                                        i32.add
                                                        local.get 1
                                                        i32.const 17
                                                        i32.add
                                                        i32.load8_u
                                                        i32.store8
                                                        local.get 0
                                                        i32.const 296
                                                        i32.add
                                                        local.get 1
                                                        i32.const 13
                                                        i32.add
                                                        i32.load align=1
                                                        i32.store
                                                        local.get 0
                                                        local.get 1
                                                        i32.const 36
                                                        i32.add
                                                        i32.store offset=544
                                                        local.get 0
                                                        local.get 10
                                                        i64.store offset=288
                                                        local.get 1
                                                        i64.load offset=26 align=1
                                                        local.set 10
                                                        local.get 1
                                                        i64.load offset=18 align=1
                                                        local.set 11
                                                        local.get 1
                                                        i32.load8_u offset=35
                                                        local.set 2
                                                        local.get 1
                                                        i32.load8_u offset=34
                                                        local.set 4
                                                        local.get 0
                                                        i32.const 544
                                                        i32.add
                                                        local.tee 1
                                                        call 68
                                                        i32.const 255
                                                        i32.and
                                                        local.tee 7
                                                        i32.const 3
                                                        i32.eq
                                                        br_if 24 (;@2;)
                                                        local.get 1
                                                        call 67
                                                        i32.const 255
                                                        i32.and
                                                        local.tee 3
                                                        i32.const 2
                                                        i32.eq
                                                        br_if 24 (;@2;)
                                                        local.get 0
                                                        local.get 0
                                                        i64.load offset=293 align=1
                                                        i64.store offset=165 align=1
                                                        local.get 0
                                                        local.get 0
                                                        i64.load offset=288
                                                        i64.store offset=160
                                                        local.get 10
                                                        i64.const 56
                                                        i64.shl
                                                        local.get 11
                                                        i64.const 8
                                                        i64.shr_u
                                                        i64.or
                                                        local.set 12
                                                        local.get 10
                                                        i64.const 8
                                                        i64.shr_u
                                                        local.set 14
                                                        local.get 11
                                                        i32.wrap_i64
                                                        local.set 5
                                                        i32.const 13
                                                        local.set 8
                                                        br 25 (;@1;)
                                                      end
                                                      local.get 4
                                                      i32.const 187
                                                      i32.ne
                                                      local.get 7
                                                      i32.const 255
                                                      i32.and
                                                      i32.const 19
                                                      i32.ne
                                                      i32.or
                                                      local.get 6
                                                      i32.const 255
                                                      i32.and
                                                      i32.const 78
                                                      i32.ne
                                                      local.get 3
                                                      i32.const 32
                                                      i32.lt_u
                                                      i32.or
                                                      i32.or
                                                      br_if 23 (;@2;)
                                                      local.get 0
                                                      local.get 1
                                                      i32.load offset=29 align=1
                                                      i32.store offset=288
                                                      local.get 1
                                                      i32.load8_u offset=4
                                                      local.set 5
                                                      local.get 0
                                                      local.get 1
                                                      i32.const 32
                                                      i32.add
                                                      i32.load align=1
                                                      i32.store offset=291 align=1
                                                      local.get 2
                                                      i32.const 36
                                                      i32.sub
                                                      i32.const 16
                                                      i32.lt_u
                                                      br_if 23 (;@2;)
                                                      local.get 1
                                                      i32.const 17
                                                      i32.add
                                                      i64.load16_u align=1
                                                      local.set 10
                                                      local.get 1
                                                      i32.const 19
                                                      i32.add
                                                      i64.load8_u
                                                      local.set 11
                                                      local.get 1
                                                      i32.const 13
                                                      i32.add
                                                      i64.load32_u align=1
                                                      local.set 13
                                                      local.get 1
                                                      i64.load offset=5 align=1
                                                      local.set 12
                                                      local.get 2
                                                      i32.const 52
                                                      i32.eq
                                                      local.tee 7
                                                      i32.eqz
                                                      if  ;; label = @26
                                                        local.get 0
                                                        local.get 2
                                                        i32.const 53
                                                        i32.sub
                                                        i32.store offset=548
                                                        local.get 0
                                                        local.get 1
                                                        i32.const 53
                                                        i32.add
                                                        i32.store offset=544
                                                        local.get 1
                                                        i32.load8_u offset=52
                                                        local.set 4
                                                      end
                                                      local.get 7
                                                      br_if 23 (;@2;)
                                                      i32.const 1
                                                      i32.const 2
                                                      local.get 4
                                                      i32.const 1
                                                      i32.eq
                                                      select
                                                      i32.const 0
                                                      local.get 4
                                                      select
                                                      local.tee 2
                                                      i32.const 2
                                                      i32.eq
                                                      br_if 23 (;@2;)
                                                      local.get 13
                                                      local.get 11
                                                      i64.const 48
                                                      i64.shl
                                                      local.get 10
                                                      i64.const 32
                                                      i64.shl
                                                      i64.or
                                                      i64.or
                                                      local.set 14
                                                      local.get 1
                                                      i64.load offset=21 align=1
                                                      local.set 15
                                                      local.get 1
                                                      i32.load8_u offset=20
                                                      local.set 4
                                                      local.get 1
                                                      i64.load offset=44 align=1
                                                      local.set 10
                                                      local.get 1
                                                      i64.load offset=36 align=1
                                                      local.set 11
                                                      local.get 0
                                                      local.get 0
                                                      i32.load offset=291 align=1
                                                      i32.store offset=483 align=1
                                                      local.get 0
                                                      local.get 0
                                                      i32.load offset=288
                                                      i32.store offset=480
                                                      local.get 15
                                                      i64.const -65536
                                                      i64.and
                                                      local.set 16
                                                      local.get 15
                                                      i64.const 8
                                                      i64.shr_u
                                                      i32.wrap_i64
                                                      local.set 3
                                                      local.get 2
                                                      i64.extend_i32_u
                                                      local.set 13
                                                      local.get 15
                                                      i32.wrap_i64
                                                      local.set 2
                                                      i64.const 0
                                                      local.set 15
                                                      i32.const 14
                                                      local.set 8
                                                      br 24 (;@1;)
                                                    end
                                                    local.get 4
                                                    i32.const 14
                                                    i32.ne
                                                    local.get 7
                                                    i32.const 255
                                                    i32.and
                                                    i32.const 161
                                                    i32.ne
                                                    i32.or
                                                    local.get 6
                                                    i32.const 255
                                                    i32.and
                                                    i32.const 144
                                                    i32.ne
                                                    local.get 3
                                                    i32.const 32
                                                    i32.lt_u
                                                    i32.or
                                                    i32.or
                                                    local.get 2
                                                    i32.const 36
                                                    i32.sub
                                                    i32.const 16
                                                    i32.lt_u
                                                    i32.or
                                                    br_if 22 (;@2;)
                                                    local.get 0
                                                    local.get 2
                                                    i32.const 52
                                                    i32.sub
                                                    i32.store offset=548
                                                    local.get 0
                                                    local.get 1
                                                    i32.const 52
                                                    i32.add
                                                    i32.store offset=544
                                                    local.get 0
                                                    local.get 1
                                                    i32.load offset=29 align=1
                                                    i32.store offset=480
                                                    local.get 0
                                                    local.get 1
                                                    i32.const 32
                                                    i32.add
                                                    i32.load align=1
                                                    i32.store offset=483 align=1
                                                    local.get 1
                                                    i64.load offset=12 align=1
                                                    local.tee 10
                                                    i64.const 56
                                                    i64.shl
                                                    local.get 1
                                                    i64.load offset=4 align=1
                                                    local.tee 15
                                                    i64.const 8
                                                    i64.shr_u
                                                    i64.or
                                                    local.set 12
                                                    local.get 10
                                                    i64.const 8
                                                    i64.shr_u
                                                    local.set 14
                                                    local.get 1
                                                    i64.load offset=21 align=1
                                                    local.tee 13
                                                    i64.const -65536
                                                    i64.and
                                                    local.set 16
                                                    local.get 13
                                                    i64.const 8
                                                    i64.shr_u
                                                    i32.wrap_i64
                                                    local.set 3
                                                    local.get 1
                                                    i64.load offset=44 align=1
                                                    local.set 10
                                                    local.get 1
                                                    i64.load offset=36 align=1
                                                    local.set 11
                                                    local.get 1
                                                    i32.load8_u offset=20
                                                    local.set 4
                                                    local.get 13
                                                    i32.wrap_i64
                                                    local.set 2
                                                    local.get 15
                                                    i32.wrap_i64
                                                    local.set 5
                                                    i32.const 15
                                                    local.set 8
                                                    br 23 (;@1;)
                                                  end
                                                  local.get 4
                                                  i32.const 46
                                                  i32.ne
                                                  local.get 7
                                                  i32.const 255
                                                  i32.and
                                                  i32.const 95
                                                  i32.ne
                                                  i32.or
                                                  local.get 6
                                                  i32.const 255
                                                  i32.and
                                                  i32.const 195
                                                  i32.ne
                                                  local.get 3
                                                  i32.const 32
                                                  i32.lt_u
                                                  i32.or
                                                  i32.or
                                                  br_if 21 (;@2;)
                                                  i32.const 16
                                                  local.set 8
                                                  local.get 2
                                                  i32.const 36
                                                  i32.sub
                                                  i32.const 16
                                                  i32.lt_u
                                                  br_if 21 (;@2;)
                                                  local.get 0
                                                  local.get 2
                                                  i32.const 52
                                                  i32.sub
                                                  i32.store offset=548
                                                  local.get 0
                                                  local.get 1
                                                  i32.const 52
                                                  i32.add
                                                  i32.store offset=544
                                                  local.get 0
                                                  local.get 1
                                                  i32.load offset=29 align=1
                                                  i32.store offset=480
                                                  local.get 0
                                                  local.get 1
                                                  i32.const 32
                                                  i32.add
                                                  i32.load align=1
                                                  i32.store offset=483 align=1
                                                  local.get 1
                                                  i64.load offset=12 align=1
                                                  local.tee 10
                                                  i64.const 56
                                                  i64.shl
                                                  local.get 1
                                                  i64.load offset=4 align=1
                                                  local.tee 15
                                                  i64.const 8
                                                  i64.shr_u
                                                  i64.or
                                                  local.set 12
                                                  local.get 10
                                                  i64.const 8
                                                  i64.shr_u
                                                  local.set 14
                                                  local.get 1
                                                  i64.load offset=21 align=1
                                                  local.tee 13
                                                  i64.const -65536
                                                  i64.and
                                                  local.set 16
                                                  local.get 13
                                                  i64.const 8
                                                  i64.shr_u
                                                  i32.wrap_i64
                                                  local.set 3
                                                  local.get 1
                                                  i64.load offset=44 align=1
                                                  local.set 10
                                                  local.get 1
                                                  i64.load offset=36 align=1
                                                  local.set 11
                                                  local.get 1
                                                  i32.load8_u offset=20
                                                  local.set 4
                                                  local.get 13
                                                  i32.wrap_i64
                                                  local.set 2
                                                  local.get 15
                                                  i32.wrap_i64
                                                  local.set 5
                                                  br 22 (;@1;)
                                                end
                                                local.get 4
                                                i32.const 31
                                                i32.ne
                                                local.get 7
                                                i32.const 255
                                                i32.and
                                                i32.const 150
                                                i32.ne
                                                i32.or
                                                local.get 6
                                                i32.const 255
                                                i32.and
                                                i32.const 67
                                                i32.ne
                                                local.get 3
                                                i32.const 32
                                                i32.lt_u
                                                i32.or
                                                i32.or
                                                br_if 20 (;@2;)
                                                local.get 0
                                                local.get 1
                                                i32.load offset=29 align=1
                                                i32.store offset=288
                                                local.get 1
                                                i32.load8_u offset=4
                                                local.set 5
                                                local.get 0
                                                local.get 1
                                                i32.const 32
                                                i32.add
                                                i32.load align=1
                                                i32.store offset=291 align=1
                                                local.get 2
                                                i32.const 36
                                                i32.sub
                                                i32.const 16
                                                i32.lt_u
                                                br_if 20 (;@2;)
                                                local.get 1
                                                i32.const 17
                                                i32.add
                                                i64.load16_u align=1
                                                local.set 13
                                                local.get 1
                                                i32.const 19
                                                i32.add
                                                i64.load8_u
                                                local.set 14
                                                local.get 1
                                                i32.const 13
                                                i32.add
                                                i64.load32_u align=1
                                                local.set 16
                                                local.get 1
                                                i64.load offset=5 align=1
                                                local.set 12
                                                local.get 1
                                                i64.load offset=21 align=1
                                                local.set 15
                                                local.get 1
                                                i32.load8_u offset=20
                                                local.set 4
                                                local.get 0
                                                local.get 2
                                                i32.const 52
                                                i32.sub
                                                i32.store offset=548
                                                local.get 0
                                                local.get 1
                                                i32.const 52
                                                i32.add
                                                i32.store offset=544
                                                local.get 1
                                                i64.load offset=44 align=1
                                                local.set 10
                                                local.get 1
                                                i64.load offset=36 align=1
                                                local.set 11
                                                local.get 0
                                                i32.const 544
                                                i32.add
                                                call 67
                                                i32.const 255
                                                i32.and
                                                local.tee 2
                                                i32.const 2
                                                i32.eq
                                                br_if 20 (;@2;)
                                                local.get 16
                                                local.get 14
                                                i64.const 48
                                                i64.shl
                                                local.get 13
                                                i64.const 32
                                                i64.shl
                                                i64.or
                                                i64.or
                                                local.set 14
                                                local.get 0
                                                local.get 0
                                                i32.load offset=291 align=1
                                                i32.store offset=483 align=1
                                                local.get 0
                                                local.get 0
                                                i32.load offset=288
                                                i32.store offset=480
                                                local.get 15
                                                i64.const -65536
                                                i64.and
                                                local.set 16
                                                local.get 15
                                                i64.const 8
                                                i64.shr_u
                                                i32.wrap_i64
                                                local.set 3
                                                local.get 2
                                                i64.extend_i32_u
                                                local.set 13
                                                local.get 15
                                                i32.wrap_i64
                                                local.set 2
                                                i64.const 0
                                                local.set 15
                                                i32.const 18
                                                local.set 8
                                                br 21 (;@1;)
                                              end
                                              local.get 4
                                              i32.const 148
                                              i32.ne
                                              local.get 7
                                              i32.const 255
                                              i32.and
                                              i32.const 31
                                              i32.ne
                                              i32.or
                                              local.get 6
                                              i32.const 255
                                              i32.and
                                              i32.const 56
                                              i32.ne
                                              local.get 3
                                              i32.const 16
                                              i32.lt_u
                                              i32.or
                                              i32.or
                                              br_if 19 (;@2;)
                                              local.get 0
                                              local.get 2
                                              i32.const 20
                                              i32.sub
                                              i32.store offset=548
                                              local.get 0
                                              local.get 1
                                              i32.const 20
                                              i32.add
                                              i32.store offset=544
                                              local.get 1
                                              i64.load offset=12 align=1
                                              local.tee 11
                                              i64.const 56
                                              i64.shl
                                              local.get 1
                                              i64.load offset=4 align=1
                                              local.tee 10
                                              i64.const 8
                                              i64.shr_u
                                              i64.or
                                              local.set 12
                                              local.get 11
                                              i64.const 8
                                              i64.shr_u
                                              local.set 14
                                              local.get 10
                                              i32.wrap_i64
                                              local.set 5
                                              i32.const 19
                                              local.set 8
                                              br 20 (;@1;)
                                            end
                                            local.get 4
                                            i32.const 165
                                            i32.ne
                                            local.get 7
                                            i32.const 255
                                            i32.and
                                            i32.const 157
                                            i32.ne
                                            i32.or
                                            local.get 6
                                            i32.const 255
                                            i32.and
                                            i32.const 178
                                            i32.ne
                                            local.get 3
                                            i32.const 16
                                            i32.lt_u
                                            i32.or
                                            i32.or
                                            br_if 18 (;@2;)
                                            local.get 0
                                            local.get 2
                                            i32.const 20
                                            i32.sub
                                            i32.store offset=548
                                            i32.const 20
                                            local.set 8
                                            local.get 0
                                            local.get 1
                                            i32.const 20
                                            i32.add
                                            i32.store offset=544
                                            local.get 1
                                            i64.load offset=12 align=1
                                            local.tee 11
                                            i64.const 56
                                            i64.shl
                                            local.get 1
                                            i64.load offset=4 align=1
                                            local.tee 10
                                            i64.const 8
                                            i64.shr_u
                                            i64.or
                                            local.set 12
                                            local.get 11
                                            i64.const 8
                                            i64.shr_u
                                            local.set 14
                                            local.get 10
                                            i32.wrap_i64
                                            local.set 5
                                            br 19 (;@1;)
                                          end
                                          local.get 4
                                          i32.const 162
                                          i32.ne
                                          local.get 7
                                          i32.const 255
                                          i32.and
                                          i32.const 186
                                          i32.ne
                                          i32.or
                                          local.get 6
                                          i32.const 255
                                          i32.and
                                          i32.const 47
                                          i32.ne
                                          local.get 3
                                          i32.const 16
                                          i32.lt_u
                                          i32.or
                                          i32.or
                                          br_if 17 (;@2;)
                                          local.get 0
                                          local.get 2
                                          i32.const 20
                                          i32.sub
                                          i32.store offset=548
                                          local.get 0
                                          local.get 1
                                          i32.const 20
                                          i32.add
                                          i32.store offset=544
                                          local.get 1
                                          i64.load offset=12 align=1
                                          local.tee 11
                                          i64.const 56
                                          i64.shl
                                          local.get 1
                                          i64.load offset=4 align=1
                                          local.tee 10
                                          i64.const 8
                                          i64.shr_u
                                          i64.or
                                          local.set 12
                                          local.get 11
                                          i64.const 8
                                          i64.shr_u
                                          local.set 14
                                          local.get 10
                                          i32.wrap_i64
                                          local.set 5
                                          i32.const 21
                                          local.set 8
                                          br 18 (;@1;)
                                        end
                                        local.get 4
                                        i32.const 162
                                        i32.ne
                                        local.get 7
                                        i32.const 255
                                        i32.and
                                        i32.const 221
                                        i32.ne
                                        i32.or
                                        local.get 6
                                        i32.const 255
                                        i32.and
                                        i32.const 154
                                        i32.ne
                                        local.get 3
                                        i32.const 32
                                        i32.lt_u
                                        i32.or
                                        i32.or
                                        local.get 2
                                        i32.const 36
                                        i32.sub
                                        i32.const 16
                                        i32.lt_u
                                        i32.or
                                        br_if 16 (;@2;)
                                        local.get 0
                                        local.get 2
                                        i32.const 52
                                        i32.sub
                                        i32.store offset=548
                                        local.get 0
                                        local.get 1
                                        i32.const 52
                                        i32.add
                                        i32.store offset=544
                                        local.get 0
                                        local.get 1
                                        i32.load offset=29 align=1
                                        i32.store offset=480
                                        local.get 0
                                        local.get 1
                                        i32.const 32
                                        i32.add
                                        i32.load align=1
                                        i32.store offset=483 align=1
                                        local.get 1
                                        i64.load offset=12 align=1
                                        local.tee 10
                                        i64.const 56
                                        i64.shl
                                        local.get 1
                                        i64.load offset=4 align=1
                                        local.tee 15
                                        i64.const 8
                                        i64.shr_u
                                        i64.or
                                        local.set 12
                                        local.get 10
                                        i64.const 8
                                        i64.shr_u
                                        local.set 14
                                        local.get 1
                                        i64.load offset=21 align=1
                                        local.tee 13
                                        i64.const -65536
                                        i64.and
                                        local.set 16
                                        local.get 13
                                        i64.const 8
                                        i64.shr_u
                                        i32.wrap_i64
                                        local.set 3
                                        local.get 1
                                        i64.load offset=44 align=1
                                        local.set 10
                                        local.get 1
                                        i64.load offset=36 align=1
                                        local.set 11
                                        local.get 1
                                        i32.load8_u offset=20
                                        local.set 4
                                        local.get 13
                                        i32.wrap_i64
                                        local.set 2
                                        local.get 15
                                        i32.wrap_i64
                                        local.set 5
                                        i32.const 22
                                        local.set 8
                                        br 17 (;@1;)
                                      end
                                      local.get 4
                                      i32.const 187
                                      i32.ne
                                      local.get 7
                                      i32.const 255
                                      i32.and
                                      i32.const 33
                                      i32.ne
                                      i32.or
                                      local.get 6
                                      i32.const 255
                                      i32.and
                                      i32.const 43
                                      i32.ne
                                      local.get 3
                                      i32.const 32
                                      i32.lt_u
                                      i32.or
                                      i32.or
                                      br_if 15 (;@2;)
                                      local.get 0
                                      local.get 1
                                      i32.load offset=29 align=1
                                      i32.store offset=288
                                      local.get 1
                                      i32.load8_u offset=4
                                      local.set 5
                                      local.get 0
                                      local.get 1
                                      i32.const 32
                                      i32.add
                                      i32.load align=1
                                      i32.store offset=291 align=1
                                      local.get 2
                                      i32.const 36
                                      i32.sub
                                      i32.const 16
                                      i32.lt_u
                                      br_if 15 (;@2;)
                                      local.get 1
                                      i32.const 17
                                      i32.add
                                      i64.load16_u align=1
                                      local.set 13
                                      local.get 1
                                      i32.const 19
                                      i32.add
                                      i64.load8_u
                                      local.set 14
                                      local.get 1
                                      i32.const 13
                                      i32.add
                                      i64.load32_u align=1
                                      local.set 16
                                      local.get 1
                                      i64.load offset=5 align=1
                                      local.set 12
                                      local.get 1
                                      i64.load offset=21 align=1
                                      local.set 15
                                      local.get 1
                                      i32.load8_u offset=20
                                      local.set 4
                                      local.get 0
                                      local.get 2
                                      i32.const 52
                                      i32.sub
                                      i32.store offset=548
                                      local.get 0
                                      local.get 1
                                      i32.const 52
                                      i32.add
                                      i32.store offset=544
                                      local.get 1
                                      i64.load offset=44 align=1
                                      local.set 10
                                      local.get 1
                                      i64.load offset=36 align=1
                                      local.set 11
                                      local.get 0
                                      i32.const 544
                                      i32.add
                                      local.tee 2
                                      call 68
                                      i32.const 255
                                      i32.and
                                      local.tee 1
                                      i32.const 3
                                      i32.eq
                                      br_if 15 (;@2;)
                                      local.get 2
                                      call 67
                                      i32.const 255
                                      i32.and
                                      local.tee 3
                                      i32.const 2
                                      i32.eq
                                      br_if 15 (;@2;)
                                      local.get 2
                                      call 67
                                      i32.const 255
                                      i32.and
                                      local.tee 7
                                      i32.const 2
                                      i32.eq
                                      br_if 15 (;@2;)
                                      local.get 16
                                      local.get 14
                                      i64.const 48
                                      i64.shl
                                      local.get 13
                                      i64.const 32
                                      i64.shl
                                      i64.or
                                      i64.or
                                      local.set 14
                                      local.get 0
                                      local.get 0
                                      i32.load offset=291 align=1
                                      i32.store offset=483 align=1
                                      local.get 0
                                      local.get 0
                                      i32.load offset=288
                                      i32.store offset=480
                                      local.get 3
                                      i64.extend_i32_u
                                      local.get 1
                                      i64.extend_i32_u
                                      i64.const 8
                                      i64.shl
                                      i64.or
                                      local.get 7
                                      i64.extend_i32_u
                                      i64.const 16
                                      i64.shl
                                      i64.or
                                      local.set 13
                                      local.get 15
                                      i64.const -65536
                                      i64.and
                                      local.set 16
                                      local.get 15
                                      i64.const 8
                                      i64.shr_u
                                      i32.wrap_i64
                                      local.set 3
                                      local.get 15
                                      i32.wrap_i64
                                      local.set 2
                                      i64.const 0
                                      local.set 15
                                      i32.const 23
                                      local.set 8
                                      br 16 (;@1;)
                                    end
                                    local.get 4
                                    i32.const 17
                                    i32.ne
                                    local.get 7
                                    i32.const 255
                                    i32.and
                                    i32.const 146
                                    i32.ne
                                    i32.or
                                    local.get 6
                                    i32.const 255
                                    i32.and
                                    i32.const 220
                                    i32.ne
                                    local.get 3
                                    i32.const 32
                                    i32.lt_u
                                    i32.or
                                    i32.or
                                    local.get 2
                                    i32.const 36
                                    i32.sub
                                    i32.const 16
                                    i32.lt_u
                                    i32.or
                                    br_if 14 (;@2;)
                                    local.get 0
                                    local.get 2
                                    i32.const 52
                                    i32.sub
                                    i32.store offset=548
                                    local.get 0
                                    local.get 1
                                    i32.const 52
                                    i32.add
                                    i32.store offset=544
                                    local.get 0
                                    local.get 1
                                    i32.load offset=29 align=1
                                    i32.store offset=480
                                    local.get 0
                                    local.get 1
                                    i32.const 32
                                    i32.add
                                    i32.load align=1
                                    i32.store offset=483 align=1
                                    local.get 1
                                    i64.load offset=12 align=1
                                    local.tee 10
                                    i64.const 56
                                    i64.shl
                                    local.get 1
                                    i64.load offset=4 align=1
                                    local.tee 15
                                    i64.const 8
                                    i64.shr_u
                                    i64.or
                                    local.set 12
                                    local.get 10
                                    i64.const 8
                                    i64.shr_u
                                    local.set 14
                                    local.get 1
                                    i64.load offset=21 align=1
                                    local.tee 13
                                    i64.const -65536
                                    i64.and
                                    local.set 16
                                    local.get 13
                                    i64.const 8
                                    i64.shr_u
                                    i32.wrap_i64
                                    local.set 3
                                    local.get 1
                                    i64.load offset=44 align=1
                                    local.set 10
                                    local.get 1
                                    i64.load offset=36 align=1
                                    local.set 11
                                    local.get 1
                                    i32.load8_u offset=20
                                    local.set 4
                                    local.get 13
                                    i32.wrap_i64
                                    local.set 2
                                    local.get 15
                                    i32.wrap_i64
                                    local.set 5
                                    i32.const 24
                                    local.set 8
                                    br 15 (;@1;)
                                  end
                                  local.get 4
                                  i32.const 183
                                  i32.ne
                                  local.get 7
                                  i32.const 255
                                  i32.and
                                  i32.const 81
                                  i32.ne
                                  i32.or
                                  local.get 6
                                  i32.const 255
                                  i32.and
                                  i32.const 188
                                  i32.ne
                                  local.get 3
                                  i32.const 32
                                  i32.lt_u
                                  i32.or
                                  i32.or
                                  local.get 2
                                  i32.const 36
                                  i32.sub
                                  i32.const 16
                                  i32.lt_u
                                  i32.or
                                  br_if 13 (;@2;)
                                  local.get 0
                                  local.get 2
                                  i32.const 52
                                  i32.sub
                                  i32.store offset=548
                                  local.get 0
                                  local.get 1
                                  i32.const 52
                                  i32.add
                                  i32.store offset=544
                                  local.get 0
                                  local.get 1
                                  i32.load offset=29 align=1
                                  i32.store offset=480
                                  local.get 0
                                  local.get 1
                                  i32.const 32
                                  i32.add
                                  i32.load align=1
                                  i32.store offset=483 align=1
                                  local.get 1
                                  i64.load offset=12 align=1
                                  local.tee 10
                                  i64.const 56
                                  i64.shl
                                  local.get 1
                                  i64.load offset=4 align=1
                                  local.tee 15
                                  i64.const 8
                                  i64.shr_u
                                  i64.or
                                  local.set 12
                                  local.get 10
                                  i64.const 8
                                  i64.shr_u
                                  local.set 14
                                  local.get 1
                                  i64.load offset=21 align=1
                                  local.tee 13
                                  i64.const -65536
                                  i64.and
                                  local.set 16
                                  local.get 13
                                  i64.const 8
                                  i64.shr_u
                                  i32.wrap_i64
                                  local.set 3
                                  local.get 1
                                  i64.load offset=44 align=1
                                  local.set 10
                                  local.get 1
                                  i64.load offset=36 align=1
                                  local.set 11
                                  local.get 1
                                  i32.load8_u offset=20
                                  local.set 4
                                  local.get 13
                                  i32.wrap_i64
                                  local.set 2
                                  local.get 15
                                  i32.wrap_i64
                                  local.set 5
                                  i32.const 25
                                  local.set 8
                                  br 14 (;@1;)
                                end
                                local.get 4
                                i32.const 55
                                i32.ne
                                local.get 7
                                i32.const 255
                                i32.and
                                i32.const 165
                                i32.ne
                                i32.or
                                local.get 6
                                i32.const 255
                                i32.and
                                i32.const 93
                                i32.ne
                                local.get 3
                                i32.const 32
                                i32.lt_u
                                i32.or
                                i32.or
                                local.get 2
                                i32.const 36
                                i32.sub
                                i32.const 16
                                i32.lt_u
                                i32.or
                                br_if 12 (;@2;)
                                local.get 0
                                local.get 2
                                i32.const 52
                                i32.sub
                                i32.store offset=548
                                local.get 0
                                local.get 1
                                i32.const 52
                                i32.add
                                i32.store offset=544
                                local.get 0
                                local.get 1
                                i32.load offset=29 align=1
                                i32.store offset=480
                                local.get 0
                                local.get 1
                                i32.const 32
                                i32.add
                                i32.load align=1
                                i32.store offset=483 align=1
                                local.get 1
                                i64.load offset=12 align=1
                                local.tee 10
                                i64.const 56
                                i64.shl
                                local.get 1
                                i64.load offset=4 align=1
                                local.tee 15
                                i64.const 8
                                i64.shr_u
                                i64.or
                                local.set 12
                                local.get 10
                                i64.const 8
                                i64.shr_u
                                local.set 14
                                local.get 1
                                i64.load offset=21 align=1
                                local.tee 13
                                i64.const -65536
                                i64.and
                                local.set 16
                                local.get 13
                                i64.const 8
                                i64.shr_u
                                i32.wrap_i64
                                local.set 3
                                local.get 1
                                i64.load offset=44 align=1
                                local.set 10
                                local.get 1
                                i64.load offset=36 align=1
                                local.set 11
                                local.get 1
                                i32.load8_u offset=20
                                local.set 4
                                local.get 13
                                i32.wrap_i64
                                local.set 2
                                local.get 15
                                i32.wrap_i64
                                local.set 5
                                i32.const 26
                                local.set 8
                                br 13 (;@1;)
                              end
                              local.get 4
                              i32.const 161
                              i32.ne
                              local.get 7
                              i32.const 255
                              i32.and
                              i32.const 161
                              i32.ne
                              i32.or
                              local.get 6
                              i32.const 255
                              i32.and
                              i32.const 93
                              i32.ne
                              local.get 3
                              i32.const 32
                              i32.lt_u
                              i32.or
                              i32.or
                              local.get 2
                              i32.const 36
                              i32.sub
                              i32.const 16
                              i32.lt_u
                              i32.or
                              br_if 11 (;@2;)
                              local.get 0
                              local.get 2
                              i32.const 52
                              i32.sub
                              i32.store offset=548
                              local.get 0
                              local.get 1
                              i32.const 52
                              i32.add
                              i32.store offset=544
                              local.get 0
                              local.get 1
                              i32.load offset=29 align=1
                              i32.store offset=480
                              local.get 0
                              local.get 1
                              i32.const 32
                              i32.add
                              i32.load align=1
                              i32.store offset=483 align=1
                              local.get 1
                              i64.load offset=12 align=1
                              local.tee 10
                              i64.const 56
                              i64.shl
                              local.get 1
                              i64.load offset=4 align=1
                              local.tee 15
                              i64.const 8
                              i64.shr_u
                              i64.or
                              local.set 12
                              local.get 10
                              i64.const 8
                              i64.shr_u
                              local.set 14
                              local.get 1
                              i64.load offset=21 align=1
                              local.tee 13
                              i64.const -65536
                              i64.and
                              local.set 16
                              local.get 13
                              i64.const 8
                              i64.shr_u
                              i32.wrap_i64
                              local.set 3
                              local.get 1
                              i64.load offset=44 align=1
                              local.set 10
                              local.get 1
                              i64.load offset=36 align=1
                              local.set 11
                              local.get 1
                              i32.load8_u offset=20
                              local.set 4
                              local.get 13
                              i32.wrap_i64
                              local.set 2
                              local.get 15
                              i32.wrap_i64
                              local.set 5
                              i32.const 27
                              local.set 8
                              br 12 (;@1;)
                            end
                            local.get 4
                            i32.const 241
                            i32.ne
                            local.get 7
                            i32.const 255
                            i32.and
                            i32.const 129
                            i32.ne
                            i32.or
                            local.get 6
                            i32.const 255
                            i32.and
                            i32.const 51
                            i32.ne
                            local.get 3
                            i32.const 32
                            i32.lt_u
                            i32.or
                            i32.or
                            local.get 2
                            i32.const 36
                            i32.sub
                            i32.const 16
                            i32.lt_u
                            i32.or
                            br_if 10 (;@2;)
                            local.get 0
                            local.get 2
                            i32.const 52
                            i32.sub
                            i32.store offset=548
                            local.get 0
                            local.get 1
                            i32.const 52
                            i32.add
                            i32.store offset=544
                            local.get 0
                            local.get 1
                            i32.load offset=29 align=1
                            i32.store offset=480
                            local.get 0
                            local.get 1
                            i32.const 32
                            i32.add
                            i32.load align=1
                            i32.store offset=483 align=1
                            local.get 1
                            i64.load offset=12 align=1
                            local.tee 10
                            i64.const 56
                            i64.shl
                            local.get 1
                            i64.load offset=4 align=1
                            local.tee 15
                            i64.const 8
                            i64.shr_u
                            i64.or
                            local.set 12
                            local.get 10
                            i64.const 8
                            i64.shr_u
                            local.set 14
                            local.get 1
                            i64.load offset=21 align=1
                            local.tee 13
                            i64.const -65536
                            i64.and
                            local.set 16
                            local.get 13
                            i64.const 8
                            i64.shr_u
                            i32.wrap_i64
                            local.set 3
                            local.get 1
                            i64.load offset=44 align=1
                            local.set 10
                            local.get 1
                            i64.load offset=36 align=1
                            local.set 11
                            local.get 1
                            i32.load8_u offset=20
                            local.set 4
                            local.get 13
                            i32.wrap_i64
                            local.set 2
                            local.get 15
                            i32.wrap_i64
                            local.set 5
                            i32.const 28
                            local.set 8
                            br 11 (;@1;)
                          end
                          local.get 4
                          i32.const 217
                          i32.ne
                          local.get 7
                          i32.const 255
                          i32.and
                          i32.const 157
                          i32.ne
                          i32.or
                          local.get 6
                          i32.const 255
                          i32.and
                          i32.const 105
                          i32.ne
                          local.get 3
                          i32.const 32
                          i32.lt_u
                          i32.or
                          i32.or
                          br_if 9 (;@2;)
                          local.get 0
                          local.get 1
                          i32.load offset=29 align=1
                          i32.store offset=288
                          local.get 1
                          i32.load8_u offset=4
                          local.set 5
                          local.get 0
                          local.get 1
                          i32.const 32
                          i32.add
                          i32.load align=1
                          i32.store offset=291 align=1
                          local.get 2
                          i32.const 36
                          i32.sub
                          i32.const 16
                          i32.lt_u
                          br_if 9 (;@2;)
                          local.get 1
                          i32.const 17
                          i32.add
                          i64.load16_u align=1
                          local.set 13
                          local.get 1
                          i32.const 19
                          i32.add
                          i64.load8_u
                          local.set 14
                          local.get 1
                          i32.const 13
                          i32.add
                          i64.load32_u align=1
                          local.set 16
                          local.get 1
                          i64.load offset=5 align=1
                          local.set 12
                          local.get 1
                          i64.load offset=21 align=1
                          local.set 15
                          local.get 1
                          i32.load8_u offset=20
                          local.set 4
                          local.get 0
                          local.get 2
                          i32.const 52
                          i32.sub
                          i32.store offset=548
                          local.get 0
                          local.get 1
                          i32.const 52
                          i32.add
                          i32.store offset=544
                          local.get 1
                          i64.load offset=44 align=1
                          local.set 10
                          local.get 1
                          i64.load offset=36 align=1
                          local.set 11
                          local.get 0
                          i32.const 544
                          i32.add
                          call 68
                          i32.const 255
                          i32.and
                          local.tee 2
                          i32.const 3
                          i32.eq
                          br_if 9 (;@2;)
                          local.get 16
                          local.get 14
                          i64.const 48
                          i64.shl
                          local.get 13
                          i64.const 32
                          i64.shl
                          i64.or
                          i64.or
                          local.set 14
                          local.get 0
                          local.get 0
                          i32.load offset=291 align=1
                          i32.store offset=483 align=1
                          local.get 0
                          local.get 0
                          i32.load offset=288
                          i32.store offset=480
                          local.get 15
                          i64.const -65536
                          i64.and
                          local.set 16
                          local.get 15
                          i64.const 8
                          i64.shr_u
                          i32.wrap_i64
                          local.set 3
                          local.get 2
                          i64.extend_i32_u
                          local.set 13
                          local.get 15
                          i32.wrap_i64
                          local.set 2
                          i64.const 0
                          local.set 15
                          i32.const 29
                          local.set 8
                          br 10 (;@1;)
                        end
                        local.get 4
                        i32.const 159
                        i32.ne
                        local.get 7
                        i32.const 255
                        i32.and
                        i32.const 234
                        i32.ne
                        i32.or
                        local.get 6
                        i32.const 255
                        i32.and
                        i32.const 134
                        i32.ne
                        local.get 3
                        i32.const 32
                        i32.lt_u
                        i32.or
                        i32.or
                        local.get 2
                        i32.const 36
                        i32.sub
                        i32.const 16
                        i32.lt_u
                        i32.or
                        br_if 8 (;@2;)
                        local.get 0
                        local.get 2
                        i32.const 52
                        i32.sub
                        i32.store offset=548
                        local.get 0
                        local.get 1
                        i32.const 52
                        i32.add
                        i32.store offset=544
                        local.get 0
                        local.get 1
                        i32.load offset=29 align=1
                        i32.store offset=480
                        local.get 0
                        local.get 1
                        i32.const 32
                        i32.add
                        i32.load align=1
                        i32.store offset=483 align=1
                        local.get 1
                        i64.load offset=12 align=1
                        local.tee 10
                        i64.const 56
                        i64.shl
                        local.get 1
                        i64.load offset=4 align=1
                        local.tee 15
                        i64.const 8
                        i64.shr_u
                        i64.or
                        local.set 12
                        local.get 10
                        i64.const 8
                        i64.shr_u
                        local.set 14
                        local.get 1
                        i64.load offset=21 align=1
                        local.tee 13
                        i64.const -65536
                        i64.and
                        local.set 16
                        local.get 13
                        i64.const 8
                        i64.shr_u
                        i32.wrap_i64
                        local.set 3
                        local.get 1
                        i64.load offset=44 align=1
                        local.set 10
                        local.get 1
                        i64.load offset=36 align=1
                        local.set 11
                        local.get 1
                        i32.load8_u offset=20
                        local.set 4
                        local.get 13
                        i32.wrap_i64
                        local.set 2
                        local.get 15
                        i32.wrap_i64
                        local.set 5
                        i32.const 30
                        local.set 8
                        br 9 (;@1;)
                      end
                      local.get 4
                      i32.const 20
                      i32.ne
                      local.get 7
                      i32.const 255
                      i32.and
                      i32.const 128
                      i32.ne
                      i32.or
                      local.get 6
                      i32.const 255
                      i32.and
                      i32.const 106
                      i32.ne
                      local.get 3
                      i32.const 32
                      i32.lt_u
                      i32.or
                      i32.or
                      local.get 2
                      i32.const 36
                      i32.sub
                      i32.const 16
                      i32.lt_u
                      i32.or
                      br_if 7 (;@2;)
                      local.get 0
                      local.get 2
                      i32.const 52
                      i32.sub
                      i32.store offset=548
                      local.get 0
                      local.get 1
                      i32.const 52
                      i32.add
                      i32.store offset=544
                      local.get 0
                      local.get 1
                      i32.load offset=29 align=1
                      i32.store offset=480
                      local.get 0
                      local.get 1
                      i32.const 32
                      i32.add
                      i32.load align=1
                      i32.store offset=483 align=1
                      local.get 1
                      i64.load offset=12 align=1
                      local.tee 10
                      i64.const 56
                      i64.shl
                      local.get 1
                      i64.load offset=4 align=1
                      local.tee 15
                      i64.const 8
                      i64.shr_u
                      i64.or
                      local.set 12
                      local.get 10
                      i64.const 8
                      i64.shr_u
                      local.set 14
                      local.get 1
                      i64.load offset=21 align=1
                      local.tee 13
                      i64.const -65536
                      i64.and
                      local.set 16
                      local.get 13
                      i64.const 8
                      i64.shr_u
                      i32.wrap_i64
                      local.set 3
                      local.get 1
                      i64.load offset=44 align=1
                      local.set 10
                      local.get 1
                      i64.load offset=36 align=1
                      local.set 11
                      local.get 1
                      i32.load8_u offset=20
                      local.set 4
                      local.get 13
                      i32.wrap_i64
                      local.set 2
                      local.get 15
                      i32.wrap_i64
                      local.set 5
                      i32.const 31
                      local.set 8
                      br 8 (;@1;)
                    end
                    local.get 4
                    i32.const 199
                    i32.ne
                    local.get 3
                    i32.const 32
                    i32.lt_u
                    i32.or
                    local.get 7
                    i32.const 255
                    i32.and
                    i32.const 161
                    i32.ne
                    local.get 6
                    i32.const 255
                    i32.and
                    i32.const 128
                    i32.ne
                    i32.or
                    i32.or
                    local.get 2
                    i32.const 36
                    i32.sub
                    i32.const 8
                    i32.lt_u
                    local.get 2
                    i32.const 44
                    i32.sub
                    i32.const 16
                    i32.lt_u
                    i32.or
                    i32.or
                    br_if 6 (;@2;)
                    local.get 1
                    i64.load offset=12 align=1
                    local.set 13
                    local.get 1
                    i64.load offset=4 align=1
                    local.set 17
                    local.get 1
                    i64.load offset=21 align=1
                    local.set 10
                    local.get 1
                    i32.load8_u offset=20
                    local.set 4
                    local.get 1
                    i64.load offset=36 align=1
                    local.set 11
                    local.get 0
                    local.get 2
                    i32.const 60
                    i32.sub
                    i32.store offset=548
                    local.get 0
                    local.get 1
                    i32.const 60
                    i32.add
                    i32.store offset=544
                    local.get 0
                    local.get 1
                    i32.const 29
                    i32.add
                    local.tee 2
                    i32.load align=1
                    i32.store offset=480
                    local.get 0
                    local.get 2
                    i32.const 3
                    i32.add
                    i32.load align=1
                    i32.store offset=483 align=1
                    local.get 13
                    i64.const 56
                    i64.shl
                    local.get 17
                    i64.const 8
                    i64.shr_u
                    i64.or
                    local.set 12
                    local.get 10
                    i64.const -65536
                    i64.and
                    local.set 16
                    local.get 13
                    i64.const 8
                    i64.shr_u
                    local.set 14
                    local.get 10
                    i64.const 8
                    i64.shr_u
                    i32.wrap_i64
                    local.set 3
                    local.get 1
                    i64.load offset=52 align=1
                    local.set 15
                    local.get 1
                    i64.load offset=44 align=1
                    local.set 13
                    local.get 10
                    i32.wrap_i64
                    local.set 2
                    local.get 17
                    i32.wrap_i64
                    local.set 5
                    i32.const 32
                    local.set 8
                    br 7 (;@1;)
                  end
                  local.get 4
                  i32.const 169
                  i32.ne
                  local.get 7
                  i32.const 255
                  i32.and
                  i32.const 252
                  i32.ne
                  i32.or
                  br_if 5 (;@2;)
                  local.get 6
                  i32.const 255
                  i32.and
                  i32.const 229
                  i32.eq
                  br_if 3 (;@4;)
                  br 5 (;@2;)
                end
                local.get 4
                i32.const 15
                i32.ne
                local.get 7
                i32.const 255
                i32.and
                i32.const 85
                i32.ne
                i32.or
                local.get 6
                i32.const 255
                i32.and
                i32.const 253
                i32.ne
                i32.or
                br_if 4 (;@2;)
                i32.const 35
                local.set 8
                br 5 (;@1;)
              end
              local.get 4
              i32.const 100
              i32.ne
              local.get 6
              i32.const 255
              i32.and
              i32.const 146
              i32.ne
              i32.or
              local.get 3
              i32.const 31
              i32.le_u
              i32.or
              br_if 3 (;@2;)
              local.get 0
              local.get 2
              i32.const 36
              i32.sub
              i32.store offset=548
              local.get 1
              i32.load8_u offset=5
              local.set 6
              local.get 1
              i32.load8_u offset=4
              local.set 7
              local.get 1
              i64.load offset=6 align=1
              local.set 10
              local.get 0
              i32.const 300
              i32.add
              local.get 1
              i32.const 18
              i32.add
              i32.load8_u
              i32.store8
              local.get 0
              i32.const 296
              i32.add
              local.get 1
              i32.const 14
              i32.add
              i32.load align=1
              i32.store
              local.get 0
              local.get 10
              i64.store offset=288
              local.get 0
              local.get 1
              i32.const 36
              i32.add
              i32.store offset=544
              local.get 0
              local.get 10
              i64.store offset=160
              local.get 0
              local.get 0
              i64.load offset=293 align=1
              i64.store offset=165 align=1
              local.get 1
              i64.load offset=27 align=1
              local.tee 11
              i64.const 56
              i64.shl
              local.get 1
              i64.load offset=19 align=1
              local.tee 10
              i64.const 8
              i64.shr_u
              i64.or
              local.set 12
              local.get 11
              i64.const 8
              i64.shr_u
              local.set 14
              local.get 1
              i32.load8_u offset=35
              local.set 4
              local.get 10
              i32.wrap_i64
              local.set 5
              i32.const 9
              local.set 8
              br 4 (;@1;)
            end
            local.get 4
            i32.const 247
            i32.ne
            local.get 3
            i32.const 32
            i32.lt_u
            i32.or
            local.get 6
            i32.const 255
            i32.and
            i32.const 168
            i32.ne
            local.get 2
            i32.const 36
            i32.sub
            i32.const 16
            i32.lt_u
            i32.or
            i32.or
            br_if 2 (;@2;)
            local.get 1
            i64.load offset=12 align=1
            local.set 10
            local.get 1
            i64.load offset=4 align=1
            local.set 15
            local.get 1
            i64.load offset=21 align=1
            local.set 13
            local.get 1
            i32.load8_u offset=20
            local.set 4
            local.get 0
            local.get 2
            i32.const 52
            i32.sub
            i32.store offset=548
            local.get 0
            local.get 1
            i32.const 52
            i32.add
            i32.store offset=544
            local.get 0
            local.get 1
            i32.load offset=29 align=1
            i32.store offset=480
            local.get 0
            local.get 1
            i32.const 32
            i32.add
            i32.load align=1
            i32.store offset=483 align=1
            local.get 10
            i64.const 56
            i64.shl
            local.get 15
            i64.const 8
            i64.shr_u
            i64.or
            local.set 12
            local.get 13
            i64.const -65536
            i64.and
            local.set 16
            local.get 10
            i64.const 8
            i64.shr_u
            local.set 14
            local.get 13
            i64.const 8
            i64.shr_u
            i32.wrap_i64
            local.set 3
            local.get 1
            i64.load offset=44 align=1
            local.set 10
            local.get 1
            i64.load offset=36 align=1
            local.set 11
            local.get 13
            i32.wrap_i64
            local.set 2
            local.get 15
            i32.wrap_i64
            local.set 5
            i32.const 11
            local.set 8
            br 3 (;@1;)
          end
          local.get 0
          i32.const 288
          i32.add
          local.get 0
          i32.const 544
          i32.add
          call 66
          local.get 0
          i32.load8_u offset=288
          local.tee 7
          i32.const 2
          i32.eq
          br_if 1 (;@2;)
          local.get 0
          local.get 0
          i64.load offset=290 align=1
          i64.store offset=160
          local.get 0
          local.get 0
          i32.const 295
          i32.add
          i64.load align=1
          i64.store offset=165 align=1
          local.get 0
          i64.load offset=311 align=1
          local.tee 11
          i64.const 56
          i64.shl
          local.get 0
          i64.load offset=303 align=1
          local.tee 10
          i64.const 8
          i64.shr_u
          i64.or
          local.set 12
          local.get 11
          i64.const 8
          i64.shr_u
          local.set 14
          local.get 0
          i32.load8_u offset=289
          local.set 6
          local.get 0
          i32.load8_u offset=319
          local.set 4
          local.get 0
          i32.load8_u offset=320
          local.set 2
          local.get 10
          i32.wrap_i64
          local.set 5
          i32.const 34
          local.set 8
          br 2 (;@1;)
        end
        local.get 0
        i32.const 4
        i32.store8 offset=288
        local.get 0
        i32.const 288
        i32.add
        call 69
        unreachable
      end ;; End of selector matching blocks

      ;; Error: no selector matched
      call 59              ;; return_err
      unreachable
    end
    
    ;; Matched a selector - now dispatch to handler based on index
    ;; Store decoded parameters in consistent locations
    local.get 0
    i32.const 124
    i32.add
    local.get 0
    i32.load offset=483 align=1
    i32.store align=1
    local.get 0
    local.get 0
    i64.load offset=165 align=1
    i64.store offset=88 align=1
    local.get 0
    local.get 0
    i64.load offset=160
    i64.store offset=83 align=1
    local.get 0
    local.get 0
    i32.load offset=480
    i32.store offset=121 align=1
    local.get 0
    local.get 13
    i64.store offset=144
    local.get 0
    local.get 10
    i64.store offset=136
    local.get 0
    local.get 11
    i64.store offset=128
    local.get 0
    local.get 4
    i32.store8 offset=112
    local.get 0
    local.get 6
    i32.store8 offset=82
    local.get 0
    local.get 7
    i32.store8 offset=81
    local.get 0
    local.get 8
    i32.store8 offset=80
    local.get 0
    local.get 15
    i64.store offset=152
    local.get 0
    local.get 14
    i64.const 8
    i64.shl
    local.get 12
    i64.const 56
    i64.shr_u
    i64.or
    i64.store offset=104
    local.get 0
    local.get 5
    i64.extend_i32_u
    i64.const 255
    i64.and
    local.get 12
    i64.const 8
    i64.shl
    i64.or
    i64.store offset=96
    local.get 0
    local.get 2
    i64.extend_i32_u
    i64.const 255
    i64.and
    local.get 3
    i64.extend_i32_u
    i64.const 255
    i64.and
    i64.const 8
    i64.shl
    local.get 16
    i64.or
    i64.or
    i64.store offset=113 align=1
    
    ;; Initialize result encoder
    local.get 0
    i32.const 0
    i32.store offset=600
    local.get 0
    i64.const 16384
    i64.store offset=292 align=4
    local.get 0
    i32.const 69258
    i32.store offset=288
    
    ;; Encode success prefix (0)
    i32.const 0
    local.get 0
    i32.const 288
    i32.add
    local.tee 2
    call 40              ;; encode_u32
    
    ;; Extract encoded prefix
    local.get 0
    local.get 0
    i64.load offset=288 align=4
    i64.store offset=592 align=4
    local.get 0
    i32.const -64
    i32.sub
    local.get 0
    i32.const 592
    i32.add
    local.get 0
    i32.load offset=296
    call 22              ;; get_encoder_slice

    local.get 0
    i32.load offset=68
    local.set 3          ;; prefix_len
    local.get 0
    i32.load offset=64
    local.set 4          ;; prefix_ptr
    local.get 0
    i32.load offset=592
    local.set 1          ;; encoder.ptr
    local.get 0
    local.get 0
    i32.load offset=596
    local.tee 5
    i32.store offset=288 ;; encoder.capacity
    
    ;; Read current storage value (for verification?)
    local.get 4          ;; prefix_ptr
    local.get 3          ;; prefix_len
    local.get 1          ;; value_ptr
    local.get 2          ;; value_len_ptr
    call 0               ;; seal_get_storage
    local.set 3
    
    ;; Validate storage read
    local.get 0
    i32.const 56
    i32.add
    local.get 0
    i32.load offset=288
    local.get 1
    local.get 5
    i32.const 66964
    call 17
    
    block                ;; Final result determination
      block
        ;; Check storage result code
        local.get 3
        i32.const 15
        i32.ge_u
        br_if 0
        local.get 3
        i32.const 68012
        i32.add
        i32.load8_u
        local.tee 1
        i32.const 16
        i32.ne
        if
          local.get 1
          i32.const 3
          i32.ne
          br_if 1
          
          ;; Key not found case
          local.get 0
          i32.const 0
          i32.store offset=304
          local.get 0
          i32.const 1
          i32.store offset=292
          local.get 0
          i32.const 67480  ;; Error message
          i32.store offset=288
          local.get 0
          i64.const 4
          i64.store offset=296 align=4
          local.get 2
          i32.const 67440
          call 27
          unreachable
        end
        
        ;; Now dispatch based on handler index (massive switch)
        block
          ;; Validate decoded data length
          local.get 0
          i32.load offset=60
          local.tee 1
          i32.const 16
          i32.lt_u
          br_if 0
          
          ;; Check length is valid power-of-2 or specific range
          local.get 1
          i32.const -16
          i32.and
          local.tee 2
          i32.const 16
          i32.eq
          local.get 2
          i32.const 32
          i32.eq
          i32.or
          local.get 1
          i32.const -4
          i32.and
          i32.const 48
          i32.eq
          local.get 1
          i32.const 52
          i32.sub
          i32.const 32
          i32.lt_u
          i32.or
          i32.or
          br_if 0
          
          ;; Load decoded message parameters
          local.get 0
          i32.load offset=56  ;; params_ptr
          local.tee 2
          i64.load offset=8 align=1
          local.set 12
          local.get 2
          i64.load align=1
          local.set 13
          local.get 2
          i64.load offset=24 align=1
          local.set 10
          local.get 2
          i64.load offset=16 align=1
          local.set 11
          local.get 2
          i64.load offset=40 align=1
          local.set 14
          local.get 2
          i64.load offset=32 align=1
          local.set 15
          local.get 2
          i32.load offset=48 align=1
          local.set 3
          
          ;; Load additional fields for complex messages
          local.get 0
          i32.const 552
          i32.add
          local.tee 4
          local.get 2
          i32.const 60
          i32.add
          i64.load align=1
          i64.store
          local.get 0
          i32.const 560
          i32.add
          local.tee 5
          local.get 2
          i32.const 68
          i32.add
          i64.load align=1
          i64.store
          local.get 0
          i32.const 568
          i32.add
          local.tee 6
          local.get 2
          i32.const 76
          i32.add
          i64.load align=1
          i64.store
          
          ;; Update reader for additional parameters
          local.get 0
          local.get 1
          i32.const 84
          i32.sub
          i32.store offset=628
          local.get 0
          local.get 2
          i32.const 84
          i32.add
          i32.store offset=624
          local.get 0
          local.get 2
          i64.load offset=52 align=1
          i64.store offset=544
          
          ;; Decode Option<AccountId> for some messages
          local.get 0
          i32.const 160
          i32.add
          local.get 0
          i32.const 624
          i32.add
          call 66          ;; decode_option_account_id
          
          local.get 0
          i32.load8_u offset=160
          local.tee 2
          i32.const 2
          i32.eq
          br_if 0          ;; Invalid Option discriminant
          
          ;; Copy decoded Option<AccountId> to output location
          local.get 0
          i32.const 312
          i32.add
          local.get 0
          i32.const 185
          i32.add
          i64.load align=1
          i64.store
          local.get 0
          i32.const 304
          i32.add
          local.get 0
          i32.const 177
          i32.add
          i64.load align=1
          i64.store
          local.get 0
          i32.const 296
          i32.add
          local.get 0
          i32.const 169
          i32.add
          i64.load align=1
          i64.store
          
          ;; Copy additional fields
          local.get 0
          i32.const 496
          i32.add
          local.get 5
          i64.load
          i64.store
          local.get 0
          i32.const 504
          i32.add
          local.get 6
          i64.load
          i64.store
          local.get 0
          local.get 0
          i64.load offset=161 align=1
          i64.store offset=288
          local.get 0
          local.get 0
          i64.load offset=544
          i64.store offset=480
          local.get 0
          local.get 4
          i64.load
          i64.store offset=488
          
          ;; Check if more input remains
          local.get 0
          i32.load offset=628
          i32.eqz
          br_if 2          ;; Continue if no more input
        end
        
        ;; Decode error - panic
        local.get 0
        i32.const 0
        i32.store offset=304
        local.get 0
        i32.const 1
        i32.store offset=292
        local.get 0
        i32.const 67528    ;; "could not properly decode storage entry"
        i32.store offset=288
        local.get 0
        i64.const 4
        i64.store offset=296 align=4
        local.get 0
        i32.const 288
        i32.add
        i32.const 67440
        call 27
        unreachable
      end
      
      ;; Storage read error
      local.get 0
      i32.const 0
      i32.store offset=304
      local.get 0
      i32.const 1
      i32.store offset=292
      local.get 0
      i32.const 67384    ;; "encountered unexpected error"
      i32.store offset=288
      local.get 0
      i64.const 4
      i64.store offset=296 align=4
      local.get 0
      i32.const 288
      i32.add
      i32.const 67392
      call 27
      unreachable
    end
    
    ;; NOW BEGINS THE GIANT HANDLER DISPATCH SWITCH
    ;; Based on handler index (local.get 8), execute the appropriate message
    
    ;; Copy necessary data to consistent locations for handler
    local.get 0
    i32.const 216
    i32.add
    local.get 0
    i64.load offset=488
    i64.store
    
    ;; Additional field copies...
    local.get 0
    i32.const 232
    i32.add
    local.get 0
    i32.const 504
    i32.add
    i64.load
    i64.store
    local.get 0
    i32.const 224
    i32.add
    local.get 0
    i32.const 496
    i32.add
    i64.load
    i64.store
    local.get 0
    local.get 0
    i64.load offset=480
    i64.store offset=208
    
    ;; Copy full message context
    local.get 0
    i32.const 245
    i32.add
    local.get 0
    i32.const 288
    i32.add
    i32.const 43         ;; Copy 43 bytes of message metadata
    memory.copy
    
    ;; Set up pointers for handler dispatch
    local.get 0
    i32.const 96
    i32.add
    local.set 1
    local.get 0
    i32.const 80
    i32.add
    i32.const 1
    i32.or
    local.set 6
    
    ;; Store packed parameters
    local.get 0
    local.get 14
    i64.store offset=200
    local.get 0
    local.get 15
    i64.store offset=192
    local.get 0
    local.get 10
    i64.store offset=184
    local.get 0
    local.get 11
    i64.store offset=176
    local.get 0
    local.get 12
    i64.store offset=168
    local.get 0
    local.get 13
    i64.store offset=160
    local.get 0
    local.get 2
    i32.store8 offset=244
    local.get 0
    local.get 3
    i32.store offset=240
    
    ;; Save context pointers
    local.get 0
    i32.const 244
    i32.add
    local.set 2
    local.get 0
    i32.const 208
    i32.add
    local.set 3
    
    ;; MASSIVE NESTED BLOCK STRUCTURE FOR HANDLER DISPATCH
    ;; Each handler gets its own path through deeply nested blocks
    
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          block  ;; label = @4
            block  ;; label = @5
              block  ;; label = @6
                block  ;; label = @7
                  block  ;; label = @8
                    block (result i32)  ;; label = @9
                      block  ;; label = @10
                        block (result i32)  ;; label = @11
                          block  ;; label = @12
                            block  ;; label = @13
                              block (result i32)  ;; label = @14
                                block  ;; label = @15
                                  block  ;; label = @16
                                    block (result i32)  ;; label = @17
                                      block  ;; label = @18
                                        block  ;; label = @19
                                          block  ;; label = @20
                                            block (result i64)  ;; label = @21
                                              block  ;; label = @22
                                                block (result i32)  ;; label = @23
                                                  block  ;; label = @24
                                                    block (result i32)  ;; label = @25
                                                      block  ;; label = @26
                                                        block (result i32)  ;; label = @27
                                                          block  ;; label = @28
                                                            block (result i32)  ;; label = @29
                                                              block  ;; label = @30
                                                                block  ;; label = @31
                                                                  block (result i32)  ;; label = @32
                                                                    block  ;; label = @33
                                                                      block  ;; label = @34
                                                                        block (result i32)  ;; label = @35
                                                                          block  ;; label = @36
                                                                            block  ;; label = @37
                                                                              block  ;; label = @38
                                                                                block  ;; label = @39
                                                                                  block  ;; label = @40
                                                                                    block  ;; label = @41
                                                                                      block  ;; label = @42
                                                                                        block  ;; label = @43
                                                                                          block  ;; label = @44
                                                                                            block  ;; label = @45
                                                                                              block  ;; label = @46
                                                                                                block  ;; label = @47
                                                                                                  block  ;; label = @48
                                                                                                    block  ;; label = @49
                                                                                                      block  ;; label = @50
                                                                                                        block  ;; label = @51
                                                                                                          block  ;; label = @52
                                                                                                            block  ;; label = @53
                                                                                                              block  ;; label = @54
                                                                                                                block  ;; label = @55
                                                                                                                  block  ;; label = @56
                                                                                                                    block  ;; label = @57
                                                                                                                      block  ;; label = @58
                                                                                                                        block  ;; label = @59
                                                                                                                          block  ;; label = @60
                                                                                                                            block  ;; label = @61
                                                                                                                              block  ;; label = @62
                                                                                                                                block  ;; label = @63
                                                                                                                                  block  ;; label = @64
                                                                                                                                    block  ;; label = @65
                                                                                                                                      block  ;; label = @66
                                                                                                                                        block  ;; label = @67
                                                                                                                                          block  ;; label = @68
                                                                                                                                            ;; Handler index switch (35 total handlers based on br_table size)
                                                                                                                                            local.get 8  ;; handler_index
                                                                                                                                            i32.const 1
                                                                                                                                            i32.sub
                                                                                                                                            br_table 
                                                                                                                                              1 (;@67;)   ;; Handler 1: total_issuance
                                                                                                                                              48 (;@20;)  ;; Handler 2
                                                                                                                                              48 (;@20;)  ;; Handler 3  
                                                                                                                                              2 (;@66;)   ;; Handler 4: mint
                                                                                                                                              60 (;@8;)   ;; Handler 5
                                                                                                                                              60 (;@8;)   ;; Handler 6
                                                                                                                                              3 (;@65;)   ;; Handler 7
                                                                                                                                              4 (;@64;)   ;; Handler 8: transfer
                                                                                                                                              5 (;@63;)   ;; Handler 9
                                                                                                                                              6 (;@62;)   ;; Handler 10
                                                                                                                                              7 (;@61;)   ;; Handler 11
                                                                                                                                              8 (;@60;)   ;; Handler 12
                                                                                                                                              9 (;@59;)   ;; Handler 13
                                                                                                                                              10 (;@58;)  ;; Handler 14
                                                                                                                                              11 (;@57;)  ;; Handler 15
                                                                                                                                              12 (;@56;)  ;; Handler 16
                                                                                                                                              13 (;@55;)  ;; Handler 17: can_deposit
                                                                                                                                              14 (;@54;)  ;; Handler 18
                                                                                                                                              15 (;@53;)  ;; Handler 19
                                                                                                                                              16 (;@52;)  ;; Handler 20
                                                                                                                                              17 (;@51;)  ;; Handler 21
                                                                                                                                              18 (;@50;)  ;; Handler 22
                                                                                                                                              19 (;@49;)  ;; Handler 23
                                                                                                                                              20 (;@48;)  ;; Handler 24
                                                                                                                                              21 (;@47;)  ;; Handler 25
                                                                                                                                              22 (;@46;)  ;; Handler 26
                                                                                                                                              23 (;@45;)  ;; Handler 27
                                                                                                                                              24 (;@44;)  ;; Handler 28
                                                                                                                                              25 (;@43;)  ;; Handler 29
                                                                                                                                              26 (;@42;)  ;; Handler 30
                                                                                                                                              27 (;@41;)  ;; Handler 31
                                                                                                                                              28 (;@40;)  ;; Handler 32
                                                                                                                                              29 (;@39;)  ;; Handler 33
                                                                                                                                              49 (;@19;)  ;; Handler 34
                                                                                                                                              30 (;@38;)  ;; Handler 35
                                                                                                                                              0 (;@68;)   ;; Default/error
                                                                                                                                          end
                                                                                                                                          
                                                                                                                                          ;; Handler 0 or invalid: return amount (u128)
                                                                                                                                          local.get 13         ;; amount_low
                                                                                                                                          local.get 12         ;; amount_high
                                                                                                                                          call 60              ;; return_u128_result
                                                                                                                                          unreachable
                                                                                                                                        end

                                                                                                                                        ;; Handler 1: total_issuance() -> Balance
                                                                                                                                        local.get 11
                                                                                                                                        local.get 10
                                                                                                                                        call 60
                                                                                                                                        unreachable
                                                                                                                                      end
                                                                                                                                      
                                                                                                                                      ;; Handler 4: mint(to, amount) -> Result<()>
                                                                                                                                      ;; This is a more complex handler example
                                                                                                                                      global.get 0
                                                                                                                                      i32.const 48
                                                                                                                                      i32.sub
                                                                                                                                      local.tee 2
                                                                                                                                      global.set 0
                                                                                                                                      
                                                                                                                                      ;; Copy to AccountId
                                                                                                                                      local.get 2
                                                                                                                                      i32.const 24
                                                                                                                                      i32.add
                                                                                                                                      local.get 6
                                                                                                                                      i32.const 8
                                                                                                                                      i32.add
                                                                                                                                      i64.load align=1
                                                                                                                                      i64.store align=4
                                                                                                                                      local.get 2
                                                                                                                                      i32.const 32
                                                                                                                                      i32.add
                                                                                                                                      local.get 6
                                                                                                                                      i32.const 16
                                                                                                                                      i32.add
                                                                                                                                      i64.load align=1
                                                                                                                                      i64.store align=4
                                                                                                                                      local.get 2
                                                                                                                                      i32.const 40
                                                                                                                                      i32.add
                                                                                                                                      local.get 6
                                                                                                                                      i32.const 24
                                                                                                                                      i32.add
                                                                                                                                      i64.load align=1
                                                                                                                                      i64.store align=4
                                                                                                                                      local.get 2
                                                                                                                                      local.get 0
                                                                                                                                      i32.const 160
                                                                                                                                      i32.add
                                                                                                                                      i32.store offset=12
                                                                                                                                      local.get 2
                                                                                                                                      local.get 6
                                                                                                                                      i64.load align=1
                                                                                                                                      i64.store offset=16 align=4
                                                                                                                                      
                                                                                                                                      ;; Read current account state
                                                                                                                                      local.get 0
                                                                                                                                      i32.const 304
                                                                                                                                      i32.add
                                                                                                                                      local.get 2
                                                                                                                                      i32.const 16
                                                                                                                                      i32.add
                                                                                                                                      call 52            ;; read_account_from_storage
                                                                                                                                      
                                                                                                                                      local.get 2
                                                                                                                                      i32.const 48
                                                                                                                                      i32.add
                                                                                                                                      global.set 0
                                                                                                                                      local.get 0
                                                                                                                                      i32.const 0
                                                                                                                                      i32.store offset=288
                                                                                                                                      global.get 0
                                                                                                                                      i32.const 16
                                                                                                                                      i32.sub
                                                                                                                                      local.tee 2
                                                                                                                                      global.set 0
                                                                                                                                      local.get 2
                                                                                                                                      i64.const 16384
                                                                                                                                      i64.store offset=8 align=4
                                                                                                                                      local.get 2
                                                                                                                                      i32.const 69258
                                                                                                                                      i32.store offset=4
                                                                                                                                      block  ;; label = @66
                                                                                                                                        local.get 0
                                                                                                                                        i32.const 288
                                                                                                                                        i32.add
                                                                                                                                        local.tee 1
                                                                                                                                        i32.load
                                                                                                                                        i32.const 1
                                                                                                                                        i32.eq
                                                                                                                                        if  ;; label = @67
                                                                                                                                          local.get 2
                                                                                                                                          i32.const 4
                                                                                                                                          i32.add
                                                                                                                                          local.tee 1
                                                                                                                                          i32.const 1
                                                                                                                                          call 64
                                                                                                                                          local.get 1
                                                                                                                                          i32.const 1
                                                                                                                                          call 64
                                                                                                                                          br 1 (;@66;)
                                                                                                                                        end
                                                                                                                                        local.get 2
                                                                                                                                        i32.const 4
                                                                                                                                        i32.add
                                                                                                                                        local.tee 0
                                                                                                                                        i32.const 0
                                                                                                                                        call 64
                                                                                                                                        local.get 1
                                                                                                                                        i32.const 16
                                                                                                                                        i32.add
                                                                                                                                        local.get 0
                                                                                                                                        call 29
                                                                                                                                      end
                                                                                                                                      local.get 2
                                                                                                                                      i32.load offset=12
                                                                                                                                      local.tee 2
                                                                                                                                      i32.const 16385
                                                                                                                                      i32.ge_u
                                                                                                                                      if  ;; label = @66
                                                                                                                                        br 63 (;@3;)
                                                                                                                                      end
                                                                                                                                      br 63 (;@2;)
                                                                                                                                    end
                                                                                                                                    
                                                                                                                                    ;; ... (Similar handler blocks for each message type)
                                                                                                                                    ;; Each handler:
                                                                                                                                    ;; 1. Sets up its stack frame
                                                                                                                                    ;; 2. Copies relevant parameters
                                                                                                                                    ;; 3. Calls business logic functions
                                                                                                                                    ;; 4. Branches to appropriate result encoding
                                                                                                                                    global.get 0
                                                                                                                                    i32.const 96
                                                                                                                                    i32.sub
                                                                                                                                    local.tee 2
                                                                                                                                    global.set 0
                                                                                                                                    local.get 2
                                                                                                                                    i32.const 24
                                                                                                                                    i32.add
                                                                                                                                    local.get 6
                                                                                                                                    i32.const 8
                                                                                                                                    i32.add
                                                                                                                                    i64.load align=1
                                                                                                                                    i64.store align=4
                                                                                                                                    local.get 2
                                                                                                                                    i32.const 32
                                                                                                                                    i32.add
                                                                                                                                    local.get 6
                                                                                                                                    i32.const 16
                                                                                                                                    i32.add
                                                                                                                                    i64.load align=1
                                                                                                                                    i64.store align=4
                                                                                                                                    local.get 2
                                                                                                                                    i32.const 40
                                                                                                                                    i32.add
                                                                                                                                    local.get 6
                                                                                                                                    i32.const 24
                                                                                                                                    i32.add
                                                                                                                                    i64.load align=1
                                                                                                                                    i64.store align=4
                                                                                                                                    local.get 2
                                                                                                                                    local.get 0
                                                                                                                                    i32.const 160
                                                                                                                                    i32.add
                                                                                                                                    i32.store offset=12
                                                                                                                                    local.get 2
                                                                                                                                    local.get 6
                                                                                                                                    i64.load align=1
                                                                                                                                    i64.store offset=16 align=4
                                                                                                                                    local.get 2
                                                                                                                                    i32.const 48
                                                                                                                                    i32.add
                                                                                                                                    local.get 2
                                                                                                                                    i32.const 16
                                                                                                                                    i32.add
                                                                                                                                    call 52
                                                                                                                                    local.get 0
                                                                                                                                    i32.const 304
                                                                                                                                    i32.add
                                                                                                                                    local.tee 1
                                                                                                                                    local.get 2
                                                                                                                                    i64.load offset=72
                                                                                                                                    i64.store offset=8
                                                                                                                                    local.get 1
                                                                                                                                    local.get 2
                                                                                                                                    i64.load offset=64
                                                                                                                                    i64.store
                                                                                                                                    local.get 2
                                                                                                                                    i32.const 96
                                                                                                                                    i32.add
                                                                                                                                    global.set 0
                                                                                                                                    br 57 (;@7;)
                                                                                                                                  end
                                                                                                                                  global.get 0
                                                                                                                                  i32.const 96
                                                                                                                                  i32.sub
                                                                                                                                  local.tee 2
                                                                                                                                  global.set 0
                                                                                                                                  local.get 2
                                                                                                                                  i32.const 24
                                                                                                                                  i32.add
                                                                                                                                  local.get 6
                                                                                                                                  i32.const 8
                                                                                                                                  i32.add
                                                                                                                                  i64.load align=1
                                                                                                                                  i64.store align=4
                                                                                                                                  local.get 2
                                                                                                                                  i32.const 32
                                                                                                                                  i32.add
                                                                                                                                  local.get 6
                                                                                                                                  i32.const 16
                                                                                                                                  i32.add
                                                                                                                                  i64.load align=1
                                                                                                                                  i64.store align=4
                                                                                                                                  local.get 2
                                                                                                                                  i32.const 40
                                                                                                                                  i32.add
                                                                                                                                  local.get 6
                                                                                                                                  i32.const 24
                                                                                                                                  i32.add
                                                                                                                                  i64.load align=1
                                                                                                                                  i64.store align=4
                                                                                                                                  local.get 2
                                                                                                                                  local.get 0
                                                                                                                                  i32.const 160
                                                                                                                                  i32.add
                                                                                                                                  i32.store offset=12
                                                                                                                                  local.get 2
                                                                                                                                  local.get 6
                                                                                                                                  i64.load align=1
                                                                                                                                  i64.store offset=16 align=4
                                                                                                                                  local.get 2
                                                                                                                                  i32.const 48
                                                                                                                                  i32.add
                                                                                                                                  local.get 2
                                                                                                                                  i32.const 16
                                                                                                                                  i32.add
                                                                                                                                  call 52
                                                                                                                                  local.get 0
                                                                                                                                  i32.const 304
                                                                                                                                  i32.add
                                                                                                                                  local.tee 1
                                                                                                                                  i64.const -1
                                                                                                                                  local.get 2
                                                                                                                                  i64.load offset=48
                                                                                                                                  local.tee 10
                                                                                                                                  local.get 2
                                                                                                                                  i64.load offset=64
                                                                                                                                  i64.add
                                                                                                                                  local.tee 11
                                                                                                                                  local.get 10
                                                                                                                                  i64.lt_u
                                                                                                                                  local.tee 3
                                                                                                                                  i64.extend_i32_u
                                                                                                                                  local.get 2
                                                                                                                                  i64.load offset=56
                                                                                                                                  local.tee 10
                                                                                                                                  local.get 2
                                                                                                                                  i64.load offset=72
                                                                                                                                  i64.add
                                                                                                                                  i64.add
                                                                                                                                  local.tee 12
                                                                                                                                  local.get 3
                                                                                                                                  local.get 10
                                                                                                                                  local.get 12
                                                                                                                                  i64.gt_u
                                                                                                                                  local.get 10
                                                                                                                                  local.get 12
                                                                                                                                  i64.eq
                                                                                                                                  select
                                                                                                                                  local.tee 3
                                                                                                                                  select
                                                                                                                                  i64.store offset=8
                                                                                                                                  local.get 1
                                                                                                                                  i64.const -1
                                                                                                                                  local.get 11
                                                                                                                                  local.get 3
                                                                                                                                  select
                                                                                                                                  i64.store
                                                                                                                                  local.get 2
                                                                                                                                  i32.const 96
                                                                                                                                  i32.add
                                                                                                                                  global.set 0
                                                                                                                                  br 56 (;@7;)
                                                                                                                                end
                                                                                                                                global.get 0
                                                                                                                                i32.const 96
                                                                                                                                i32.sub
                                                                                                                                local.tee 2
                                                                                                                                global.set 0
                                                                                                                                local.get 2
                                                                                                                                i32.const 24
                                                                                                                                i32.add
                                                                                                                                local.get 6
                                                                                                                                i32.const 8
                                                                                                                                i32.add
                                                                                                                                i64.load align=1
                                                                                                                                i64.store align=4
                                                                                                                                local.get 2
                                                                                                                                i32.const 32
                                                                                                                                i32.add
                                                                                                                                local.get 6
                                                                                                                                i32.const 16
                                                                                                                                i32.add
                                                                                                                                i64.load align=1
                                                                                                                                i64.store align=4
                                                                                                                                local.get 2
                                                                                                                                i32.const 40
                                                                                                                                i32.add
                                                                                                                                local.get 6
                                                                                                                                i32.const 24
                                                                                                                                i32.add
                                                                                                                                i64.load align=1
                                                                                                                                i64.store align=4
                                                                                                                                local.get 2
                                                                                                                                local.get 0
                                                                                                                                i32.const 160
                                                                                                                                i32.add
                                                                                                                                i32.store offset=12
                                                                                                                                local.get 2
                                                                                                                                local.get 6
                                                                                                                                i64.load align=1
                                                                                                                                i64.store offset=16 align=4
                                                                                                                                local.get 2
                                                                                                                                i32.const 48
                                                                                                                                i32.add
                                                                                                                                local.get 2
                                                                                                                                i32.const 16
                                                                                                                                i32.add
                                                                                                                                call 52
                                                                                                                                local.get 0
                                                                                                                                i32.const 304
                                                                                                                                i32.add
                                                                                                                                local.tee 1
                                                                                                                                i64.const 0
                                                                                                                                local.get 2
                                                                                                                                i64.load offset=56
                                                                                                                                local.tee 10
                                                                                                                                local.get 2
                                                                                                                                i64.load offset=88
                                                                                                                                i64.sub
                                                                                                                                local.get 2
                                                                                                                                i64.load offset=48
                                                                                                                                local.tee 12
                                                                                                                                local.get 2
                                                                                                                                i64.load offset=80
                                                                                                                                local.tee 13
                                                                                                                                i64.lt_u
                                                                                                                                i64.extend_i32_u
                                                                                                                                i64.sub
                                                                                                                                local.tee 11
                                                                                                                                local.get 12
                                                                                                                                local.get 12
                                                                                                                                local.get 13
                                                                                                                                i64.sub
                                                                                                                                local.tee 13
                                                                                                                                i64.lt_u
                                                                                                                                local.get 10
                                                                                                                                local.get 11
                                                                                                                                i64.lt_u
                                                                                                                                local.get 10
                                                                                                                                local.get 11
                                                                                                                                i64.eq
                                                                                                                                select
                                                                                                                                local.tee 3
                                                                                                                                select
                                                                                                                                i64.store offset=8
                                                                                                                                local.get 1
                                                                                                                                i64.const 0
                                                                                                                                local.get 13
                                                                                                                                local.get 3
                                                                                                                                select
                                                                                                                                i64.store
                                                                                                                                local.get 2
                                                                                                                                i32.const 96
                                                                                                                                i32.add
                                                                                                                                global.set 0
                                                                                                                                br 55 (;@7;)
                                                                                                                              end
                                                                                                                              block (result i32)  ;; label = @62
                                                                                                                                local.get 0
                                                                                                                                i64.load offset=96
                                                                                                                                local.tee 10
                                                                                                                                local.get 0
                                                                                                                                i64.load offset=104
                                                                                                                                local.tee 11
                                                                                                                                i64.or
                                                                                                                                i64.eqz
                                                                                                                                i32.eqz
                                                                                                                                if  ;; label = @63
                                                                                                                                  i32.const 1
                                                                                                                                  local.get 10
                                                                                                                                  local.get 13
                                                                                                                                  i64.add
                                                                                                                                  local.get 13
                                                                                                                                  i64.lt_u
                                                                                                                                  local.tee 2
                                                                                                                                  local.get 2
                                                                                                                                  i64.extend_i32_u
                                                                                                                                  local.get 11
                                                                                                                                  local.get 12
                                                                                                                                  i64.add
                                                                                                                                  i64.add
                                                                                                                                  local.tee 13
                                                                                                                                  local.get 12
                                                                                                                                  i64.lt_u
                                                                                                                                  local.get 12
                                                                                                                                  local.get 13
                                                                                                                                  i64.eq
                                                                                                                                  select
                                                                                                                                  br_if 1 (;@62;)
                                                                                                                                  drop
                                                                                                                                end
                                                                                                                                i32.const 0
                                                                                                                              end
                                                                                                                              local.set 2
                                                                                                                              local.get 0
                                                                                                                              local.get 10
                                                                                                                              i64.store offset=320
                                                                                                                              local.get 0
                                                                                                                              local.get 10
                                                                                                                              i64.store offset=304
                                                                                                                              local.get 0
                                                                                                                              i32.const 4
                                                                                                                              i32.store8 offset=289
                                                                                                                              local.get 0
                                                                                                                              local.get 2
                                                                                                                              i32.store8 offset=288
                                                                                                                              local.get 0
                                                                                                                              local.get 11
                                                                                                                              i64.store offset=328
                                                                                                                              local.get 0
                                                                                                                              local.get 11
                                                                                                                              i64.store offset=312
                                                                                                                              global.get 0
                                                                                                                              i32.const 16
                                                                                                                              i32.sub
                                                                                                                              local.tee 1
                                                                                                                              global.set 0
                                                                                                                              local.get 1
                                                                                                                              i64.const 16384
                                                                                                                              i64.store offset=8 align=4
                                                                                                                              local.get 1
                                                                                                                              i32.const 69258
                                                                                                                              i32.store offset=4
                                                                                                                              block  ;; label = @62
                                                                                                                                local.get 0
                                                                                                                                i32.const 288
                                                                                                                                i32.add
                                                                                                                                local.tee 0
                                                                                                                                i32.load8_u
                                                                                                                                local.tee 4
                                                                                                                                i32.const 2
                                                                                                                                i32.eq
                                                                                                                                if  ;; label = @63
                                                                                                                                  local.get 1
                                                                                                                                  i32.const 4
                                                                                                                                  i32.add
                                                                                                                                  local.tee 0
                                                                                                                                  i32.const 1
                                                                                                                                  call 64
                                                                                                                                  local.get 0
                                                                                                                                  i32.const 1
                                                                                                                                  call 64
                                                                                                                                  br 1 (;@62;)
                                                                                                                                end
                                                                                                                                local.get 1
                                                                                                                                i32.const 4
                                                                                                                                i32.add
                                                                                                                                local.tee 3
                                                                                                                                i32.const 0
                                                                                                                                call 64
                                                                                                                                local.get 4
                                                                                                                                i32.const 1
                                                                                                                                i32.and
                                                                                                                                if  ;; label = @63
                                                                                                                                  local.get 3
                                                                                                                                  i32.const 1
                                                                                                                                  call 64
                                                                                                                                  local.get 3
                                                                                                                                  local.get 0
                                                                                                                                  i32.load8_u offset=1
                                                                                                                                  call 64
                                                                                                                                  br 1 (;@62;)
                                                                                                                                end
                                                                                                                                local.get 1
                                                                                                                                i32.const 4
                                                                                                                                i32.add
                                                                                                                                local.tee 3
                                                                                                                                i32.const 0
                                                                                                                                call 64
                                                                                                                                local.get 0
                                                                                                                                i64.load offset=16
                                                                                                                                local.get 0
                                                                                                                                i64.load offset=24
                                                                                                                                local.get 3
                                                                                                                                call 33
                                                                                                                                local.get 0
                                                                                                                                i64.load offset=32
                                                                                                                                local.get 0
                                                                                                                                i64.load offset=40
                                                                                                                                local.get 3
                                                                                                                                call 33
                                                                                                                              end
                                                                                                                              br 60 (;@1;)
                                                                                                                            end
                                                                                                                            local.get 0
                                                                                                                            i32.const 304
                                                                                                                            i32.add
                                                                                                                            local.tee 2
                                                                                                                            local.get 1
                                                                                                                            i32.const 48
                                                                                                                            memory.copy
                                                                                                                            local.get 0
                                                                                                                            i64.load offset=344
                                                                                                                            local.set 10
                                                                                                                            local.get 0
                                                                                                                            i64.load offset=336
                                                                                                                            local.set 12
                                                                                                                            local.get 0
                                                                                                                            local.get 0
                                                                                                                            i32.const 160
                                                                                                                            i32.add
                                                                                                                            local.tee 1
                                                                                                                            i32.store offset=288
                                                                                                                            block (result i32)  ;; label = @61
                                                                                                                              local.get 10
                                                                                                                              local.get 12
                                                                                                                              i64.or
                                                                                                                              i64.eqz
                                                                                                                              i32.eqz
                                                                                                                              if  ;; label = @62
                                                                                                                                i32.const 1
                                                                                                                                local.get 1
                                                                                                                                local.get 2
                                                                                                                                local.get 12
                                                                                                                                local.get 10
                                                                                                                                call 70
                                                                                                                                local.tee 2
                                                                                                                                i32.const 255
                                                                                                                                i32.and
                                                                                                                                i32.const 7
                                                                                                                                i32.ne
                                                                                                                                br_if 1 (;@61;)
                                                                                                                                drop
                                                                                                                              end
                                                                                                                              local.get 0
                                                                                                                              i32.const 288
                                                                                                                              i32.add
                                                                                                                              local.tee 2
                                                                                                                              local.get 0
                                                                                                                              i32.const 160
                                                                                                                              i32.add
                                                                                                                              i32.const 128
                                                                                                                              memory.copy
                                                                                                                              local.get 2
                                                                                                                              call 62
                                                                                                                              i32.const 7
                                                                                                                              local.set 2
                                                                                                                              i32.const 0
                                                                                                                            end
                                                                                                                            local.get 2
                                                                                                                            call 57
                                                                                                                            unreachable
                                                                                                                          end
                                                                                                                          local.get 0
                                                                                                                          i32.const 304
                                                                                                                          i32.add
                                                                                                                          local.tee 2
                                                                                                                          local.get 1
                                                                                                                          i32.const 64
                                                                                                                          memory.copy
                                                                                                                          local.get 0
                                                                                                                          i64.load offset=344
                                                                                                                          local.set 10
                                                                                                                          local.get 0
                                                                                                                          i64.load offset=336
                                                                                                                          local.set 12
                                                                                                                          local.get 0
                                                                                                                          local.get 0
                                                                                                                          i32.const 160
                                                                                                                          i32.add
                                                                                                                          local.tee 1
                                                                                                                          i32.store offset=288
                                                                                                                          i64.const 0
                                                                                                                          local.set 11
                                                                                                                          i64.const 0
                                                                                                                          local.set 16
                                                                                                                          block  ;; label = @60
                                                                                                                            block  ;; label = @61
                                                                                                                              local.get 10
                                                                                                                              local.get 12
                                                                                                                              i64.or
                                                                                                                              i64.eqz
                                                                                                                              i32.eqz
                                                                                                                              if  ;; label = @62
                                                                                                                                i32.const 1
                                                                                                                                local.set 3
                                                                                                                                local.get 0
                                                                                                                                i32.const 544
                                                                                                                                i32.add
                                                                                                                                local.get 1
                                                                                                                                local.get 2
                                                                                                                                local.get 12
                                                                                                                                local.get 10
                                                                                                                                local.get 0
                                                                                                                                i32.load8_u offset=352
                                                                                                                                i32.const 1
                                                                                                                                call 71
                                                                                                                                local.get 0
                                                                                                                                i32.load8_u offset=544
                                                                                                                                br_if 1 (;@61;)
                                                                                                                                i64.const 0
                                                                                                                                local.get 10
                                                                                                                                local.get 0
                                                                                                                                i64.load offset=568
                                                                                                                                i64.sub
                                                                                                                                local.get 12
                                                                                                                                local.get 0
                                                                                                                                i64.load offset=560
                                                                                                                                local.tee 13
                                                                                                                                i64.lt_u
                                                                                                                                i64.extend_i32_u
                                                                                                                                i64.sub
                                                                                                                                local.tee 11
                                                                                                                                local.get 12
                                                                                                                                local.get 12
                                                                                                                                local.get 13
                                                                                                                                i64.sub
                                                                                                                                local.tee 13
                                                                                                                                i64.lt_u
                                                                                                                                local.get 10
                                                                                                                                local.get 11
                                                                                                                                i64.lt_u
                                                                                                                                local.get 10
                                                                                                                                local.get 11
                                                                                                                                i64.eq
                                                                                                                                select
                                                                                                                                local.tee 1
                                                                                                                                select
                                                                                                                                local.set 16
                                                                                                                                i64.const 0
                                                                                                                                local.get 13
                                                                                                                                local.get 1
                                                                                                                                select
                                                                                                                                local.set 11
                                                                                                                              end
                                                                                                                              local.get 0
                                                                                                                              i32.const 288
                                                                                                                              i32.add
                                                                                                                              local.tee 1
                                                                                                                              local.get 0
                                                                                                                              i32.const 160
                                                                                                                              i32.add
                                                                                                                              i32.const 128
                                                                                                                              memory.copy
                                                                                                                              local.get 1
                                                                                                                              call 62
                                                                                                                              i32.const 0
                                                                                                                              local.set 3
                                                                                                                              br 1 (;@60;)
                                                                                                                            end
                                                                                                                            local.get 0
                                                                                                                            i32.load8_u offset=545
                                                                                                                            local.set 2
                                                                                                                          end
                                                                                                                          local.get 0
                                                                                                                          local.get 11
                                                                                                                          i64.store offset=304
                                                                                                                          local.get 0
                                                                                                                          local.get 2
                                                                                                                          i32.store8 offset=289
                                                                                                                          local.get 0
                                                                                                                          local.get 3
                                                                                                                          i32.store8 offset=288
                                                                                                                          local.get 0
                                                                                                                          local.get 16
                                                                                                                          i64.store offset=312
                                                                                                                          br 54 (;@5;)
                                                                                                                        end
                                                                                                                        global.get 0
                                                                                                                        i32.const 48
                                                                                                                        i32.sub
                                                                                                                        local.tee 2
                                                                                                                        global.set 0
                                                                                                                        local.get 2
                                                                                                                        local.get 0
                                                                                                                        i32.const 160
                                                                                                                        i32.add
                                                                                                                        local.tee 1
                                                                                                                        i32.store offset=8
                                                                                                                        local.get 2
                                                                                                                        i32.const 12
                                                                                                                        i32.add
                                                                                                                        local.get 6
                                                                                                                        i32.const 34
                                                                                                                        memory.copy
                                                                                                                        local.get 0
                                                                                                                        i32.const 304
                                                                                                                        i32.add
                                                                                                                        local.get 1
                                                                                                                        i64.load offset=32
                                                                                                                        local.get 1
                                                                                                                        i64.load offset=40
                                                                                                                        local.get 2
                                                                                                                        i32.const 13
                                                                                                                        i32.add
                                                                                                                        local.get 2
                                                                                                                        i32.load8_u offset=12
                                                                                                                        call 53
                                                                                                                        local.get 2
                                                                                                                        i32.const 48
                                                                                                                        i32.add
                                                                                                                        global.set 0
                                                                                                                        br 51 (;@7;)
                                                                                                                      end
                                                                                                                      global.get 0
                                                                                                                      i32.const 128
                                                                                                                      i32.sub
                                                                                                                      local.tee 2
                                                                                                                      global.set 0
                                                                                                                      local.get 2
                                                                                                                      local.get 0
                                                                                                                      i32.const 160
                                                                                                                      i32.add
                                                                                                                      local.tee 0
                                                                                                                      i32.store
                                                                                                                      local.get 2
                                                                                                                      i32.const 16
                                                                                                                      i32.add
                                                                                                                      local.tee 3
                                                                                                                      local.get 1
                                                                                                                      i32.const 64
                                                                                                                      memory.copy
                                                                                                                      block  ;; label = @58
                                                                                                                        local.get 2
                                                                                                                        i64.load offset=48
                                                                                                                        local.tee 12
                                                                                                                        local.get 2
                                                                                                                        i64.load offset=56
                                                                                                                        local.tee 10
                                                                                                                        i64.or
                                                                                                                        i64.eqz
                                                                                                                        if  ;; label = @59
                                                                                                                          i32.const 0
                                                                                                                          local.set 1
                                                                                                                          br 1 (;@58;)
                                                                                                                        end
                                                                                                                        local.get 2
                                                                                                                        i32.const 80
                                                                                                                        i32.add
                                                                                                                        local.get 3
                                                                                                                        call 52
                                                                                                                        i32.const 1
                                                                                                                        local.set 1
                                                                                                                        local.get 2
                                                                                                                        i64.load offset=80
                                                                                                                        local.tee 13
                                                                                                                        local.get 12
                                                                                                                        i64.add
                                                                                                                        local.get 13
                                                                                                                        i64.lt_u
                                                                                                                        local.tee 3
                                                                                                                        local.get 3
                                                                                                                        i64.extend_i32_u
                                                                                                                        local.get 2
                                                                                                                        i64.load offset=88
                                                                                                                        local.tee 11
                                                                                                                        local.get 10
                                                                                                                        i64.add
                                                                                                                        i64.add
                                                                                                                        local.tee 14
                                                                                                                        local.get 11
                                                                                                                        i64.lt_u
                                                                                                                        local.get 11
                                                                                                                        local.get 14
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        i32.const 1
                                                                                                                        i32.eq
                                                                                                                        br_if 0 (;@58;)
                                                                                                                        local.get 0
                                                                                                                        i64.load
                                                                                                                        local.tee 14
                                                                                                                        local.get 12
                                                                                                                        i64.add
                                                                                                                        local.get 14
                                                                                                                        i64.lt_u
                                                                                                                        local.tee 3
                                                                                                                        local.get 3
                                                                                                                        i64.extend_i32_u
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=8
                                                                                                                        local.tee 14
                                                                                                                        local.get 10
                                                                                                                        i64.add
                                                                                                                        i64.add
                                                                                                                        local.tee 15
                                                                                                                        local.get 14
                                                                                                                        i64.lt_u
                                                                                                                        local.get 14
                                                                                                                        local.get 15
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        br_if 0 (;@58;)
                                                                                                                        local.get 12
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=32
                                                                                                                        i64.lt_u
                                                                                                                        local.get 10
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=40
                                                                                                                        local.tee 12
                                                                                                                        i64.lt_u
                                                                                                                        local.get 10
                                                                                                                        local.get 12
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        i32.const 1
                                                                                                                        i32.shl
                                                                                                                        i32.const 0
                                                                                                                        local.get 11
                                                                                                                        local.get 13
                                                                                                                        i64.or
                                                                                                                        i64.eqz
                                                                                                                        select
                                                                                                                        local.set 1
                                                                                                                      end
                                                                                                                      local.get 2
                                                                                                                      i32.const 128
                                                                                                                      i32.add
                                                                                                                      global.set 0
                                                                                                                      global.get 0
                                                                                                                      i32.const 16
                                                                                                                      i32.sub
                                                                                                                      local.tee 2
                                                                                                                      global.set 0
                                                                                                                      local.get 2
                                                                                                                      i64.const 16384
                                                                                                                      i64.store offset=8 align=4
                                                                                                                      local.get 2
                                                                                                                      i32.const 69258
                                                                                                                      i32.store offset=4
                                                                                                                      local.get 2
                                                                                                                      i32.const 4
                                                                                                                      i32.add
                                                                                                                      local.tee 0
                                                                                                                      i32.const 0
                                                                                                                      call 64
                                                                                                                      local.get 0
                                                                                                                      local.get 1
                                                                                                                      i32.const 255
                                                                                                                      i32.and
                                                                                                                      call 64
                                                                                                                      local.get 2
                                                                                                                      i32.load offset=12
                                                                                                                      local.tee 2
                                                                                                                      i32.const 16385
                                                                                                                      i32.ge_u
                                                                                                                      if  ;; label = @58
                                                                                                                        br 55 (;@3;)
                                                                                                                      end
                                                                                                                      br 55 (;@2;)
                                                                                                                    end
                                                                                                                    local.get 0
                                                                                                                    i32.const 288
                                                                                                                    i32.add
                                                                                                                    local.set 3
                                                                                                                    global.get 0
                                                                                                                    i32.const 112
                                                                                                                    i32.sub
                                                                                                                    local.tee 2
                                                                                                                    global.set 0
                                                                                                                    local.get 2
                                                                                                                    local.get 0
                                                                                                                    i32.const 160
                                                                                                                    i32.add
                                                                                                                    local.tee 4
                                                                                                                    i32.store
                                                                                                                    local.get 2
                                                                                                                    i32.const 16
                                                                                                                    i32.add
                                                                                                                    local.tee 5
                                                                                                                    local.get 1
                                                                                                                    i32.const 48
                                                                                                                    memory.copy
                                                                                                                    block  ;; label = @57
                                                                                                                      local.get 2
                                                                                                                      i64.load offset=48
                                                                                                                      local.tee 13
                                                                                                                      local.get 2
                                                                                                                      i64.load offset=56
                                                                                                                      local.tee 10
                                                                                                                      i64.or
                                                                                                                      i64.eqz
                                                                                                                      if  ;; label = @58
                                                                                                                        local.get 3
                                                                                                                        i64.const 0
                                                                                                                        i64.store offset=8
                                                                                                                        local.get 3
                                                                                                                        i64.const 0
                                                                                                                        i64.store
                                                                                                                        br 1 (;@57;)
                                                                                                                      end
                                                                                                                      local.get 2
                                                                                                                      i32.const -64
                                                                                                                      i32.sub
                                                                                                                      local.get 5
                                                                                                                      call 52
                                                                                                                      i64.const 1
                                                                                                                      local.set 14
                                                                                                                      block  ;; label = @58
                                                                                                                        local.get 2
                                                                                                                        i64.load offset=64
                                                                                                                        local.tee 11
                                                                                                                        local.get 13
                                                                                                                        i64.lt_u
                                                                                                                        local.tee 1
                                                                                                                        local.get 2
                                                                                                                        i64.load offset=72
                                                                                                                        local.tee 12
                                                                                                                        local.get 10
                                                                                                                        i64.lt_u
                                                                                                                        local.get 10
                                                                                                                        local.get 12
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        br_if 0 (;@58;)
                                                                                                                        i64.const 0
                                                                                                                        local.get 11
                                                                                                                        local.get 2
                                                                                                                        i64.load offset=96
                                                                                                                        local.tee 15
                                                                                                                        i64.sub
                                                                                                                        local.tee 16
                                                                                                                        local.get 11
                                                                                                                        local.get 16
                                                                                                                        i64.lt_u
                                                                                                                        local.get 12
                                                                                                                        local.get 2
                                                                                                                        i64.load offset=104
                                                                                                                        i64.sub
                                                                                                                        local.get 11
                                                                                                                        local.get 15
                                                                                                                        i64.lt_u
                                                                                                                        i64.extend_i32_u
                                                                                                                        i64.sub
                                                                                                                        local.tee 15
                                                                                                                        local.get 12
                                                                                                                        i64.gt_u
                                                                                                                        local.get 12
                                                                                                                        local.get 15
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        local.tee 5
                                                                                                                        select
                                                                                                                        local.get 13
                                                                                                                        i64.lt_u
                                                                                                                        i64.const 0
                                                                                                                        local.get 15
                                                                                                                        local.get 5
                                                                                                                        select
                                                                                                                        local.tee 15
                                                                                                                        local.get 10
                                                                                                                        i64.lt_u
                                                                                                                        local.get 10
                                                                                                                        local.get 15
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        br_if 0 (;@58;)
                                                                                                                        block  ;; label = @59
                                                                                                                          local.get 11
                                                                                                                          local.get 13
                                                                                                                          i64.xor
                                                                                                                          local.get 10
                                                                                                                          local.get 12
                                                                                                                          i64.xor
                                                                                                                          i64.or
                                                                                                                          i64.eqz
                                                                                                                          i32.eqz
                                                                                                                          if  ;; label = @60
                                                                                                                            local.get 11
                                                                                                                            local.get 13
                                                                                                                            i64.sub
                                                                                                                            local.tee 11
                                                                                                                            local.get 4
                                                                                                                            i64.load offset=32
                                                                                                                            i64.lt_u
                                                                                                                            local.get 12
                                                                                                                            local.get 10
                                                                                                                            i64.sub
                                                                                                                            local.get 1
                                                                                                                            i64.extend_i32_u
                                                                                                                            i64.sub
                                                                                                                            local.tee 10
                                                                                                                            local.get 4
                                                                                                                            i64.load offset=40
                                                                                                                            local.tee 12
                                                                                                                            i64.lt_u
                                                                                                                            local.get 10
                                                                                                                            local.get 12
                                                                                                                            i64.eq
                                                                                                                            select
                                                                                                                            br_if 1 (;@59;)
                                                                                                                          end
                                                                                                                          local.get 3
                                                                                                                          i64.const 0
                                                                                                                          i64.store offset=8
                                                                                                                          local.get 3
                                                                                                                          i64.const 0
                                                                                                                          i64.store
                                                                                                                          br 2 (;@57;)
                                                                                                                        end
                                                                                                                        local.get 3
                                                                                                                        local.get 11
                                                                                                                        i64.store offset=16
                                                                                                                        local.get 3
                                                                                                                        local.get 10
                                                                                                                        i64.store offset=24
                                                                                                                        i64.const 2
                                                                                                                        local.set 14
                                                                                                                      end
                                                                                                                      local.get 3
                                                                                                                      local.get 14
                                                                                                                      i64.store
                                                                                                                      local.get 3
                                                                                                                      i64.const 0
                                                                                                                      i64.store offset=8
                                                                                                                    end
                                                                                                                    local.get 2
                                                                                                                    i32.const 112
                                                                                                                    i32.add
                                                                                                                    global.set 0
                                                                                                                    local.get 0
                                                                                                                    i64.load offset=288
                                                                                                                    local.set 10
                                                                                                                    local.get 0
                                                                                                                    i64.load offset=296
                                                                                                                    drop
                                                                                                                    local.get 0
                                                                                                                    i64.load offset=304
                                                                                                                    local.set 12
                                                                                                                    local.get 0
                                                                                                                    i64.load offset=312
                                                                                                                    local.set 11
                                                                                                                    global.get 0
                                                                                                                    i32.const 16
                                                                                                                    i32.sub
                                                                                                                    local.tee 2
                                                                                                                    global.set 0
                                                                                                                    local.get 2
                                                                                                                    i64.const 16384
                                                                                                                    i64.store offset=8 align=4
                                                                                                                    local.get 2
                                                                                                                    i32.const 69258
                                                                                                                    i32.store offset=4
                                                                                                                    local.get 2
                                                                                                                    i32.const 4
                                                                                                                    i32.add
                                                                                                                    i32.const 0
                                                                                                                    call 64
                                                                                                                    block  ;; label = @57
                                                                                                                      block  ;; label = @58
                                                                                                                        block  ;; label = @59
                                                                                                                          block  ;; label = @60
                                                                                                                            block  ;; label = @61
                                                                                                                              block  ;; label = @62
                                                                                                                                block  ;; label = @63
                                                                                                                                  local.get 10
                                                                                                                                  i32.wrap_i64
                                                                                                                                  i32.const 1
                                                                                                                                  i32.sub
                                                                                                                                  br_table 1 (;@62;) 2 (;@61;) 3 (;@60;) 4 (;@59;) 5 (;@58;) 0 (;@63;)
                                                                                                                                end
                                                                                                                                local.get 2
                                                                                                                                i32.const 4
                                                                                                                                i32.add
                                                                                                                                i32.const 0
                                                                                                                                call 64
                                                                                                                                br 5 (;@57;)
                                                                                                                              end
                                                                                                                              local.get 2
                                                                                                                              i32.const 4
                                                                                                                              i32.add
                                                                                                                              i32.const 1
                                                                                                                              call 64
                                                                                                                              br 4 (;@57;)
                                                                                                                            end
                                                                                                                            local.get 2
                                                                                                                            i32.const 4
                                                                                                                            i32.add
                                                                                                                            local.tee 1
                                                                                                                            i32.const 2
                                                                                                                            call 64
                                                                                                                            local.get 12
                                                                                                                            local.get 11
                                                                                                                            local.get 1
                                                                                                                            call 33
                                                                                                                            br 3 (;@57;)
                                                                                                                          end
                                                                                                                          local.get 2
                                                                                                                          i32.const 4
                                                                                                                          i32.add
                                                                                                                          i32.const 3
                                                                                                                          call 64
                                                                                                                          br 2 (;@57;)
                                                                                                                        end
                                                                                                                        local.get 2
                                                                                                                        i32.const 4
                                                                                                                        i32.add
                                                                                                                        i32.const 4
                                                                                                                        call 64
                                                                                                                        br 1 (;@57;)
                                                                                                                      end
                                                                                                                      local.get 2
                                                                                                                      i32.const 4
                                                                                                                      i32.add
                                                                                                                      i32.const 5
                                                                                                                      call 64
                                                                                                                    end
                                                                                                                    local.get 2
                                                                                                                    i32.load offset=12
                                                                                                                    local.tee 2
                                                                                                                    i32.const 16385
                                                                                                                    i32.ge_u
                                                                                                                    if  ;; label = @57
                                                                                                                      br 54 (;@3;)
                                                                                                                    end
                                                                                                                    br 54 (;@2;)
                                                                                                                  end
                                                                                                                  local.get 0
                                                                                                                  i32.const 304
                                                                                                                  i32.add
                                                                                                                  local.tee 2
                                                                                                                  local.get 1
                                                                                                                  i32.const 48
                                                                                                                  memory.copy
                                                                                                                  local.get 0
                                                                                                                  local.get 0
                                                                                                                  i32.const 160
                                                                                                                  i32.add
                                                                                                                  i32.store offset=288
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=344
                                                                                                                  local.set 12
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=336
                                                                                                                  local.set 10
                                                                                                                  local.get 0
                                                                                                                  i32.const 480
                                                                                                                  i32.add
                                                                                                                  local.tee 1
                                                                                                                  call 45
                                                                                                                  local.get 1
                                                                                                                  local.get 3
                                                                                                                  call 51
                                                                                                                  if  ;; label = @56
                                                                                                                    i64.const 0
                                                                                                                    local.set 12
                                                                                                                    i64.const 2
                                                                                                                    local.set 11
                                                                                                                    i64.const 6
                                                                                                                    local.set 10
                                                                                                                    br 46 (;@10;)
                                                                                                                  end
                                                                                                                  local.get 0
                                                                                                                  i32.const 544
                                                                                                                  i32.add
                                                                                                                  local.get 2
                                                                                                                  call 52
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=552
                                                                                                                  local.set 11
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=544
                                                                                                                  local.set 13
                                                                                                                  local.get 0
                                                                                                                  block (result i64)  ;; label = @56
                                                                                                                    block  ;; label = @57
                                                                                                                      block  ;; label = @58
                                                                                                                        block  ;; label = @59
                                                                                                                          local.get 10
                                                                                                                          local.get 12
                                                                                                                          i64.or
                                                                                                                          i64.eqz
                                                                                                                          i32.eqz
                                                                                                                          if  ;; label = @60
                                                                                                                            local.get 10
                                                                                                                            local.get 0
                                                                                                                            i64.load offset=192
                                                                                                                            i64.lt_u
                                                                                                                            local.get 12
                                                                                                                            local.get 0
                                                                                                                            i64.load offset=200
                                                                                                                            local.tee 14
                                                                                                                            i64.lt_u
                                                                                                                            local.get 12
                                                                                                                            local.get 14
                                                                                                                            i64.eq
                                                                                                                            select
                                                                                                                            br_if 1 (;@59;)
                                                                                                                          end
                                                                                                                          local.get 0
                                                                                                                          local.get 10
                                                                                                                          i64.store offset=544
                                                                                                                          local.get 0
                                                                                                                          local.get 12
                                                                                                                          i64.store offset=552
                                                                                                                          local.get 0
                                                                                                                          i64.load offset=168
                                                                                                                          local.set 14
                                                                                                                          local.get 0
                                                                                                                          i64.load offset=160
                                                                                                                          local.set 15
                                                                                                                          local.get 10
                                                                                                                          local.get 13
                                                                                                                          i64.lt_u
                                                                                                                          local.tee 1
                                                                                                                          local.get 11
                                                                                                                          local.get 12
                                                                                                                          i64.gt_u
                                                                                                                          local.get 11
                                                                                                                          local.get 12
                                                                                                                          i64.eq
                                                                                                                          select
                                                                                                                          br_if 37 (;@22;)
                                                                                                                          local.get 15
                                                                                                                          local.get 15
                                                                                                                          local.get 10
                                                                                                                          local.get 13
                                                                                                                          i64.sub
                                                                                                                          local.tee 13
                                                                                                                          i64.add
                                                                                                                          local.tee 16
                                                                                                                          i64.gt_u
                                                                                                                          local.tee 3
                                                                                                                          local.get 3
                                                                                                                          i64.extend_i32_u
                                                                                                                          local.get 14
                                                                                                                          local.get 12
                                                                                                                          local.get 11
                                                                                                                          i64.sub
                                                                                                                          local.get 1
                                                                                                                          i64.extend_i32_u
                                                                                                                          i64.sub
                                                                                                                          local.tee 15
                                                                                                                          i64.add
                                                                                                                          i64.add
                                                                                                                          local.tee 11
                                                                                                                          local.get 14
                                                                                                                          i64.lt_u
                                                                                                                          local.get 11
                                                                                                                          local.get 14
                                                                                                                          i64.eq
                                                                                                                          select
                                                                                                                          br_if 1 (;@58;)
                                                                                                                          local.get 0
                                                                                                                          local.get 16
                                                                                                                          i64.store offset=160
                                                                                                                          local.get 0
                                                                                                                          local.get 11
                                                                                                                          i64.store offset=168
                                                                                                                          local.get 0
                                                                                                                          i64.load offset=176
                                                                                                                          local.tee 11
                                                                                                                          local.get 13
                                                                                                                          i64.add
                                                                                                                          local.tee 13
                                                                                                                          local.get 11
                                                                                                                          i64.lt_u
                                                                                                                          local.tee 1
                                                                                                                          local.get 1
                                                                                                                          i64.extend_i32_u
                                                                                                                          local.get 0
                                                                                                                          i64.load offset=184
                                                                                                                          local.tee 11
                                                                                                                          local.get 15
                                                                                                                          i64.add
                                                                                                                          i64.add
                                                                                                                          local.tee 14
                                                                                                                          local.get 11
                                                                                                                          i64.lt_u
                                                                                                                          local.get 11
                                                                                                                          local.get 14
                                                                                                                          i64.eq
                                                                                                                          select
                                                                                                                          br_if 1 (;@58;)
                                                                                                                          i64.const 0
                                                                                                                          br 38 (;@21;)
                                                                                                                        end
                                                                                                                        local.get 0
                                                                                                                        i64.const 0
                                                                                                                        i64.store offset=552
                                                                                                                        local.get 0
                                                                                                                        i64.const 0
                                                                                                                        i64.store offset=544
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=184
                                                                                                                        local.set 14
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=176
                                                                                                                        local.set 15
                                                                                                                        local.get 10
                                                                                                                        local.get 13
                                                                                                                        i64.lt_u
                                                                                                                        local.tee 1
                                                                                                                        local.get 11
                                                                                                                        local.get 12
                                                                                                                        i64.gt_u
                                                                                                                        local.get 11
                                                                                                                        local.get 12
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        br_if 1 (;@57;)
                                                                                                                        i64.const -1
                                                                                                                        local.get 15
                                                                                                                        local.get 15
                                                                                                                        local.get 10
                                                                                                                        local.get 13
                                                                                                                        i64.sub
                                                                                                                        local.tee 16
                                                                                                                        i64.add
                                                                                                                        local.tee 13
                                                                                                                        i64.gt_u
                                                                                                                        local.tee 3
                                                                                                                        i64.extend_i32_u
                                                                                                                        local.get 14
                                                                                                                        local.get 12
                                                                                                                        local.get 11
                                                                                                                        i64.sub
                                                                                                                        local.get 1
                                                                                                                        i64.extend_i32_u
                                                                                                                        i64.sub
                                                                                                                        local.tee 15
                                                                                                                        i64.add
                                                                                                                        i64.add
                                                                                                                        local.tee 11
                                                                                                                        local.get 3
                                                                                                                        local.get 11
                                                                                                                        local.get 14
                                                                                                                        i64.lt_u
                                                                                                                        local.get 11
                                                                                                                        local.get 14
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        local.tee 1
                                                                                                                        select
                                                                                                                        local.set 14
                                                                                                                        i64.const -1
                                                                                                                        local.get 13
                                                                                                                        local.get 1
                                                                                                                        select
                                                                                                                        local.set 13
                                                                                                                        i64.const -1
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=160
                                                                                                                        local.tee 11
                                                                                                                        local.get 16
                                                                                                                        i64.add
                                                                                                                        local.tee 16
                                                                                                                        local.get 11
                                                                                                                        i64.lt_u
                                                                                                                        local.tee 1
                                                                                                                        i64.extend_i32_u
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=168
                                                                                                                        local.tee 11
                                                                                                                        local.get 15
                                                                                                                        i64.add
                                                                                                                        i64.add
                                                                                                                        local.tee 15
                                                                                                                        local.get 1
                                                                                                                        local.get 11
                                                                                                                        local.get 15
                                                                                                                        i64.gt_u
                                                                                                                        local.get 11
                                                                                                                        local.get 15
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        local.tee 1
                                                                                                                        select
                                                                                                                        local.set 11
                                                                                                                        i64.const -1
                                                                                                                        local.get 16
                                                                                                                        local.get 1
                                                                                                                        select
                                                                                                                        br 2 (;@56;)
                                                                                                                      end
                                                                                                                      i64.const 0
                                                                                                                      local.set 12
                                                                                                                      i64.const 2
                                                                                                                      local.set 11
                                                                                                                      i64.const 4
                                                                                                                      local.set 10
                                                                                                                      br 47 (;@10;)
                                                                                                                    end
                                                                                                                    i64.const 0
                                                                                                                    local.get 14
                                                                                                                    local.get 11
                                                                                                                    local.get 12
                                                                                                                    i64.sub
                                                                                                                    local.get 10
                                                                                                                    local.get 13
                                                                                                                    i64.gt_u
                                                                                                                    i64.extend_i32_u
                                                                                                                    i64.sub
                                                                                                                    local.tee 16
                                                                                                                    i64.sub
                                                                                                                    local.get 15
                                                                                                                    local.get 13
                                                                                                                    local.get 10
                                                                                                                    i64.sub
                                                                                                                    local.tee 11
                                                                                                                    i64.lt_u
                                                                                                                    i64.extend_i32_u
                                                                                                                    i64.sub
                                                                                                                    local.tee 13
                                                                                                                    local.get 15
                                                                                                                    local.get 15
                                                                                                                    local.get 11
                                                                                                                    i64.sub
                                                                                                                    local.tee 17
                                                                                                                    i64.lt_u
                                                                                                                    local.get 13
                                                                                                                    local.get 14
                                                                                                                    i64.gt_u
                                                                                                                    local.get 13
                                                                                                                    local.get 14
                                                                                                                    i64.eq
                                                                                                                    select
                                                                                                                    local.tee 1
                                                                                                                    select
                                                                                                                    local.set 14
                                                                                                                    i64.const 0
                                                                                                                    local.get 17
                                                                                                                    local.get 1
                                                                                                                    select
                                                                                                                    local.set 13
                                                                                                                    i64.const 0
                                                                                                                    local.get 0
                                                                                                                    i64.load offset=168
                                                                                                                    local.tee 15
                                                                                                                    local.get 16
                                                                                                                    i64.sub
                                                                                                                    local.get 0
                                                                                                                    i64.load offset=160
                                                                                                                    local.tee 16
                                                                                                                    local.get 11
                                                                                                                    i64.lt_u
                                                                                                                    i64.extend_i32_u
                                                                                                                    i64.sub
                                                                                                                    local.tee 17
                                                                                                                    local.get 16
                                                                                                                    local.get 16
                                                                                                                    local.get 11
                                                                                                                    i64.sub
                                                                                                                    local.tee 18
                                                                                                                    i64.lt_u
                                                                                                                    local.get 15
                                                                                                                    local.get 17
                                                                                                                    i64.lt_u
                                                                                                                    local.get 15
                                                                                                                    local.get 17
                                                                                                                    i64.eq
                                                                                                                    select
                                                                                                                    local.tee 1
                                                                                                                    select
                                                                                                                    local.set 11
                                                                                                                    i64.const 0
                                                                                                                    local.get 18
                                                                                                                    local.get 1
                                                                                                                    select
                                                                                                                  end
                                                                                                                  i64.store offset=160
                                                                                                                  local.get 0
                                                                                                                  local.get 11
                                                                                                                  i64.store offset=168
                                                                                                                  i64.const 1
                                                                                                                  br 34 (;@21;)
                                                                                                                end
                                                                                                                local.get 0
                                                                                                                i32.const 304
                                                                                                                i32.add
                                                                                                                local.tee 2
                                                                                                                local.get 1
                                                                                                                i32.const 64
                                                                                                                memory.copy
                                                                                                                local.get 0
                                                                                                                local.get 0
                                                                                                                i32.const 160
                                                                                                                i32.add
                                                                                                                local.tee 1
                                                                                                                i32.store offset=288
                                                                                                                local.get 0
                                                                                                                i32.const 544
                                                                                                                i32.add
                                                                                                                local.tee 3
                                                                                                                local.get 1
                                                                                                                local.get 2
                                                                                                                local.get 0
                                                                                                                i64.load offset=336
                                                                                                                local.get 0
                                                                                                                i64.load offset=344
                                                                                                                local.get 0
                                                                                                                i32.load8_u offset=353
                                                                                                                local.get 0
                                                                                                                i32.load8_u offset=352
                                                                                                                call 71
                                                                                                                local.get 0
                                                                                                                i32.load8_u offset=544
                                                                                                                i32.eqz
                                                                                                                br_if 50 (;@4;)
                                                                                                                i32.const 1
                                                                                                                local.get 3
                                                                                                                call 61
                                                                                                                unreachable
                                                                                                              end
                                                                                                              local.get 0
                                                                                                              local.get 0
                                                                                                              i32.const 160
                                                                                                              i32.add
                                                                                                              i32.store offset=288
                                                                                                              local.get 0
                                                                                                              i32.const 304
                                                                                                              i32.add
                                                                                                              local.tee 3
                                                                                                              local.get 1
                                                                                                              i32.const 64
                                                                                                              memory.copy
                                                                                                              i64.const 0
                                                                                                              local.set 12
                                                                                                              i64.const 0
                                                                                                              local.set 10
                                                                                                              block  ;; label = @54
                                                                                                                local.get 0
                                                                                                                i64.load offset=336
                                                                                                                local.tee 13
                                                                                                                local.get 0
                                                                                                                i64.load offset=344
                                                                                                                local.tee 11
                                                                                                                i64.or
                                                                                                                i64.eqz
                                                                                                                br_if 0 (;@54;)
                                                                                                                local.get 0
                                                                                                                i32.load8_u offset=352
                                                                                                                local.set 4
                                                                                                                local.get 0
                                                                                                                i32.const 480
                                                                                                                i32.add
                                                                                                                local.get 3
                                                                                                                call 52
                                                                                                                block  ;; label = @55
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=480
                                                                                                                  local.tee 15
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=488
                                                                                                                  local.tee 14
                                                                                                                  i64.or
                                                                                                                  i64.const 0
                                                                                                                  i64.ne
                                                                                                                  br_if 0 (;@55;)
                                                                                                                  local.get 13
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=192
                                                                                                                  i64.ge_u
                                                                                                                  local.get 11
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=200
                                                                                                                  local.tee 12
                                                                                                                  i64.ge_u
                                                                                                                  local.get 11
                                                                                                                  local.get 12
                                                                                                                  i64.eq
                                                                                                                  select
                                                                                                                  br_if 0 (;@55;)
                                                                                                                  i32.const 1
                                                                                                                  local.set 2
                                                                                                                  i64.const 0
                                                                                                                  local.set 12
                                                                                                                  local.get 4
                                                                                                                  i32.const 1
                                                                                                                  i32.and
                                                                                                                  br_if 1 (;@54;)
                                                                                                                  br 43 (;@12;)
                                                                                                                end
                                                                                                                local.get 0
                                                                                                                block (result i64)  ;; label = @55
                                                                                                                  block  ;; label = @56
                                                                                                                    block  ;; label = @57
                                                                                                                      local.get 13
                                                                                                                      local.get 15
                                                                                                                      i64.add
                                                                                                                      local.tee 16
                                                                                                                      local.get 15
                                                                                                                      i64.lt_u
                                                                                                                      local.tee 2
                                                                                                                      local.get 2
                                                                                                                      i64.extend_i32_u
                                                                                                                      local.get 11
                                                                                                                      local.get 14
                                                                                                                      i64.add
                                                                                                                      i64.add
                                                                                                                      local.tee 12
                                                                                                                      local.get 14
                                                                                                                      i64.lt_u
                                                                                                                      local.get 12
                                                                                                                      local.get 14
                                                                                                                      i64.eq
                                                                                                                      select
                                                                                                                      i32.eqz
                                                                                                                      if  ;; label = @58
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=160
                                                                                                                        local.tee 17
                                                                                                                        local.get 13
                                                                                                                        i64.add
                                                                                                                        local.tee 19
                                                                                                                        local.get 17
                                                                                                                        i64.lt_u
                                                                                                                        local.tee 2
                                                                                                                        local.get 2
                                                                                                                        i64.extend_i32_u
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=168
                                                                                                                        local.tee 10
                                                                                                                        local.get 11
                                                                                                                        i64.add
                                                                                                                        i64.add
                                                                                                                        local.tee 18
                                                                                                                        local.get 10
                                                                                                                        i64.lt_u
                                                                                                                        local.get 10
                                                                                                                        local.get 18
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        local.tee 2
                                                                                                                        br_if 1 (;@57;)
                                                                                                                        local.get 0
                                                                                                                        local.get 16
                                                                                                                        i64.store offset=480
                                                                                                                        local.get 0
                                                                                                                        local.get 12
                                                                                                                        i64.store offset=488
                                                                                                                        local.get 0
                                                                                                                        i64.const -1
                                                                                                                        local.get 18
                                                                                                                        local.get 2
                                                                                                                        select
                                                                                                                        i64.store offset=168
                                                                                                                        local.get 0
                                                                                                                        i64.const -1
                                                                                                                        local.get 19
                                                                                                                        local.get 2
                                                                                                                        select
                                                                                                                        i64.store offset=160
                                                                                                                        local.get 0
                                                                                                                        i64.const -1
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=176
                                                                                                                        local.tee 10
                                                                                                                        local.get 13
                                                                                                                        i64.add
                                                                                                                        local.tee 14
                                                                                                                        local.get 10
                                                                                                                        local.get 14
                                                                                                                        i64.gt_u
                                                                                                                        local.tee 2
                                                                                                                        local.get 2
                                                                                                                        i64.extend_i32_u
                                                                                                                        local.get 0
                                                                                                                        i64.load offset=184
                                                                                                                        local.tee 10
                                                                                                                        local.get 11
                                                                                                                        i64.add
                                                                                                                        i64.add
                                                                                                                        local.tee 14
                                                                                                                        local.get 10
                                                                                                                        i64.lt_u
                                                                                                                        local.get 10
                                                                                                                        local.get 14
                                                                                                                        i64.eq
                                                                                                                        select
                                                                                                                        local.tee 2
                                                                                                                        select
                                                                                                                        i64.store offset=176
                                                                                                                        local.get 0
                                                                                                                        i64.const -1
                                                                                                                        local.get 14
                                                                                                                        local.get 2
                                                                                                                        select
                                                                                                                        i64.store offset=184
                                                                                                                        local.get 3
                                                                                                                        local.get 0
                                                                                                                        i32.const 480
                                                                                                                        i32.add
                                                                                                                        call 28
                                                                                                                        local.get 0
                                                                                                                        i32.const 568
                                                                                                                        i32.add
                                                                                                                        local.get 1
                                                                                                                        i32.const 24
                                                                                                                        i32.add
                                                                                                                        i64.load
                                                                                                                        i64.store
                                                                                                                        local.get 0
                                                                                                                        i32.const 560
                                                                                                                        i32.add
                                                                                                                        local.get 1
                                                                                                                        i32.const 16
                                                                                                                        i32.add
                                                                                                                        i64.load
                                                                                                                        i64.store
                                                                                                                        local.get 0
                                                                                                                        local.get 12
                                                                                                                        i64.store offset=584
                                                                                                                        local.get 0
                                                                                                                        local.get 16
                                                                                                                        i64.store offset=576
                                                                                                                        local.get 0
                                                                                                                        local.get 1
                                                                                                                        i32.const 8
                                                                                                                        i32.add
                                                                                                                        i64.load
                                                                                                                        i64.store offset=552
                                                                                                                        local.get 0
                                                                                                                        local.get 1
                                                                                                                        i64.load
                                                                                                                        i64.store offset=544
                                                                                                                        local.get 0
                                                                                                                        i32.const 544
                                                                                                                        i32.add
                                                                                                                        call 42
                                                                                                                        local.get 13
                                                                                                                        local.set 12
                                                                                                                        local.get 11
                                                                                                                        local.set 10
                                                                                                                        br 4 (;@54;)
                                                                                                                      end
                                                                                                                      local.get 4
                                                                                                                      i32.const 1
                                                                                                                      i32.and
                                                                                                                      br_if 1 (;@56;)
                                                                                                                      br 44 (;@13;)
                                                                                                                    end
                                                                                                                    local.get 4
                                                                                                                    i32.const 1
                                                                                                                    i32.and
                                                                                                                    i32.eqz
                                                                                                                    br_if 43 (;@13;)
                                                                                                                    local.get 0
                                                                                                                    i64.const -1
                                                                                                                    local.get 15
                                                                                                                    local.get 15
                                                                                                                    local.get 17
                                                                                                                    i64.const -1
                                                                                                                    i64.xor
                                                                                                                    local.tee 12
                                                                                                                    i64.add
                                                                                                                    local.tee 13
                                                                                                                    i64.gt_u
                                                                                                                    local.tee 2
                                                                                                                    i64.extend_i32_u
                                                                                                                    local.get 14
                                                                                                                    local.get 10
                                                                                                                    i64.const -1
                                                                                                                    i64.xor
                                                                                                                    local.tee 10
                                                                                                                    i64.add
                                                                                                                    i64.add
                                                                                                                    local.tee 11
                                                                                                                    local.get 2
                                                                                                                    local.get 11
                                                                                                                    local.get 14
                                                                                                                    i64.lt_u
                                                                                                                    local.get 11
                                                                                                                    local.get 14
                                                                                                                    i64.eq
                                                                                                                    select
                                                                                                                    local.tee 2
                                                                                                                    select
                                                                                                                    i64.store offset=488
                                                                                                                    local.get 0
                                                                                                                    i64.const -1
                                                                                                                    local.get 13
                                                                                                                    local.get 2
                                                                                                                    select
                                                                                                                    i64.store offset=480
                                                                                                                    i64.const -1
                                                                                                                    local.set 16
                                                                                                                    i64.const -1
                                                                                                                    br 1 (;@55;)
                                                                                                                  end
                                                                                                                  local.get 0
                                                                                                                  i64.const -1
                                                                                                                  i64.store offset=488
                                                                                                                  local.get 0
                                                                                                                  i64.const -1
                                                                                                                  i64.store offset=480
                                                                                                                  i64.const -1
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=160
                                                                                                                  local.tee 10
                                                                                                                  local.get 15
                                                                                                                  i64.const -1
                                                                                                                  i64.xor
                                                                                                                  local.tee 12
                                                                                                                  i64.add
                                                                                                                  local.tee 15
                                                                                                                  local.get 10
                                                                                                                  i64.lt_u
                                                                                                                  local.tee 2
                                                                                                                  i64.extend_i32_u
                                                                                                                  local.get 0
                                                                                                                  i64.load offset=168
                                                                                                                  local.tee 11
                                                                                                                  local.get 14
                                                                                                                  i64.const -1
                                                                                                                  i64.xor
                                                                                                                  local.tee 10
                                                                                                                  i64.add
                                                                                                                  i64.add
                                                                                                                  local.tee 13
                                                                                                                  local.get 2
                                                                                                                  local.get 11
                                                                                                                  local.get 13
                                                                                                                  i64.gt_u
                                                                                                                  local.get 11
                                                                                                                  local.get 13
                                                                                                                  i64.eq
                                                                                                                  select
                                                                                                                  local.tee 2
                                                                                                                  select
                                                                                                                  local.set 16
                                                                                                                  i64.const -1
                                                                                                                  local.get 15
                                                                                                                  local.get 2
                                                                                                                  select
                                                                                                                end
                                                                                                                i64.store offset=160
                                                                                                                local.get 0
                                                                                                                local.get 16
                                                                                                                i64.store offset=168
                                                                                                                local.get 0
                                                                                                                i64.const -1
                                                                                                                local.get 0
                                                                                                                i64.load offset=176
                                                                                                                local.tee 11
                                                                                                                local.get 12
                                                                                                                i64.add
                                                                                                                local.tee 13
                                                                                                                local.get 11
                                                                                                                local.get 13
                                                                                                                i64.gt_u
                                                                                                                local.tee 2
                                                                                                                local.get 2
                                                                                                                i64.extend_i32_u
                                                                                                                local.get 0
                                                                                                                i64.load offset=184
                                                                                                                local.tee 11
                                                                                                                local.get 10
                                                                                                                i64.add
                                                                                                                i64.add
                                                                                                                local.tee 13
                                                                                                                local.get 11
                                                                                                                i64.lt_u
                                                                                                                local.get 11
                                                                                                                local.get 13
                                                                                                                i64.eq
                                                                                                                select
                                                                                                                local.tee 2
                                                                                                                select
                                                                                                                i64.store offset=176
                                                                                                                local.get 0
                                                                                                                i64.const -1
                                                                                                                local.get 13
                                                                                                                local.get 2
                                                                                                                select
                                                                                                                i64.store offset=184
                                                                                                                local.get 3
                                                                                                                local.get 0
                                                                                                                i32.const 480
                                                                                                                i32.add
                                                                                                                call 28
                                                                                                              end
                                                                                                              local.get 0
                                                                                                              i32.const 288
                                                                                                              i32.add
                                                                                                              local.tee 1
                                                                                                              local.get 0
                                                                                                              i32.const 160
                                                                                                              i32.add
                                                                                                              i32.const 128
                                                                                                              memory.copy
                                                                                                              local.get 1
                                                                                                              call 62
                                                                                                              i32.const 0
                                                                                                              br 42 (;@11;)
                                                                                                            end
                                                                                                            local.get 0
                                                                                                            i64.load offset=104
                                                                                                            local.set 14
                                                                                                            local.get 0
                                                                                                            i64.load offset=96
                                                                                                            local.set 15
                                                                                                            local.get 0
                                                                                                            i32.const 288
                                                                                                            i32.add
                                                                                                            local.tee 2
                                                                                                            call 45
                                                                                                            local.get 2
                                                                                                            local.get 3
                                                                                                            call 51
                                                                                                            i32.eqz
                                                                                                            br_if 28 (;@24;)
                                                                                                            i32.const 6
                                                                                                            local.set 3
                                                                                                            i32.const 1
                                                                                                            br 29 (;@23;)
                                                                                                          end
                                                                                                          local.get 0
                                                                                                          i64.load offset=104
                                                                                                          local.set 13
                                                                                                          local.get 0
                                                                                                          i64.load offset=96
                                                                                                          local.set 12
                                                                                                          local.get 0
                                                                                                          i32.const 288
                                                                                                          i32.add
                                                                                                          local.tee 2
                                                                                                          call 45
                                                                                                          local.get 2
                                                                                                          local.get 3
                                                                                                          call 51
                                                                                                          i32.eqz
                                                                                                          br_if 25 (;@26;)
                                                                                                          i32.const 6
                                                                                                          local.set 3
                                                                                                          i32.const 1
                                                                                                          br 26 (;@25;)
                                                                                                        end
                                                                                                        local.get 0
                                                                                                        i64.load offset=104
                                                                                                        local.set 14
                                                                                                        local.get 0
                                                                                                        i64.load offset=96
                                                                                                        local.set 15
                                                                                                        local.get 0
                                                                                                        i32.const 288
                                                                                                        i32.add
                                                                                                        local.tee 2
                                                                                                        call 45
                                                                                                        local.get 2
                                                                                                        local.get 3
                                                                                                        call 51
                                                                                                        i32.eqz
                                                                                                        br_if 22 (;@28;)
                                                                                                        i32.const 6
                                                                                                        local.set 3
                                                                                                        i32.const 1
                                                                                                        br 23 (;@27;)
                                                                                                      end
                                                                                                      local.get 0
                                                                                                      i32.const 304
                                                                                                      i32.add
                                                                                                      local.tee 3
                                                                                                      local.get 1
                                                                                                      i32.const 48
                                                                                                      memory.copy
                                                                                                      local.get 0
                                                                                                      local.get 0
                                                                                                      i32.const 160
                                                                                                      i32.add
                                                                                                      local.tee 2
                                                                                                      i32.store offset=288
                                                                                                      local.get 2
                                                                                                      local.get 3
                                                                                                      local.get 0
                                                                                                      i64.load offset=336
                                                                                                      local.get 0
                                                                                                      i64.load offset=344
                                                                                                      call 70
                                                                                                      local.tee 1
                                                                                                      i32.const 255
                                                                                                      i32.and
                                                                                                      i32.const 7
                                                                                                      i32.eq
                                                                                                      if (result i32)  ;; label = @50
                                                                                                        local.get 0
                                                                                                        i32.const 288
                                                                                                        i32.add
                                                                                                        local.tee 0
                                                                                                        local.get 2
                                                                                                        i32.const 128
                                                                                                        memory.copy
                                                                                                        local.get 0
                                                                                                        call 62
                                                                                                        i32.const 0
                                                                                                      else
                                                                                                        i32.const 1
                                                                                                      end
                                                                                                      local.get 1
                                                                                                      call 57
                                                                                                      unreachable
                                                                                                    end
                                                                                                    local.get 0
                                                                                                    i32.const 304
                                                                                                    i32.add
                                                                                                    local.tee 2
                                                                                                    local.get 1
                                                                                                    i32.const 64
                                                                                                    memory.copy
                                                                                                    local.get 0
                                                                                                    local.get 0
                                                                                                    i32.const 160
                                                                                                    i32.add
                                                                                                    local.tee 1
                                                                                                    i32.store offset=288
                                                                                                    local.get 0
                                                                                                    i32.const 544
                                                                                                    i32.add
                                                                                                    local.tee 3
                                                                                                    local.get 1
                                                                                                    local.get 2
                                                                                                    local.get 0
                                                                                                    i64.load offset=336
                                                                                                    local.get 0
                                                                                                    i64.load offset=344
                                                                                                    local.get 0
                                                                                                    i32.load8_u offset=353
                                                                                                    local.get 0
                                                                                                    i32.load8_u offset=352
                                                                                                    call 71
                                                                                                    local.get 0
                                                                                                    i32.load8_u offset=544
                                                                                                    i32.eqz
                                                                                                    br_if 44 (;@4;)
                                                                                                    i32.const 1
                                                                                                    local.get 3
                                                                                                    call 61
                                                                                                    unreachable
                                                                                                  end
                                                                                                  local.get 0
                                                                                                  local.get 0
                                                                                                  i32.const 160
                                                                                                  i32.add
                                                                                                  i32.store offset=288
                                                                                                  local.get 0
                                                                                                  i32.const 304
                                                                                                  i32.add
                                                                                                  local.tee 2
                                                                                                  local.get 1
                                                                                                  i32.const 48
                                                                                                  memory.copy
                                                                                                  local.get 0
                                                                                                  i64.load offset=336
                                                                                                  local.tee 12
                                                                                                  local.get 0
                                                                                                  i64.load offset=344
                                                                                                  local.tee 10
                                                                                                  i64.or
                                                                                                  i64.eqz
                                                                                                  br_if 17 (;@30;)
                                                                                                  local.get 0
                                                                                                  i32.const 480
                                                                                                  i32.add
                                                                                                  local.get 2
                                                                                                  call 52
                                                                                                  block  ;; label = @48
                                                                                                    local.get 0
                                                                                                    i64.load offset=480
                                                                                                    local.tee 13
                                                                                                    local.get 0
                                                                                                    i64.load offset=488
                                                                                                    local.tee 11
                                                                                                    i64.or
                                                                                                    i64.eqz
                                                                                                    if  ;; label = @49
                                                                                                      i32.const 1
                                                                                                      local.set 3
                                                                                                      local.get 12
                                                                                                      local.get 0
                                                                                                      i64.load offset=192
                                                                                                      i64.lt_u
                                                                                                      local.get 10
                                                                                                      local.get 0
                                                                                                      i64.load offset=200
                                                                                                      local.tee 14
                                                                                                      i64.lt_u
                                                                                                      local.get 10
                                                                                                      local.get 14
                                                                                                      i64.eq
                                                                                                      select
                                                                                                      br_if 1 (;@48;)
                                                                                                    end
                                                                                                    i32.const 4
                                                                                                    local.set 3
                                                                                                    local.get 0
                                                                                                    i64.load offset=160
                                                                                                    local.tee 14
                                                                                                    local.get 12
                                                                                                    i64.add
                                                                                                    local.tee 16
                                                                                                    local.get 14
                                                                                                    i64.lt_u
                                                                                                    local.tee 4
                                                                                                    local.get 4
                                                                                                    i64.extend_i32_u
                                                                                                    local.get 0
                                                                                                    i64.load offset=168
                                                                                                    local.tee 14
                                                                                                    local.get 10
                                                                                                    i64.add
                                                                                                    i64.add
                                                                                                    local.tee 15
                                                                                                    local.get 14
                                                                                                    i64.lt_u
                                                                                                    local.get 14
                                                                                                    local.get 15
                                                                                                    i64.eq
                                                                                                    select
                                                                                                    br_if 0 (;@48;)
                                                                                                    local.get 0
                                                                                                    local.get 16
                                                                                                    i64.store offset=160
                                                                                                    local.get 0
                                                                                                    local.get 15
                                                                                                    i64.store offset=168
                                                                                                    local.get 0
                                                                                                    i64.load offset=176
                                                                                                    local.tee 14
                                                                                                    local.get 12
                                                                                                    i64.add
                                                                                                    local.tee 16
                                                                                                    local.get 14
                                                                                                    i64.lt_u
                                                                                                    local.tee 4
                                                                                                    local.get 4
                                                                                                    i64.extend_i32_u
                                                                                                    local.get 0
                                                                                                    i64.load offset=184
                                                                                                    local.tee 14
                                                                                                    local.get 10
                                                                                                    i64.add
                                                                                                    i64.add
                                                                                                    local.tee 15
                                                                                                    local.get 14
                                                                                                    i64.lt_u
                                                                                                    local.get 14
                                                                                                    local.get 15
                                                                                                    i64.eq
                                                                                                    select
                                                                                                    br_if 0 (;@48;)
                                                                                                    local.get 0
                                                                                                    local.get 16
                                                                                                    i64.store offset=176
                                                                                                    local.get 0
                                                                                                    local.get 15
                                                                                                    i64.store offset=184
                                                                                                    local.get 12
                                                                                                    local.get 13
                                                                                                    i64.add
                                                                                                    local.tee 14
                                                                                                    local.get 13
                                                                                                    i64.lt_u
                                                                                                    local.tee 4
                                                                                                    local.get 4
                                                                                                    i64.extend_i32_u
                                                                                                    local.get 10
                                                                                                    local.get 11
                                                                                                    i64.add
                                                                                                    i64.add
                                                                                                    local.tee 13
                                                                                                    local.get 11
                                                                                                    i64.lt_u
                                                                                                    local.get 11
                                                                                                    local.get 13
                                                                                                    i64.eq
                                                                                                    select
                                                                                                    i32.const 1
                                                                                                    i32.ne
                                                                                                    br_if 17 (;@31;)
                                                                                                  end
                                                                                                  i32.const 1
                                                                                                  br 18 (;@29;)
                                                                                                end
                                                                                                local.get 0
                                                                                                local.get 0
                                                                                                i32.const 160
                                                                                                i32.add
                                                                                                i32.store offset=288
                                                                                                local.get 0
                                                                                                i32.const 304
                                                                                                i32.add
                                                                                                local.tee 2
                                                                                                local.get 1
                                                                                                i32.const 48
                                                                                                memory.copy
                                                                                                local.get 0
                                                                                                i64.load offset=336
                                                                                                local.tee 10
                                                                                                local.get 0
                                                                                                i64.load offset=344
                                                                                                local.tee 12
                                                                                                i64.or
                                                                                                i64.eqz
                                                                                                br_if 13 (;@33;)
                                                                                                local.get 0
                                                                                                i32.const 480
                                                                                                i32.add
                                                                                                local.get 2
                                                                                                call 52
                                                                                                local.get 0
                                                                                                i64.load offset=480
                                                                                                local.tee 11
                                                                                                local.get 10
                                                                                                i64.ge_u
                                                                                                local.get 0
                                                                                                i64.load offset=488
                                                                                                local.tee 13
                                                                                                local.get 12
                                                                                                i64.ge_u
                                                                                                local.get 12
                                                                                                local.get 13
                                                                                                i64.eq
                                                                                                select
                                                                                                br_if 12 (;@34;)
                                                                                                i32.const 0
                                                                                                local.set 3
                                                                                                i32.const 1
                                                                                                br 14 (;@32;)
                                                                                              end
                                                                                              local.get 0
                                                                                              i32.const 560
                                                                                              i32.add
                                                                                              local.set 4
                                                                                              global.get 0
                                                                                              i32.const 112
                                                                                              i32.sub
                                                                                              local.tee 3
                                                                                              global.set 0
                                                                                              local.get 3
                                                                                              local.get 0
                                                                                              i32.const 160
                                                                                              i32.add
                                                                                              local.tee 2
                                                                                              i32.store
                                                                                              local.get 3
                                                                                              i32.const 16
                                                                                              i32.add
                                                                                              local.tee 5
                                                                                              local.get 1
                                                                                              i32.const 48
                                                                                              memory.copy
                                                                                              local.get 3
                                                                                              i64.load offset=48
                                                                                              local.set 11
                                                                                              local.get 3
                                                                                              i64.load offset=56
                                                                                              local.set 13
                                                                                              local.get 3
                                                                                              i32.const -64
                                                                                              i32.sub
                                                                                              local.get 5
                                                                                              call 52
                                                                                              block  ;; label = @46
                                                                                                local.get 11
                                                                                                local.get 3
                                                                                                i64.load offset=64
                                                                                                local.tee 10
                                                                                                i64.xor
                                                                                                local.get 13
                                                                                                local.get 3
                                                                                                i64.load offset=72
                                                                                                local.tee 12
                                                                                                i64.xor
                                                                                                i64.or
                                                                                                i64.eqz
                                                                                                i32.eqz
                                                                                                if  ;; label = @47
                                                                                                  local.get 2
                                                                                                  i64.load offset=8
                                                                                                  local.set 14
                                                                                                  local.get 2
                                                                                                  i64.load
                                                                                                  local.set 15
                                                                                                  block  ;; label = @48
                                                                                                    local.get 10
                                                                                                    local.get 11
                                                                                                    i64.ge_u
                                                                                                    local.get 12
                                                                                                    local.get 13
                                                                                                    i64.ge_u
                                                                                                    local.get 12
                                                                                                    local.get 13
                                                                                                    i64.eq
                                                                                                    select
                                                                                                    i32.eqz
                                                                                                    if  ;; label = @49
                                                                                                      local.get 15
                                                                                                      local.get 15
                                                                                                      local.get 11
                                                                                                      local.get 10
                                                                                                      i64.sub
                                                                                                      local.tee 16
                                                                                                      i64.add
                                                                                                      local.tee 18
                                                                                                      i64.gt_u
                                                                                                      local.tee 1
                                                                                                      local.get 1
                                                                                                      i64.extend_i32_u
                                                                                                      local.get 14
                                                                                                      local.get 13
                                                                                                      local.get 12
                                                                                                      i64.sub
                                                                                                      local.get 10
                                                                                                      local.get 11
                                                                                                      i64.gt_u
                                                                                                      i64.extend_i32_u
                                                                                                      i64.sub
                                                                                                      local.tee 15
                                                                                                      i64.add
                                                                                                      i64.add
                                                                                                      local.tee 17
                                                                                                      local.get 14
                                                                                                      i64.lt_u
                                                                                                      local.get 14
                                                                                                      local.get 17
                                                                                                      i64.eq
                                                                                                      select
                                                                                                      br_if 3 (;@46;)
                                                                                                      local.get 10
                                                                                                      local.get 16
                                                                                                      i64.add
                                                                                                      local.get 10
                                                                                                      i64.lt_u
                                                                                                      local.tee 1
                                                                                                      local.get 1
                                                                                                      i64.extend_i32_u
                                                                                                      local.get 12
                                                                                                      local.get 15
                                                                                                      i64.add
                                                                                                      i64.add
                                                                                                      local.tee 14
                                                                                                      local.get 12
                                                                                                      i64.lt_u
                                                                                                      local.get 12
                                                                                                      local.get 14
                                                                                                      i64.eq
                                                                                                      select
                                                                                                      br_if 3 (;@46;)
                                                                                                      local.get 2
                                                                                                      local.get 18
                                                                                                      i64.store
                                                                                                      local.get 2
                                                                                                      local.get 17
                                                                                                      i64.store offset=8
                                                                                                      local.get 2
                                                                                                      i64.const -1
                                                                                                      local.get 2
                                                                                                      i64.load offset=16
                                                                                                      local.tee 10
                                                                                                      local.get 16
                                                                                                      i64.add
                                                                                                      local.tee 12
                                                                                                      local.get 10
                                                                                                      local.get 12
                                                                                                      i64.gt_u
                                                                                                      local.tee 1
                                                                                                      local.get 1
                                                                                                      i64.extend_i32_u
                                                                                                      local.get 2
                                                                                                      i64.load offset=24
                                                                                                      local.tee 10
                                                                                                      local.get 15
                                                                                                      i64.add
                                                                                                      i64.add
                                                                                                      local.tee 12
                                                                                                      local.get 10
                                                                                                      i64.lt_u
                                                                                                      local.get 10
                                                                                                      local.get 12
                                                                                                      i64.eq
                                                                                                      select
                                                                                                      local.tee 1
                                                                                                      select
                                                                                                      i64.store offset=16
                                                                                                      local.get 2
                                                                                                      i64.const -1
                                                                                                      local.get 12
                                                                                                      local.get 1
                                                                                                      select
                                                                                                      i64.store offset=24
                                                                                                      br 1 (;@48;)
                                                                                                    end
                                                                                                    local.get 2
                                                                                                    i64.const 0
                                                                                                    local.get 14
                                                                                                    local.get 12
                                                                                                    local.get 13
                                                                                                    i64.sub
                                                                                                    local.get 10
                                                                                                    local.get 11
                                                                                                    i64.lt_u
                                                                                                    i64.extend_i32_u
                                                                                                    i64.sub
                                                                                                    local.tee 16
                                                                                                    i64.sub
                                                                                                    local.get 15
                                                                                                    local.get 10
                                                                                                    local.get 11
                                                                                                    i64.sub
                                                                                                    local.tee 10
                                                                                                    i64.lt_u
                                                                                                    i64.extend_i32_u
                                                                                                    i64.sub
                                                                                                    local.tee 12
                                                                                                    local.get 15
                                                                                                    local.get 15
                                                                                                    local.get 10
                                                                                                    i64.sub
                                                                                                    local.tee 17
                                                                                                    i64.lt_u
                                                                                                    local.get 12
                                                                                                    local.get 14
                                                                                                    i64.gt_u
                                                                                                    local.get 12
                                                                                                    local.get 14
                                                                                                    i64.eq
                                                                                                    select
                                                                                                    local.tee 1
                                                                                                    select
                                                                                                    i64.store offset=8
                                                                                                    local.get 2
                                                                                                    i64.const 0
                                                                                                    local.get 17
                                                                                                    local.get 1
                                                                                                    select
                                                                                                    i64.store
                                                                                                    local.get 2
                                                                                                    i64.const 0
                                                                                                    local.get 2
                                                                                                    i64.load offset=16
                                                                                                    local.tee 12
                                                                                                    local.get 10
                                                                                                    i64.sub
                                                                                                    local.tee 14
                                                                                                    local.get 12
                                                                                                    local.get 14
                                                                                                    i64.lt_u
                                                                                                    local.get 2
                                                                                                    i64.load offset=24
                                                                                                    local.tee 14
                                                                                                    local.get 16
                                                                                                    i64.sub
                                                                                                    local.get 10
                                                                                                    local.get 12
                                                                                                    i64.gt_u
                                                                                                    i64.extend_i32_u
                                                                                                    i64.sub
                                                                                                    local.tee 10
                                                                                                    local.get 14
                                                                                                    i64.gt_u
                                                                                                    local.get 10
                                                                                                    local.get 14
                                                                                                    i64.eq
                                                                                                    select
                                                                                                    local.tee 1
                                                                                                    select
                                                                                                    i64.store offset=16
                                                                                                    local.get 2
                                                                                                    i64.const 0
                                                                                                    local.get 10
                                                                                                    local.get 1
                                                                                                    select
                                                                                                    i64.store offset=24
                                                                                                  end
                                                                                                  local.get 3
                                                                                                  local.get 11
                                                                                                  i64.store offset=64
                                                                                                  local.get 3
                                                                                                  local.get 13
                                                                                                  i64.store offset=72
                                                                                                  local.get 5
                                                                                                  local.get 3
                                                                                                  i32.const -64
                                                                                                  i32.sub
                                                                                                  call 28
                                                                                                end
                                                                                                local.get 11
                                                                                                local.set 10
                                                                                                local.get 13
                                                                                                local.set 12
                                                                                              end
                                                                                              local.get 4
                                                                                              local.get 10
                                                                                              i64.store
                                                                                              local.get 4
                                                                                              local.get 12
                                                                                              i64.store offset=8
                                                                                              local.get 3
                                                                                              i32.const 112
                                                                                              i32.add
                                                                                              global.set 0
                                                                                              local.get 0
                                                                                              i32.const 288
                                                                                              i32.add
                                                                                              local.tee 1
                                                                                              local.get 2
                                                                                              i32.const 128
                                                                                              memory.copy
                                                                                              local.get 1
                                                                                              call 62
                                                                                              local.get 0
                                                                                              i64.load offset=560
                                                                                              local.get 0
                                                                                              i64.load offset=568
                                                                                              call 60
                                                                                              unreachable
                                                                                            end
                                                                                            local.get 0
                                                                                            i32.const 304
                                                                                            i32.add
                                                                                            local.tee 3
                                                                                            local.get 1
                                                                                            i32.const 48
                                                                                            memory.copy
                                                                                            local.get 0
                                                                                            local.get 0
                                                                                            i32.const 160
                                                                                            i32.add
                                                                                            local.tee 2
                                                                                            i32.store offset=288
                                                                                            local.get 0
                                                                                            i64.load offset=344
                                                                                            local.set 10
                                                                                            local.get 0
                                                                                            i64.load offset=336
                                                                                            local.set 12
                                                                                            local.get 0
                                                                                            i32.const 544
                                                                                            i32.add
                                                                                            local.tee 1
                                                                                            call 45
                                                                                            local.get 2
                                                                                            local.get 1
                                                                                            local.get 3
                                                                                            local.get 12
                                                                                            local.get 10
                                                                                            i32.const 0
                                                                                            call 72
                                                                                            i32.const 255
                                                                                            i32.and
                                                                                            local.tee 1
                                                                                            i32.const 7
                                                                                            i32.eq
                                                                                            if (result i32)  ;; label = @45
                                                                                              local.get 0
                                                                                              i32.const 288
                                                                                              i32.add
                                                                                              local.tee 0
                                                                                              local.get 2
                                                                                              i32.const 128
                                                                                              memory.copy
                                                                                              local.get 0
                                                                                              call 62
                                                                                              i32.const 0
                                                                                            else
                                                                                              i32.const 1
                                                                                            end
                                                                                            local.get 1
                                                                                            call 57
                                                                                            unreachable
                                                                                          end
                                                                                          local.get 0
                                                                                          i32.const 304
                                                                                          i32.add
                                                                                          local.tee 3
                                                                                          local.get 1
                                                                                          i32.const 48
                                                                                          memory.copy
                                                                                          local.get 0
                                                                                          local.get 0
                                                                                          i32.const 160
                                                                                          i32.add
                                                                                          local.tee 2
                                                                                          i32.store offset=288
                                                                                          local.get 0
                                                                                          i64.load offset=344
                                                                                          local.set 10
                                                                                          local.get 0
                                                                                          i64.load offset=336
                                                                                          local.set 12
                                                                                          local.get 0
                                                                                          i32.const 544
                                                                                          i32.add
                                                                                          local.tee 1
                                                                                          call 45
                                                                                          local.get 2
                                                                                          local.get 1
                                                                                          local.get 3
                                                                                          local.get 12
                                                                                          local.get 10
                                                                                          i32.const 1
                                                                                          call 72
                                                                                          i32.const 255
                                                                                          i32.and
                                                                                          local.tee 1
                                                                                          i32.const 7
                                                                                          i32.eq
                                                                                          if (result i32)  ;; label = @44
                                                                                            local.get 0
                                                                                            i32.const 288
                                                                                            i32.add
                                                                                            local.tee 0
                                                                                            local.get 2
                                                                                            i32.const 128
                                                                                            memory.copy
                                                                                            local.get 0
                                                                                            call 62
                                                                                            i32.const 0
                                                                                          else
                                                                                            i32.const 1
                                                                                          end
                                                                                          local.get 1
                                                                                          call 57
                                                                                          unreachable
                                                                                        end
                                                                                        local.get 0
                                                                                        i32.const 304
                                                                                        i32.add
                                                                                        local.tee 3
                                                                                        local.get 1
                                                                                        i32.const 64
                                                                                        memory.copy
                                                                                        local.get 0
                                                                                        local.get 0
                                                                                        i32.const 160
                                                                                        i32.add
                                                                                        local.tee 2
                                                                                        i32.store offset=288
                                                                                        local.get 0
                                                                                        i64.load offset=344
                                                                                        local.set 10
                                                                                        local.get 0
                                                                                        i64.load offset=336
                                                                                        local.set 12
                                                                                        local.get 0
                                                                                        i32.load8_u offset=352
                                                                                        local.set 1
                                                                                        local.get 0
                                                                                        i32.const 544
                                                                                        i32.add
                                                                                        local.tee 4
                                                                                        call 45
                                                                                        local.get 2
                                                                                        local.get 4
                                                                                        local.get 3
                                                                                        local.get 12
                                                                                        local.get 10
                                                                                        local.get 1
                                                                                        call 72
                                                                                        i32.const 255
                                                                                        i32.and
                                                                                        local.tee 1
                                                                                        i32.const 7
                                                                                        i32.eq
                                                                                        if (result i32)  ;; label = @43
                                                                                          local.get 0
                                                                                          i32.const 288
                                                                                          i32.add
                                                                                          local.tee 0
                                                                                          local.get 2
                                                                                          i32.const 128
                                                                                          memory.copy
                                                                                          local.get 0
                                                                                          call 62
                                                                                          i32.const 0
                                                                                        else
                                                                                          i32.const 1
                                                                                        end
                                                                                        local.get 1
                                                                                        call 57
                                                                                        unreachable
                                                                                      end
                                                                                      local.get 0
                                                                                      local.get 0
                                                                                      i32.const 160
                                                                                      i32.add
                                                                                      i32.store offset=288
                                                                                      local.get 0
                                                                                      i32.const 304
                                                                                      i32.add
                                                                                      local.tee 2
                                                                                      local.get 1
                                                                                      i32.const 48
                                                                                      memory.copy
                                                                                      local.get 0
                                                                                      i64.load offset=336
                                                                                      local.tee 12
                                                                                      local.get 0
                                                                                      i64.load offset=344
                                                                                      local.tee 10
                                                                                      i64.or
                                                                                      i64.eqz
                                                                                      br_if 5 (;@36;)
                                                                                      local.get 0
                                                                                      i32.const 480
                                                                                      i32.add
                                                                                      local.get 2
                                                                                      call 52
                                                                                      i32.const 0
                                                                                      local.set 3
                                                                                      block  ;; label = @42
                                                                                        local.get 0
                                                                                        i64.load offset=480
                                                                                        local.tee 13
                                                                                        local.get 12
                                                                                        i64.lt_u
                                                                                        local.tee 4
                                                                                        local.get 0
                                                                                        i64.load offset=488
                                                                                        local.tee 11
                                                                                        local.get 10
                                                                                        i64.lt_u
                                                                                        local.get 10
                                                                                        local.get 11
                                                                                        i64.eq
                                                                                        select
                                                                                        br_if 0 (;@42;)
                                                                                        i64.const 0
                                                                                        local.get 13
                                                                                        local.get 0
                                                                                        i64.load offset=512
                                                                                        local.tee 14
                                                                                        i64.sub
                                                                                        local.tee 15
                                                                                        local.get 13
                                                                                        local.get 15
                                                                                        i64.lt_u
                                                                                        local.get 11
                                                                                        local.get 0
                                                                                        i64.load offset=520
                                                                                        i64.sub
                                                                                        local.get 13
                                                                                        local.get 14
                                                                                        i64.lt_u
                                                                                        i64.extend_i32_u
                                                                                        i64.sub
                                                                                        local.tee 14
                                                                                        local.get 11
                                                                                        i64.gt_u
                                                                                        local.get 11
                                                                                        local.get 14
                                                                                        i64.eq
                                                                                        select
                                                                                        local.tee 5
                                                                                        select
                                                                                        local.get 12
                                                                                        i64.lt_u
                                                                                        i64.const 0
                                                                                        local.get 14
                                                                                        local.get 5
                                                                                        select
                                                                                        local.tee 14
                                                                                        local.get 10
                                                                                        i64.lt_u
                                                                                        local.get 10
                                                                                        local.get 14
                                                                                        i64.eq
                                                                                        select
                                                                                        br_if 0 (;@42;)
                                                                                        local.get 0
                                                                                        local.get 13
                                                                                        local.get 12
                                                                                        i64.sub
                                                                                        i64.store offset=480
                                                                                        local.get 0
                                                                                        local.get 11
                                                                                        local.get 10
                                                                                        i64.sub
                                                                                        local.get 4
                                                                                        i64.extend_i32_u
                                                                                        i64.sub
                                                                                        i64.store offset=488
                                                                                        i32.const 4
                                                                                        local.set 3
                                                                                        local.get 0
                                                                                        i64.load offset=496
                                                                                        local.tee 11
                                                                                        local.get 12
                                                                                        i64.add
                                                                                        local.tee 14
                                                                                        local.get 11
                                                                                        i64.lt_u
                                                                                        local.tee 4
                                                                                        local.get 4
                                                                                        i64.extend_i32_u
                                                                                        local.get 0
                                                                                        i64.load offset=504
                                                                                        local.tee 11
                                                                                        local.get 10
                                                                                        i64.add
                                                                                        i64.add
                                                                                        local.tee 13
                                                                                        local.get 11
                                                                                        i64.lt_u
                                                                                        local.get 11
                                                                                        local.get 13
                                                                                        i64.eq
                                                                                        select
                                                                                        i32.const 1
                                                                                        i32.ne
                                                                                        br_if 5 (;@37;)
                                                                                      end
                                                                                      i32.const 1
                                                                                      br 6 (;@35;)
                                                                                    end
                                                                                    local.get 0
                                                                                    local.get 0
                                                                                    i32.const 160
                                                                                    i32.add
                                                                                    i32.store offset=288
                                                                                    local.get 0
                                                                                    i32.const 304
                                                                                    i32.add
                                                                                    local.tee 2
                                                                                    local.get 1
                                                                                    i32.const 48
                                                                                    memory.copy
                                                                                    i64.const 0
                                                                                    local.set 12
                                                                                    i64.const 0
                                                                                    local.set 10
                                                                                    block (result i32)  ;; label = @41
                                                                                      block  ;; label = @42
                                                                                        local.get 0
                                                                                        i64.load offset=336
                                                                                        local.tee 11
                                                                                        local.get 0
                                                                                        i64.load offset=344
                                                                                        local.tee 14
                                                                                        i64.or
                                                                                        i64.eqz
                                                                                        i32.eqz
                                                                                        if  ;; label = @43
                                                                                          local.get 0
                                                                                          i32.const 480
                                                                                          i32.add
                                                                                          local.tee 3
                                                                                          local.get 2
                                                                                          call 52
                                                                                          local.get 0
                                                                                          i64.const 0
                                                                                          local.get 0
                                                                                          i64.load offset=496
                                                                                          local.tee 13
                                                                                          local.get 13
                                                                                          local.get 11
                                                                                          local.get 11
                                                                                          local.get 13
                                                                                          i64.gt_u
                                                                                          local.get 0
                                                                                          i64.load offset=504
                                                                                          local.tee 11
                                                                                          local.get 14
                                                                                          i64.lt_u
                                                                                          local.get 11
                                                                                          local.get 14
                                                                                          i64.eq
                                                                                          select
                                                                                          local.tee 4
                                                                                          select
                                                                                          local.tee 12
                                                                                          i64.sub
                                                                                          local.tee 10
                                                                                          local.get 10
                                                                                          local.get 13
                                                                                          i64.gt_u
                                                                                          local.get 11
                                                                                          local.get 11
                                                                                          local.get 14
                                                                                          local.get 4
                                                                                          select
                                                                                          local.tee 10
                                                                                          i64.sub
                                                                                          local.get 12
                                                                                          local.get 13
                                                                                          i64.gt_u
                                                                                          i64.extend_i32_u
                                                                                          i64.sub
                                                                                          local.tee 13
                                                                                          local.get 11
                                                                                          i64.gt_u
                                                                                          local.get 11
                                                                                          local.get 13
                                                                                          i64.eq
                                                                                          select
                                                                                          local.tee 4
                                                                                          select
                                                                                          i64.store offset=496
                                                                                          local.get 0
                                                                                          i64.const 0
                                                                                          local.get 13
                                                                                          local.get 4
                                                                                          select
                                                                                          i64.store offset=504
                                                                                          local.get 0
                                                                                          i64.load offset=480
                                                                                          local.tee 11
                                                                                          local.get 12
                                                                                          i64.add
                                                                                          local.tee 14
                                                                                          local.get 11
                                                                                          i64.lt_u
                                                                                          local.tee 4
                                                                                          local.get 4
                                                                                          i64.extend_i32_u
                                                                                          local.get 0
                                                                                          i64.load offset=488
                                                                                          local.tee 11
                                                                                          local.get 10
                                                                                          i64.add
                                                                                          i64.add
                                                                                          local.tee 13
                                                                                          local.get 11
                                                                                          i64.lt_u
                                                                                          local.get 11
                                                                                          local.get 13
                                                                                          i64.eq
                                                                                          select
                                                                                          br_if 1 (;@42;)
                                                                                          local.get 0
                                                                                          local.get 14
                                                                                          i64.store offset=480
                                                                                          local.get 0
                                                                                          local.get 13
                                                                                          i64.store offset=488
                                                                                          local.get 2
                                                                                          local.get 3
                                                                                          call 28
                                                                                          local.get 0
                                                                                          i32.const 568
                                                                                          i32.add
                                                                                          local.get 1
                                                                                          i32.const 24
                                                                                          i32.add
                                                                                          i64.load
                                                                                          i64.store
                                                                                          local.get 0
                                                                                          i32.const 560
                                                                                          i32.add
                                                                                          local.get 1
                                                                                          i32.const 16
                                                                                          i32.add
                                                                                          i64.load
                                                                                          i64.store
                                                                                          local.get 0
                                                                                          local.get 10
                                                                                          i64.store offset=584
                                                                                          local.get 0
                                                                                          local.get 12
                                                                                          i64.store offset=576
                                                                                          local.get 0
                                                                                          local.get 1
                                                                                          i32.const 8
                                                                                          i32.add
                                                                                          i64.load
                                                                                          i64.store offset=552
                                                                                          local.get 0
                                                                                          local.get 1
                                                                                          i64.load
                                                                                          i64.store offset=544
                                                                                          local.get 0
                                                                                          i64.const 16384
                                                                                          i64.store offset=456 align=4
                                                                                          local.get 0
                                                                                          i32.const 69258
                                                                                          i32.store offset=452
                                                                                          local.get 0
                                                                                          i32.const 452
                                                                                          i32.add
                                                                                          local.tee 2
                                                                                          i32.const 2
                                                                                          call 39
                                                                                          local.get 2
                                                                                          i32.const 67685
                                                                                          call 34
                                                                                          local.get 0
                                                                                          i32.const 624
                                                                                          i32.add
                                                                                          local.tee 1
                                                                                          local.get 2
                                                                                          local.get 0
                                                                                          i32.const 544
                                                                                          i32.add
                                                                                          local.tee 3
                                                                                          call 43
                                                                                          local.get 0
                                                                                          i32.const 592
                                                                                          i32.add
                                                                                          local.tee 2
                                                                                          local.get 1
                                                                                          call 44
                                                                                          local.get 0
                                                                                          i32.const 632
                                                                                          i32.add
                                                                                          local.get 0
                                                                                          i32.const 600
                                                                                          i32.add
                                                                                          i32.load
                                                                                          i32.store
                                                                                          local.get 0
                                                                                          local.get 0
                                                                                          i64.load offset=592 align=4
                                                                                          local.tee 11
                                                                                          i64.store offset=624
                                                                                          local.get 0
                                                                                          i32.load offset=604
                                                                                          local.set 4
                                                                                          local.get 0
                                                                                          i32.load offset=608
                                                                                          local.set 5
                                                                                          local.get 0
                                                                                          i32.const 0
                                                                                          i32.store offset=600
                                                                                          local.get 0
                                                                                          local.get 11
                                                                                          i64.store offset=592 align=4
                                                                                          local.get 3
                                                                                          local.get 2
                                                                                          call 36
                                                                                          local.get 12
                                                                                          local.get 10
                                                                                          local.get 2
                                                                                          call 33
                                                                                          local.get 0
                                                                                          local.get 0
                                                                                          i64.load offset=592 align=4
                                                                                          i64.store offset=624
                                                                                          local.get 0
                                                                                          i32.const 24
                                                                                          i32.add
                                                                                          local.get 1
                                                                                          local.get 0
                                                                                          i32.load offset=600
                                                                                          call 22
                                                                                          local.get 4
                                                                                          local.get 5
                                                                                          local.get 0
                                                                                          i32.load offset=24
                                                                                          local.get 0
                                                                                          i32.load offset=28
                                                                                          call 2
                                                                                        end
                                                                                        local.get 0
                                                                                        i32.const 288
                                                                                        i32.add
                                                                                        local.tee 2
                                                                                        local.get 0
                                                                                        i32.const 160
                                                                                        i32.add
                                                                                        i32.const 128
                                                                                        memory.copy
                                                                                        local.get 2
                                                                                        call 62
                                                                                        i32.const 0
                                                                                        br 1 (;@41;)
                                                                                      end
                                                                                      i32.const 1
                                                                                    end
                                                                                    local.set 3
                                                                                    local.get 0
                                                                                    local.get 12
                                                                                    i64.store offset=304
                                                                                    local.get 0
                                                                                    i32.const 4
                                                                                    i32.store8 offset=289
                                                                                    br 34 (;@6;)
                                                                                  end
                                                                                  local.get 0
                                                                                  local.get 0
                                                                                  i32.const 160
                                                                                  i32.add
                                                                                  i32.store offset=288
                                                                                  local.get 0
                                                                                  i32.const 304
                                                                                  i32.add
                                                                                  local.tee 4
                                                                                  local.get 1
                                                                                  i32.const 64
                                                                                  memory.copy
                                                                                  local.get 0
                                                                                  i64.load offset=360
                                                                                  local.set 10
                                                                                  local.get 0
                                                                                  i64.load offset=352
                                                                                  local.set 12
                                                                                  local.get 0
                                                                                  i64.load offset=336
                                                                                  local.set 11
                                                                                  local.get 0
                                                                                  i32.const 544
                                                                                  i32.add
                                                                                  local.get 4
                                                                                  call 20
                                                                                  block (result i32)  ;; label = @40
                                                                                    local.get 0
                                                                                    i32.load offset=544
                                                                                    i32.const -2147483648
                                                                                    i32.ne
                                                                                    if  ;; label = @41
                                                                                      local.get 0
                                                                                      i32.const 472
                                                                                      i32.add
                                                                                      local.get 0
                                                                                      i32.const 552
                                                                                      i32.add
                                                                                      i32.load
                                                                                      local.tee 6
                                                                                      i32.store
                                                                                      local.get 0
                                                                                      local.get 0
                                                                                      i64.load offset=544 align=4
                                                                                      i64.store offset=464
                                                                                      local.get 0
                                                                                      i32.load offset=468
                                                                                      br 1 (;@40;)
                                                                                    end
                                                                                    i32.const 0
                                                                                    local.set 6
                                                                                    local.get 0
                                                                                    i32.const 0
                                                                                    i32.store offset=472
                                                                                    local.get 0
                                                                                    i64.const 68719476736
                                                                                    i64.store offset=464
                                                                                    i32.const 16
                                                                                  end
                                                                                  local.set 5
                                                                                  local.get 6
                                                                                  i32.const 5
                                                                                  i32.shl
                                                                                  local.set 2
                                                                                  i32.const 0
                                                                                  local.set 3
                                                                                  block  ;; label = @40
                                                                                    loop  ;; label = @41
                                                                                      local.get 2
                                                                                      local.get 3
                                                                                      i32.eq
                                                                                      br_if 1 (;@40;)
                                                                                      local.get 3
                                                                                      local.get 5
                                                                                      i32.add
                                                                                      local.set 7
                                                                                      local.get 3
                                                                                      i32.const 32
                                                                                      i32.add
                                                                                      local.set 3
                                                                                      local.get 7
                                                                                      i32.const 16
                                                                                      i32.add
                                                                                      i64.load align=1
                                                                                      local.get 11
                                                                                      i64.ne
                                                                                      br_if 0 (;@41;)
                                                                                    end
                                                                                    local.get 3
                                                                                    local.get 5
                                                                                    i32.add
                                                                                    i32.const 32
                                                                                    i32.sub
                                                                                    local.tee 2
                                                                                    local.get 10
                                                                                    i64.store offset=8
                                                                                    local.get 2
                                                                                    local.get 12
                                                                                    i64.store
                                                                                    br 25 (;@15;)
                                                                                  end
                                                                                  local.get 6
                                                                                  local.get 0
                                                                                  i32.load offset=240
                                                                                  i32.lt_u
                                                                                  br_if 23 (;@16;)
                                                                                  i32.const 5
                                                                                  local.set 3
                                                                                  i32.const 1
                                                                                  br 25 (;@14;)
                                                                                end
                                                                                local.get 0
                                                                                local.get 0
                                                                                i32.const 160
                                                                                i32.add
                                                                                i32.store offset=480
                                                                                local.get 0
                                                                                i32.const 484
                                                                                i32.add
                                                                                local.tee 7
                                                                                local.get 6
                                                                                i32.const 40
                                                                                memory.copy
                                                                                local.get 0
                                                                                i64.load offset=516 align=4
                                                                                local.set 10
                                                                                local.get 0
                                                                                i32.const 288
                                                                                i32.add
                                                                                local.get 7
                                                                                call 20
                                                                                local.get 0
                                                                                i32.load offset=288
                                                                                i32.const -2147483648
                                                                                i32.eq
                                                                                if  ;; label = @39
                                                                                  i64.const 0
                                                                                  local.set 10
                                                                                  i32.const 1
                                                                                  local.set 4
                                                                                  i32.const 16
                                                                                  local.set 8
                                                                                  i64.const 0
                                                                                  local.set 12
                                                                                  i32.const 0
                                                                                  br 22 (;@17;)
                                                                                end
                                                                                local.get 0
                                                                                i32.load offset=292
                                                                                local.set 8
                                                                                local.get 0
                                                                                i32.load offset=296
                                                                                local.tee 1
                                                                                i32.eqz
                                                                                br_if 20 (;@18;)
                                                                                local.get 8
                                                                                i32.const 16
                                                                                i32.add
                                                                                local.set 3
                                                                                i32.const 0
                                                                                local.set 2
                                                                                loop  ;; label = @39
                                                                                  block  ;; label = @40
                                                                                    local.get 1
                                                                                    local.get 2
                                                                                    i32.eq
                                                                                    if  ;; label = @41
                                                                                      local.get 1
                                                                                      local.set 2
                                                                                      i32.const 0
                                                                                      local.set 5
                                                                                      br 1 (;@40;)
                                                                                    end
                                                                                    i32.const 1
                                                                                    local.set 5
                                                                                    local.get 2
                                                                                    i32.const 1
                                                                                    i32.add
                                                                                    local.set 2
                                                                                    local.get 3
                                                                                    i64.load align=1
                                                                                    local.set 12
                                                                                    local.get 3
                                                                                    i32.const 32
                                                                                    i32.add
                                                                                    local.set 3
                                                                                    local.get 10
                                                                                    local.get 12
                                                                                    i64.ne
                                                                                    br_if 1 (;@39;)
                                                                                  end
                                                                                end
                                                                                local.get 8
                                                                                local.get 2
                                                                                i32.const 5
                                                                                i32.shl
                                                                                i32.add
                                                                                local.set 3
                                                                                loop  ;; label = @39
                                                                                  block  ;; label = @40
                                                                                    local.get 1
                                                                                    local.get 2
                                                                                    i32.ne
                                                                                    if  ;; label = @41
                                                                                      local.get 10
                                                                                      local.get 3
                                                                                      i32.const 16
                                                                                      i32.add
                                                                                      local.tee 9
                                                                                      i64.load align=1
                                                                                      i64.eq
                                                                                      if  ;; label = @42
                                                                                        local.get 5
                                                                                        i32.const 1
                                                                                        i32.add
                                                                                        local.set 5
                                                                                        br 2 (;@40;)
                                                                                      end
                                                                                      local.get 3
                                                                                      local.get 5
                                                                                      i32.const 5
                                                                                      i32.shl
                                                                                      i32.sub
                                                                                      local.tee 4
                                                                                      local.get 3
                                                                                      i64.load
                                                                                      i64.store
                                                                                      local.get 4
                                                                                      i32.const 24
                                                                                      i32.add
                                                                                      local.get 3
                                                                                      i32.const 24
                                                                                      i32.add
                                                                                      i64.load
                                                                                      i64.store
                                                                                      local.get 4
                                                                                      i32.const 16
                                                                                      i32.add
                                                                                      local.get 9
                                                                                      i64.load
                                                                                      i64.store
                                                                                      local.get 4
                                                                                      i32.const 8
                                                                                      i32.add
                                                                                      local.get 3
                                                                                      i32.const 8
                                                                                      i32.add
                                                                                      i64.load
                                                                                      i64.store
                                                                                      br 1 (;@40;)
                                                                                    end
                                                                                    local.get 1
                                                                                    local.get 5
                                                                                    i32.eq
                                                                                    br_if 22 (;@18;)
                                                                                    local.get 8
                                                                                    i64.load offset=8
                                                                                    local.set 12
                                                                                    local.get 8
                                                                                    i64.load
                                                                                    local.set 10
                                                                                    i32.const 0
                                                                                    local.set 4
                                                                                    i32.const 1
                                                                                    local.get 1
                                                                                    local.get 5
                                                                                    i32.sub
                                                                                    local.tee 1
                                                                                    i32.const 1
                                                                                    i32.eq
                                                                                    br_if 23 (;@17;)
                                                                                    drop
                                                                                    local.get 8
                                                                                    i32.const 32
                                                                                    i32.add
                                                                                    local.set 3
                                                                                    local.get 1
                                                                                    i32.const 1
                                                                                    i32.sub
                                                                                    i32.const 134217727
                                                                                    i32.and
                                                                                    local.set 2
                                                                                    loop  ;; label = @41
                                                                                      local.get 3
                                                                                      i64.load offset=8
                                                                                      local.tee 11
                                                                                      local.get 12
                                                                                      local.get 3
                                                                                      i64.load
                                                                                      local.tee 13
                                                                                      local.get 10
                                                                                      i64.gt_u
                                                                                      local.get 11
                                                                                      local.get 12
                                                                                      i64.gt_u
                                                                                      local.get 11
                                                                                      local.get 12
                                                                                      i64.eq
                                                                                      select
                                                                                      local.tee 5
                                                                                      select
                                                                                      local.set 12
                                                                                      local.get 13
                                                                                      local.get 10
                                                                                      local.get 5
                                                                                      select
                                                                                      local.set 10
                                                                                      local.get 3
                                                                                      i32.const 32
                                                                                      i32.add
                                                                                      local.set 3
                                                                                      local.get 2
                                                                                      i32.const 1
                                                                                      i32.sub
                                                                                      local.tee 2
                                                                                      br_if 0 (;@41;)
                                                                                    end
                                                                                    local.get 1
                                                                                    br 23 (;@17;)
                                                                                  end
                                                                                  local.get 3
                                                                                  i32.const 32
                                                                                  i32.add
                                                                                  local.set 3
                                                                                  local.get 2
                                                                                  i32.const 1
                                                                                  i32.add
                                                                                  local.set 2
                                                                                  br 0 (;@39;)
                                                                                end
                                                                                unreachable
                                                                              end
                                                                              local.get 0
                                                                              i32.const 288
                                                                              i32.add
                                                                              local.tee 1
                                                                              i32.const 1
                                                                              i32.or
                                                                              local.get 2
                                                                              i32.const 33
                                                                              memory.copy
                                                                              local.get 0
                                                                              i32.const 0
                                                                              i32.store8 offset=288
                                                                              global.get 0
                                                                              i32.const 16
                                                                              i32.sub
                                                                              local.tee 2
                                                                              global.set 0
                                                                              local.get 2
                                                                              i64.const 16384
                                                                              i64.store offset=8 align=4
                                                                              local.get 2
                                                                              i32.const 69258
                                                                              i32.store offset=4
                                                                              block  ;; label = @38
                                                                                local.get 1
                                                                                i32.load8_u
                                                                                i32.const 1
                                                                                i32.eq
                                                                                if  ;; label = @39
                                                                                  local.get 2
                                                                                  i32.const 4
                                                                                  i32.add
                                                                                  local.tee 1
                                                                                  i32.const 1
                                                                                  call 64
                                                                                  local.get 1
                                                                                  i32.const 1
                                                                                  call 64
                                                                                  br 1 (;@38;)
                                                                                end
                                                                                local.get 2
                                                                                i32.const 4
                                                                                i32.add
                                                                                local.tee 0
                                                                                i32.const 0
                                                                                call 64
                                                                                local.get 1
                                                                                i32.const 1
                                                                                i32.add
                                                                                local.get 0
                                                                                call 63
                                                                              end
                                                                              local.get 2
                                                                              i32.load offset=12
                                                                              local.tee 2
                                                                              i32.const 16385
                                                                              i32.ge_u
                                                                              if  ;; label = @38
                                                                                br 35 (;@3;)
                                                                              end
                                                                              br 35 (;@2;)
                                                                            end
                                                                            local.get 0
                                                                            local.get 14
                                                                            i64.store offset=496
                                                                            local.get 0
                                                                            local.get 13
                                                                            i64.store offset=504
                                                                            local.get 2
                                                                            local.get 0
                                                                            i32.const 480
                                                                            i32.add
                                                                            call 28
                                                                            local.get 0
                                                                            i32.const 568
                                                                            i32.add
                                                                            local.get 1
                                                                            i32.const 24
                                                                            i32.add
                                                                            i64.load
                                                                            i64.store
                                                                            local.get 0
                                                                            i32.const 560
                                                                            i32.add
                                                                            local.get 1
                                                                            i32.const 16
                                                                            i32.add
                                                                            i64.load
                                                                            i64.store
                                                                            local.get 0
                                                                            local.get 10
                                                                            i64.store offset=584
                                                                            local.get 0
                                                                            local.get 12
                                                                            i64.store offset=576
                                                                            local.get 0
                                                                            local.get 1
                                                                            i32.const 8
                                                                            i32.add
                                                                            i64.load
                                                                            i64.store offset=552
                                                                            local.get 0
                                                                            local.get 1
                                                                            i64.load
                                                                            i64.store offset=544
                                                                            local.get 0
                                                                            i64.const 16384
                                                                            i64.store offset=444 align=4
                                                                            local.get 0
                                                                            i32.const 69258
                                                                            i32.store offset=440
                                                                            local.get 0
                                                                            i32.const 440
                                                                            i32.add
                                                                            local.tee 2
                                                                            i32.const 2
                                                                            call 39
                                                                            local.get 2
                                                                            i32.const 67652
                                                                            call 34
                                                                            local.get 0
                                                                            i32.const 624
                                                                            i32.add
                                                                            local.tee 1
                                                                            local.get 2
                                                                            local.get 0
                                                                            i32.const 544
                                                                            i32.add
                                                                            local.tee 3
                                                                            call 43
                                                                            local.get 0
                                                                            i32.const 592
                                                                            i32.add
                                                                            local.tee 2
                                                                            local.get 1
                                                                            call 44
                                                                            local.get 0
                                                                            i32.const 632
                                                                            i32.add
                                                                            local.get 0
                                                                            i32.const 600
                                                                            i32.add
                                                                            i32.load
                                                                            i32.store
                                                                            local.get 0
                                                                            local.get 0
                                                                            i64.load offset=592 align=4
                                                                            local.tee 11
                                                                            i64.store offset=624
                                                                            local.get 0
                                                                            i32.load offset=604
                                                                            local.set 4
                                                                            local.get 0
                                                                            i32.load offset=608
                                                                            local.set 5
                                                                            local.get 0
                                                                            i32.const 0
                                                                            i32.store offset=600
                                                                            local.get 0
                                                                            local.get 11
                                                                            i64.store offset=592 align=4
                                                                            local.get 3
                                                                            local.get 2
                                                                            call 36
                                                                            local.get 12
                                                                            local.get 10
                                                                            local.get 2
                                                                            call 33
                                                                            local.get 0
                                                                            local.get 0
                                                                            i64.load offset=592 align=4
                                                                            i64.store offset=624
                                                                            local.get 0
                                                                            i32.const 16
                                                                            i32.add
                                                                            local.get 1
                                                                            local.get 0
                                                                            i32.load offset=600
                                                                            call 22
                                                                            local.get 4
                                                                            local.get 5
                                                                            local.get 0
                                                                            i32.load offset=16
                                                                            local.get 0
                                                                            i32.load offset=20
                                                                            call 2
                                                                          end
                                                                          local.get 0
                                                                          i32.const 288
                                                                          i32.add
                                                                          local.tee 2
                                                                          local.get 0
                                                                          i32.const 160
                                                                          i32.add
                                                                          i32.const 128
                                                                          memory.copy
                                                                          local.get 2
                                                                          call 62
                                                                          i32.const 7
                                                                          local.set 3
                                                                          i32.const 0
                                                                        end
                                                                        local.get 3
                                                                        call 57
                                                                        unreachable
                                                                      end
                                                                      local.get 0
                                                                      local.get 11
                                                                      local.get 10
                                                                      i64.sub
                                                                      i64.store offset=480
                                                                      local.get 0
                                                                      local.get 13
                                                                      local.get 12
                                                                      i64.sub
                                                                      local.get 10
                                                                      local.get 11
                                                                      i64.gt_u
                                                                      i64.extend_i32_u
                                                                      i64.sub
                                                                      i64.store offset=488
                                                                      local.get 0
                                                                      i64.const 0
                                                                      local.get 0
                                                                      i64.load offset=160
                                                                      local.tee 11
                                                                      local.get 10
                                                                      i64.sub
                                                                      local.tee 13
                                                                      local.get 11
                                                                      local.get 13
                                                                      i64.lt_u
                                                                      local.get 0
                                                                      i64.load offset=168
                                                                      local.tee 13
                                                                      local.get 12
                                                                      i64.sub
                                                                      local.get 10
                                                                      local.get 11
                                                                      i64.gt_u
                                                                      i64.extend_i32_u
                                                                      i64.sub
                                                                      local.tee 11
                                                                      local.get 13
                                                                      i64.gt_u
                                                                      local.get 11
                                                                      local.get 13
                                                                      i64.eq
                                                                      select
                                                                      local.tee 3
                                                                      select
                                                                      i64.store offset=160
                                                                      local.get 0
                                                                      i64.const 0
                                                                      local.get 11
                                                                      local.get 3
                                                                      select
                                                                      i64.store offset=168
                                                                      local.get 0
                                                                      i64.const 0
                                                                      local.get 0
                                                                      i64.load offset=176
                                                                      local.tee 11
                                                                      local.get 10
                                                                      i64.sub
                                                                      local.tee 13
                                                                      local.get 11
                                                                      local.get 13
                                                                      i64.lt_u
                                                                      local.get 0
                                                                      i64.load offset=184
                                                                      local.tee 13
                                                                      local.get 12
                                                                      i64.sub
                                                                      local.get 10
                                                                      local.get 11
                                                                      i64.gt_u
                                                                      i64.extend_i32_u
                                                                      i64.sub
                                                                      local.tee 11
                                                                      local.get 13
                                                                      i64.gt_u
                                                                      local.get 11
                                                                      local.get 13
                                                                      i64.eq
                                                                      select
                                                                      local.tee 3
                                                                      select
                                                                      i64.store offset=176
                                                                      local.get 0
                                                                      i64.const 0
                                                                      local.get 11
                                                                      local.get 3
                                                                      select
                                                                      i64.store offset=184
                                                                      local.get 2
                                                                      local.get 0
                                                                      i32.const 480
                                                                      i32.add
                                                                      call 28
                                                                      local.get 0
                                                                      i32.const 568
                                                                      i32.add
                                                                      local.get 1
                                                                      i32.const 24
                                                                      i32.add
                                                                      i64.load
                                                                      i64.store
                                                                      local.get 0
                                                                      i32.const 560
                                                                      i32.add
                                                                      local.get 1
                                                                      i32.const 16
                                                                      i32.add
                                                                      i64.load
                                                                      i64.store
                                                                      local.get 0
                                                                      local.get 12
                                                                      i64.store offset=584
                                                                      local.get 0
                                                                      local.get 10
                                                                      i64.store offset=576
                                                                      local.get 0
                                                                      local.get 1
                                                                      i32.const 8
                                                                      i32.add
                                                                      i64.load
                                                                      i64.store offset=552
                                                                      local.get 0
                                                                      local.get 1
                                                                      i64.load
                                                                      i64.store offset=544
                                                                      local.get 0
                                                                      i64.const 16384
                                                                      i64.store offset=432 align=4
                                                                      local.get 0
                                                                      i32.const 69258
                                                                      i32.store offset=428
                                                                      local.get 0
                                                                      i32.const 428
                                                                      i32.add
                                                                      local.tee 2
                                                                      i32.const 2
                                                                      call 39
                                                                      local.get 2
                                                                      i32.const 67850
                                                                      call 34
                                                                      local.get 0
                                                                      i32.const 624
                                                                      i32.add
                                                                      local.tee 1
                                                                      local.get 2
                                                                      local.get 0
                                                                      i32.const 544
                                                                      i32.add
                                                                      local.tee 3
                                                                      call 43
                                                                      local.get 0
                                                                      i32.const 592
                                                                      i32.add
                                                                      local.tee 2
                                                                      local.get 1
                                                                      call 44
                                                                      local.get 0
                                                                      i32.const 632
                                                                      i32.add
                                                                      local.get 0
                                                                      i32.const 600
                                                                      i32.add
                                                                      i32.load
                                                                      i32.store
                                                                      local.get 0
                                                                      local.get 0
                                                                      i64.load offset=592 align=4
                                                                      local.tee 11
                                                                      i64.store offset=624
                                                                      local.get 0
                                                                      i32.load offset=604
                                                                      local.set 4
                                                                      local.get 0
                                                                      i32.load offset=608
                                                                      local.set 5
                                                                      local.get 0
                                                                      i32.const 0
                                                                      i32.store offset=600
                                                                      local.get 0
                                                                      local.get 11
                                                                      i64.store offset=592 align=4
                                                                      local.get 3
                                                                      local.get 2
                                                                      call 36
                                                                      local.get 10
                                                                      local.get 12
                                                                      local.get 2
                                                                      call 33
                                                                      local.get 0
                                                                      local.get 0
                                                                      i64.load offset=592 align=4
                                                                      i64.store offset=624
                                                                      local.get 0
                                                                      i32.const 8
                                                                      i32.add
                                                                      local.get 1
                                                                      local.get 0
                                                                      i32.load offset=600
                                                                      call 22
                                                                      local.get 4
                                                                      local.get 5
                                                                      local.get 0
                                                                      i32.load offset=8
                                                                      local.get 0
                                                                      i32.load offset=12
                                                                      call 2
                                                                    end
                                                                    local.get 0
                                                                    i32.const 288
                                                                    i32.add
                                                                    local.tee 2
                                                                    local.get 0
                                                                    i32.const 160
                                                                    i32.add
                                                                    i32.const 128
                                                                    memory.copy
                                                                    local.get 2
                                                                    call 62
                                                                    i32.const 7
                                                                    local.set 3
                                                                    i32.const 0
                                                                  end
                                                                  local.get 3
                                                                  call 57
                                                                  unreachable
                                                                end
                                                                local.get 0
                                                                local.get 14
                                                                i64.store offset=480
                                                                local.get 0
                                                                local.get 13
                                                                i64.store offset=488
                                                                local.get 2
                                                                local.get 0
                                                                i32.const 480
                                                                i32.add
                                                                call 28
                                                                local.get 0
                                                                i32.const 568
                                                                i32.add
                                                                local.get 1
                                                                i32.const 24
                                                                i32.add
                                                                i64.load
                                                                i64.store
                                                                local.get 0
                                                                i32.const 560
                                                                i32.add
                                                                local.get 1
                                                                i32.const 16
                                                                i32.add
                                                                i64.load
                                                                i64.store
                                                                local.get 0
                                                                local.get 10
                                                                i64.store offset=584
                                                                local.get 0
                                                                local.get 12
                                                                i64.store offset=576
                                                                local.get 0
                                                                local.get 1
                                                                i32.const 8
                                                                i32.add
                                                                i64.load
                                                                i64.store offset=552
                                                                local.get 0
                                                                local.get 1
                                                                i64.load
                                                                i64.store offset=544
                                                                local.get 0
                                                                i64.const 16384
                                                                i64.store offset=420 align=4
                                                                local.get 0
                                                                i32.const 69258
                                                                i32.store offset=416
                                                                local.get 0
                                                                i32.const 416
                                                                i32.add
                                                                local.tee 2
                                                                i32.const 2
                                                                call 39
                                                                local.get 2
                                                                i32.const 67817
                                                                call 34
                                                                local.get 0
                                                                i32.const 624
                                                                i32.add
                                                                local.tee 1
                                                                local.get 2
                                                                local.get 0
                                                                i32.const 544
                                                                i32.add
                                                                local.tee 3
                                                                call 43
                                                                local.get 0
                                                                i32.const 592
                                                                i32.add
                                                                local.tee 2
                                                                local.get 1
                                                                call 44
                                                                local.get 0
                                                                i32.const 632
                                                                i32.add
                                                                local.get 0
                                                                i32.const 600
                                                                i32.add
                                                                i32.load
                                                                i32.store
                                                                local.get 0
                                                                local.get 0
                                                                i64.load offset=592 align=4
                                                                local.tee 11
                                                                i64.store offset=624
                                                                local.get 0
                                                                i32.load offset=604
                                                                local.set 4
                                                                local.get 0
                                                                i32.load offset=608
                                                                local.set 5
                                                                local.get 0
                                                                i32.const 0
                                                                i32.store offset=600
                                                                local.get 0
                                                                local.get 11
                                                                i64.store offset=592 align=4
                                                                local.get 3
                                                                local.get 2
                                                                call 36
                                                                local.get 12
                                                                local.get 10
                                                                local.get 2
                                                                call 33
                                                                local.get 0
                                                                local.get 0
                                                                i64.load offset=592 align=4
                                                                i64.store offset=624
                                                                local.get 0
                                                                local.get 1
                                                                local.get 0
                                                                i32.load offset=600
                                                                call 22
                                                                local.get 4
                                                                local.get 5
                                                                local.get 0
                                                                i32.load
                                                                local.get 0
                                                                i32.load offset=4
                                                                call 2
                                                              end
                                                              local.get 0
                                                              i32.const 288
                                                              i32.add
                                                              local.tee 2
                                                              local.get 0
                                                              i32.const 160
                                                              i32.add
                                                              i32.const 128
                                                              memory.copy
                                                              local.get 2
                                                              call 62
                                                              i32.const 7
                                                              local.set 3
                                                              i32.const 0
                                                            end
                                                            local.get 3
                                                            call 57
                                                            unreachable
                                                          end
                                                          local.get 0
                                                          local.get 12
                                                          i64.const -1
                                                          local.get 11
                                                          local.get 15
                                                          i64.add
                                                          local.tee 15
                                                          local.get 11
                                                          i64.lt_u
                                                          local.tee 2
                                                          i64.extend_i32_u
                                                          local.get 10
                                                          local.get 14
                                                          i64.add
                                                          i64.add
                                                          local.tee 11
                                                          local.get 2
                                                          local.get 10
                                                          local.get 11
                                                          i64.gt_u
                                                          local.get 10
                                                          local.get 11
                                                          i64.eq
                                                          select
                                                          local.tee 2
                                                          select
                                                          local.tee 10
                                                          local.get 13
                                                          i64.const -1
                                                          local.get 15
                                                          local.get 2
                                                          select
                                                          local.tee 11
                                                          i64.lt_u
                                                          local.get 10
                                                          local.get 12
                                                          i64.gt_u
                                                          local.get 10
                                                          local.get 12
                                                          i64.eq
                                                          select
                                                          local.tee 2
                                                          select
                                                          i64.store offset=184
                                                          local.get 0
                                                          local.get 13
                                                          local.get 11
                                                          local.get 2
                                                          select
                                                          i64.store offset=176
                                                          local.get 0
                                                          i32.const 288
                                                          i32.add
                                                          local.tee 2
                                                          local.get 0
                                                          i32.const 160
                                                          i32.add
                                                          i32.const 128
                                                          memory.copy
                                                          local.get 2
                                                          call 62
                                                          i32.const 7
                                                          local.set 3
                                                          i32.const 0
                                                        end
                                                        local.get 3
                                                        call 57
                                                        unreachable
                                                      end
                                                      local.get 0
                                                      i64.const 0
                                                      local.get 10
                                                      local.get 13
                                                      i64.sub
                                                      local.get 11
                                                      local.get 12
                                                      i64.lt_u
                                                      i64.extend_i32_u
                                                      i64.sub
                                                      local.tee 13
                                                      local.get 11
                                                      local.get 12
                                                      i64.sub
                                                      local.tee 12
                                                      local.get 11
                                                      i64.gt_u
                                                      local.get 10
                                                      local.get 13
                                                      i64.lt_u
                                                      local.get 10
                                                      local.get 13
                                                      i64.eq
                                                      select
                                                      local.tee 2
                                                      select
                                                      i64.store offset=184
                                                      local.get 0
                                                      i64.const 0
                                                      local.get 12
                                                      local.get 2
                                                      select
                                                      i64.store offset=176
                                                      local.get 0
                                                      i32.const 288
                                                      i32.add
                                                      local.tee 2
                                                      local.get 0
                                                      i32.const 160
                                                      i32.add
                                                      i32.const 128
                                                      memory.copy
                                                      local.get 2
                                                      call 62
                                                      i32.const 7
                                                      local.set 3
                                                      i32.const 0
                                                    end
                                                    local.get 3
                                                    call 57
                                                    unreachable
                                                  end
                                                  local.get 0
                                                  local.get 15
                                                  i64.store offset=160
                                                  local.get 0
                                                  local.get 14
                                                  i64.store offset=168
                                                  local.get 0
                                                  local.get 14
                                                  local.get 14
                                                  local.get 10
                                                  local.get 11
                                                  local.get 15
                                                  i64.gt_u
                                                  local.get 10
                                                  local.get 14
                                                  i64.gt_u
                                                  local.get 10
                                                  local.get 14
                                                  i64.eq
                                                  select
                                                  local.tee 2
                                                  select
                                                  local.get 12
                                                  local.get 13
                                                  i64.or
                                                  i64.eqz
                                                  local.tee 1
                                                  select
                                                  i64.store offset=184
                                                  local.get 0
                                                  local.get 15
                                                  local.get 15
                                                  local.get 11
                                                  local.get 2
                                                  select
                                                  local.get 1
                                                  select
                                                  i64.store offset=176
                                                  local.get 0
                                                  i32.const 288
                                                  i32.add
                                                  local.tee 2
                                                  local.get 0
                                                  i32.const 160
                                                  i32.add
                                                  i32.const 128
                                                  memory.copy
                                                  local.get 2
                                                  call 62
                                                  i32.const 7
                                                  local.set 3
                                                  i32.const 0
                                                end
                                                local.get 3
                                                call 57
                                                unreachable
                                              end
                                              local.get 0
                                              i64.const 0
                                              local.get 14
                                              local.get 11
                                              local.get 12
                                              i64.sub
                                              local.get 10
                                              local.get 13
                                              i64.gt_u
                                              i64.extend_i32_u
                                              i64.sub
                                              local.tee 16
                                              i64.sub
                                              local.get 15
                                              local.get 13
                                              local.get 10
                                              i64.sub
                                              local.tee 11
                                              i64.lt_u
                                              i64.extend_i32_u
                                              i64.sub
                                              local.tee 13
                                              local.get 15
                                              local.get 15
                                              local.get 11
                                              i64.sub
                                              local.tee 17
                                              i64.lt_u
                                              local.get 13
                                              local.get 14
                                              i64.gt_u
                                              local.get 13
                                              local.get 14
                                              i64.eq
                                              select
                                              local.tee 1
                                              select
                                              i64.store offset=168
                                              local.get 0
                                              i64.const 0
                                              local.get 17
                                              local.get 1
                                              select
                                              i64.store offset=160
                                              i64.const 0
                                              local.get 0
                                              i64.load offset=184
                                              local.tee 13
                                              local.get 16
                                              i64.sub
                                              local.get 0
                                              i64.load offset=176
                                              local.tee 14
                                              local.get 11
                                              i64.lt_u
                                              i64.extend_i32_u
                                              i64.sub
                                              local.tee 15
                                              local.get 14
                                              local.get 11
                                              i64.sub
                                              local.tee 11
                                              local.get 14
                                              i64.gt_u
                                              local.get 13
                                              local.get 15
                                              i64.lt_u
                                              local.get 13
                                              local.get 15
                                              i64.eq
                                              select
                                              local.tee 1
                                              select
                                              local.set 14
                                              i64.const 0
                                              local.get 11
                                              local.get 1
                                              select
                                              local.set 13
                                              i64.const 0
                                            end
                                            local.set 11
                                            local.get 0
                                            local.get 13
                                            i64.store offset=176
                                            local.get 0
                                            local.get 14
                                            i64.store offset=184
                                            local.get 2
                                            local.get 0
                                            i32.const 544
                                            i32.add
                                            call 28
                                            local.get 0
                                            i32.const 288
                                            i32.add
                                            local.tee 2
                                            local.get 0
                                            i32.const 160
                                            i32.add
                                            i32.const 128
                                            memory.copy
                                            local.get 2
                                            call 62
                                            i32.const 0
                                            br 11 (;@9;)
                                          end
                                          local.get 15
                                          local.get 14
                                          call 60
                                          unreachable
                                        end
                                        local.get 0
                                        i32.const 288
                                        i32.add
                                        local.tee 1
                                        call 45
                                        block (result i32)  ;; label = @19
                                          local.get 1
                                          local.get 3
                                          call 51
                                          if  ;; label = @20
                                            i32.const 6
                                            local.set 3
                                            i32.const 1
                                            br 1 (;@19;)
                                          end
                                          local.get 2
                                          local.get 6
                                          i32.const 33
                                          memory.copy
                                          local.get 0
                                          i32.const 288
                                          i32.add
                                          local.tee 2
                                          local.get 0
                                          i32.const 160
                                          i32.add
                                          i32.const 128
                                          memory.copy
                                          local.get 2
                                          call 62
                                          i32.const 7
                                          local.set 3
                                          i32.const 0
                                        end
                                        local.get 3
                                        call 57
                                        unreachable
                                      end
                                      i64.const 0
                                      local.set 10
                                      i32.const 1
                                      local.set 4
                                      i64.const 0
                                      local.set 12
                                      i32.const 0
                                    end
                                    local.set 2
                                    local.get 0
                                    i32.const 544
                                    i32.add
                                    local.get 7
                                    call 52
                                    local.get 0
                                    i64.load offset=576
                                    local.set 11
                                    local.get 0
                                    local.get 10
                                    i64.store offset=576
                                    local.get 0
                                    i64.load offset=584
                                    local.set 13
                                    local.get 0
                                    local.get 12
                                    i64.store offset=584
                                    block  ;; label = @17
                                      local.get 4
                                      i32.eqz
                                      if  ;; label = @18
                                        local.get 7
                                        local.get 8
                                        local.get 2
                                        call 30
                                        br 1 (;@17;)
                                      end
                                      local.get 0
                                      i32.const 300
                                      i32.add
                                      local.get 6
                                      i32.const 8
                                      i32.add
                                      i64.load align=1
                                      i64.store align=4
                                      local.get 0
                                      i32.const 308
                                      i32.add
                                      local.get 6
                                      i32.const 16
                                      i32.add
                                      i64.load align=1
                                      i64.store align=4
                                      local.get 0
                                      i32.const 316
                                      i32.add
                                      local.get 6
                                      i32.const 24
                                      i32.add
                                      i64.load align=1
                                      i64.store align=4
                                      local.get 0
                                      i32.const 66836
                                      i32.store offset=288
                                      local.get 0
                                      local.get 6
                                      i64.load align=1
                                      i64.store offset=292 align=4
                                      local.get 0
                                      i32.const 0
                                      i32.store offset=632
                                      local.get 0
                                      i64.const 16384
                                      i64.store offset=596 align=4
                                      local.get 0
                                      i32.const 69258
                                      i32.store offset=592
                                      local.get 0
                                      i32.const 288
                                      i32.add
                                      local.get 0
                                      i32.const 592
                                      i32.add
                                      call 21
                                      local.get 0
                                      local.get 0
                                      i64.load offset=592 align=4
                                      i64.store offset=624 align=4
                                      local.get 0
                                      i32.const 48
                                      i32.add
                                      local.get 0
                                      i32.const 624
                                      i32.add
                                      local.get 0
                                      i32.load offset=600
                                      call 22
                                      local.get 0
                                      i32.load offset=48
                                      local.get 0
                                      i32.load offset=52
                                      call 4
                                      drop
                                    end
                                    local.get 7
                                    local.get 0
                                    i32.const 544
                                    i32.add
                                    call 28
                                    local.get 10
                                    local.get 11
                                    i64.ge_u
                                    local.get 12
                                    local.get 13
                                    i64.ge_u
                                    local.get 12
                                    local.get 13
                                    i64.eq
                                    select
                                    i32.eqz
                                    if  ;; label = @17
                                      local.get 0
                                      i32.const 312
                                      i32.add
                                      local.get 6
                                      i32.const 24
                                      i32.add
                                      i64.load align=1
                                      i64.store
                                      local.get 0
                                      i32.const 304
                                      i32.add
                                      local.get 6
                                      i32.const 16
                                      i32.add
                                      i64.load align=1
                                      i64.store
                                      local.get 0
                                      local.get 11
                                      local.get 10
                                      i64.sub
                                      local.tee 14
                                      i64.store offset=320
                                      local.get 0
                                      local.get 6
                                      i64.load align=1
                                      i64.store offset=288
                                      local.get 0
                                      local.get 6
                                      i32.const 8
                                      i32.add
                                      i64.load align=1
                                      i64.store offset=296
                                      local.get 0
                                      local.get 13
                                      local.get 12
                                      i64.sub
                                      local.get 10
                                      local.get 11
                                      i64.gt_u
                                      i64.extend_i32_u
                                      i64.sub
                                      local.tee 10
                                      i64.store offset=328
                                      local.get 0
                                      i64.const 16384
                                      i64.store offset=616 align=4
                                      local.get 0
                                      i32.const 69258
                                      i32.store offset=612
                                      local.get 0
                                      i32.const 612
                                      i32.add
                                      local.tee 2
                                      i32.const 2
                                      call 39
                                      local.get 2
                                      i32.const 67751
                                      call 34
                                      local.get 0
                                      i32.const 624
                                      i32.add
                                      local.tee 1
                                      local.get 2
                                      local.get 0
                                      i32.const 288
                                      i32.add
                                      local.tee 3
                                      call 43
                                      local.get 0
                                      i32.const 592
                                      i32.add
                                      local.tee 2
                                      local.get 1
                                      call 44
                                      local.get 0
                                      i32.const 632
                                      i32.add
                                      local.get 0
                                      i32.const 600
                                      i32.add
                                      i32.load
                                      i32.store
                                      local.get 0
                                      local.get 0
                                      i64.load offset=592 align=4
                                      local.tee 12
                                      i64.store offset=624
                                      local.get 0
                                      i32.load offset=604
                                      local.set 4
                                      local.get 0
                                      i32.load offset=608
                                      local.set 5
                                      local.get 0
                                      i32.const 0
                                      i32.store offset=600
                                      local.get 0
                                      local.get 12
                                      i64.store offset=592 align=4
                                      local.get 3
                                      local.get 2
                                      call 36
                                      local.get 14
                                      local.get 10
                                      local.get 2
                                      call 33
                                      local.get 0
                                      local.get 0
                                      i64.load offset=592 align=4
                                      i64.store offset=624
                                      local.get 0
                                      i32.const 40
                                      i32.add
                                      local.get 1
                                      local.get 0
                                      i32.load offset=600
                                      call 22
                                      local.get 4
                                      local.get 5
                                      local.get 0
                                      i32.load offset=40
                                      local.get 0
                                      i32.load offset=44
                                      call 2
                                    end
                                    local.get 0
                                    i32.const 288
                                    i32.add
                                    local.tee 2
                                    local.get 0
                                    i32.const 160
                                    i32.add
                                    i32.const 128
                                    memory.copy
                                    local.get 2
                                    call 62
                                    i32.const 0
                                    i32.const 7
                                    call 57
                                    unreachable
                                  end
                                  local.get 0
                                  local.get 12
                                  i64.store offset=544
                                  local.get 0
                                  local.get 11
                                  i64.store offset=560
                                  local.get 0
                                  local.get 10
                                  i64.store offset=552
                                  local.get 0
                                  i32.const 464
                                  i32.add
                                  local.get 0
                                  i32.const 544
                                  i32.add
                                  i32.const 67536
                                  call 25
                                  local.get 0
                                  i32.load offset=468
                                  local.set 5
                                  local.get 0
                                  i32.load offset=472
                                  local.set 6
                                end
                                i64.const 0
                                local.set 10
                                i64.const 0
                                local.set 12
                                block  ;; label = @15
                                  local.get 6
                                  i32.eqz
                                  br_if 0 (;@15;)
                                  local.get 5
                                  i64.load offset=8
                                  local.set 12
                                  local.get 5
                                  i64.load
                                  local.set 10
                                  local.get 6
                                  i32.const 1
                                  i32.eq
                                  br_if 0 (;@15;)
                                  local.get 5
                                  i32.const 32
                                  i32.add
                                  local.set 3
                                  local.get 6
                                  i32.const 1
                                  i32.sub
                                  i32.const 134217727
                                  i32.and
                                  local.set 2
                                  loop  ;; label = @16
                                    local.get 3
                                    i64.load offset=8
                                    local.tee 11
                                    local.get 12
                                    local.get 3
                                    i64.load
                                    local.tee 13
                                    local.get 10
                                    i64.gt_u
                                    local.get 11
                                    local.get 12
                                    i64.gt_u
                                    local.get 11
                                    local.get 12
                                    i64.eq
                                    select
                                    local.tee 7
                                    select
                                    local.set 12
                                    local.get 13
                                    local.get 10
                                    local.get 7
                                    select
                                    local.set 10
                                    local.get 3
                                    i32.const 32
                                    i32.add
                                    local.set 3
                                    local.get 2
                                    i32.const 1
                                    i32.sub
                                    local.tee 2
                                    br_if 0 (;@16;)
                                  end
                                end
                                local.get 0
                                i32.const 480
                                i32.add
                                local.tee 2
                                local.get 4
                                call 52
                                local.get 0
                                i64.load offset=512
                                local.set 11
                                local.get 0
                                local.get 10
                                i64.store offset=512
                                local.get 0
                                i64.load offset=520
                                local.set 13
                                local.get 0
                                local.get 12
                                i64.store offset=520
                                local.get 4
                                local.get 5
                                local.get 6
                                call 30
                                local.get 4
                                local.get 2
                                call 28
                                local.get 10
                                local.get 11
                                i64.gt_u
                                local.get 12
                                local.get 13
                                i64.gt_u
                                local.get 12
                                local.get 13
                                i64.eq
                                select
                                if  ;; label = @15
                                  local.get 0
                                  i32.const 568
                                  i32.add
                                  local.get 1
                                  i32.const 24
                                  i32.add
                                  i64.load
                                  i64.store
                                  local.get 0
                                  i32.const 560
                                  i32.add
                                  local.get 1
                                  i32.const 16
                                  i32.add
                                  i64.load
                                  i64.store
                                  local.get 0
                                  local.get 10
                                  local.get 11
                                  i64.sub
                                  local.tee 14
                                  i64.store offset=576
                                  local.get 0
                                  local.get 1
                                  i64.load
                                  i64.store offset=544
                                  local.get 0
                                  local.get 1
                                  i32.const 8
                                  i32.add
                                  i64.load
                                  i64.store offset=552
                                  local.get 0
                                  local.get 12
                                  local.get 13
                                  i64.sub
                                  local.get 10
                                  local.get 11
                                  i64.lt_u
                                  i64.extend_i32_u
                                  i64.sub
                                  local.tee 10
                                  i64.store offset=584
                                  local.get 0
                                  i64.const 16384
                                  i64.store offset=536 align=4
                                  local.get 0
                                  i32.const 69258
                                  i32.store offset=532
                                  local.get 0
                                  i32.const 532
                                  i32.add
                                  local.tee 2
                                  i32.const 2
                                  call 39
                                  local.get 2
                                  i32.const 67718
                                  call 34
                                  local.get 0
                                  i32.const 624
                                  i32.add
                                  local.tee 1
                                  local.get 2
                                  local.get 0
                                  i32.const 544
                                  i32.add
                                  local.tee 3
                                  call 43
                                  local.get 0
                                  i32.const 592
                                  i32.add
                                  local.tee 2
                                  local.get 1
                                  call 44
                                  local.get 0
                                  i32.const 632
                                  i32.add
                                  local.get 0
                                  i32.const 600
                                  i32.add
                                  i32.load
                                  i32.store
                                  local.get 0
                                  local.get 0
                                  i64.load offset=592 align=4
                                  local.tee 12
                                  i64.store offset=624
                                  local.get 0
                                  i32.load offset=604
                                  local.set 4
                                  local.get 0
                                  i32.load offset=608
                                  local.set 5
                                  local.get 0
                                  i32.const 0
                                  i32.store offset=600
                                  local.get 0
                                  local.get 12
                                  i64.store offset=592 align=4
                                  local.get 3
                                  local.get 2
                                  call 36
                                  local.get 14
                                  local.get 10
                                  local.get 2
                                  call 33
                                  local.get 0
                                  local.get 0
                                  i64.load offset=592 align=4
                                  i64.store offset=624
                                  local.get 0
                                  i32.const 32
                                  i32.add
                                  local.get 1
                                  local.get 0
                                  i32.load offset=600
                                  call 22
                                  local.get 4
                                  local.get 5
                                  local.get 0
                                  i32.load offset=32
                                  local.get 0
                                  i32.load offset=36
                                  call 2
                                end
                                local.get 0
                                i32.const 288
                                i32.add
                                local.tee 2
                                local.get 0
                                i32.const 160
                                i32.add
                                i32.const 128
                                memory.copy
                                local.get 2
                                call 62
                                i32.const 7
                                local.set 3
                                i32.const 0
                              end
                              local.get 3
                              call 57
                              unreachable
                            end
                            i32.const 4
                            local.set 2
                          end
                          i32.const 1
                        end
                        local.set 3
                        local.get 0
                        local.get 12
                        i64.store offset=304
                        local.get 0
                        local.get 2
                        i32.store8 offset=289
                        br 4 (;@6;)
                      end
                      i32.const 1
                    end
                    local.set 2
                    local.get 0
                    local.get 10
                    i64.store offset=304
                    local.get 0
                    local.get 11
                    i64.store offset=288
                    local.get 0
                    local.get 12
                    i64.store offset=312
                    local.get 0
                    i64.const 0
                    i64.store offset=296
                    global.get 0
                    i32.const 16
                    i32.sub
                    local.tee 1
                    global.set 0
                    local.get 1
                    i64.const 16384
                    i64.store offset=8 align=4
                    local.get 1
                    i32.const 69258
                    i32.store offset=4
                    block  ;; label = @9
                      local.get 0
                      i32.const 288
                      i32.add
                      local.tee 0
                      i64.load offset=8
                      local.tee 12
                      local.get 0
                      i64.load
                      local.tee 10
                      i64.const 3
                      i64.xor
                      i64.or
                      i64.eqz
                      if  ;; label = @10
                        local.get 1
                        i32.const 4
                        i32.add
                        local.tee 0
                        i32.const 1
                        call 64
                        local.get 0
                        i32.const 1
                        call 64
                        br 1 (;@9;)
                      end
                      local.get 1
                      i32.const 4
                      i32.add
                      local.tee 3
                      i32.const 0
                      call 64
                      local.get 10
                      i64.const 2
                      i64.xor
                      local.get 12
                      i64.or
                      i64.eqz
                      if  ;; label = @10
                        local.get 3
                        i32.const 1
                        call 64
                        local.get 3
                        local.get 0
                        i32.load8_u offset=16
                        call 64
                        br 1 (;@9;)
                      end
                      local.get 1
                      i32.const 4
                      i32.add
                      local.tee 3
                      i32.const 0
                      call 64
                      local.get 10
                      i32.wrap_i64
                      i32.const 1
                      i32.and
                      if  ;; label = @10
                        local.get 3
                        i32.const 1
                        call 64
                        local.get 0
                        i64.load offset=16
                        local.get 0
                        i64.load offset=24
                        local.get 3
                        call 33
                        br 1 (;@9;)
                      end
                      local.get 1
                      i32.const 4
                      i32.add
                      i32.const 0
                      call 64
                    end
                    br 7 (;@1;)
                  end
                  global.get 0
                  i32.const 96
                  i32.sub
                  local.tee 2
                  global.set 0
                  local.get 2
                  i32.const 24
                  i32.add
                  local.get 6
                  i32.const 8
                  i32.add
                  i64.load align=1
                  i64.store align=4
                  local.get 2
                  i32.const 32
                  i32.add
                  local.get 6
                  i32.const 16
                  i32.add
                  i64.load align=1
                  i64.store align=4
                  local.get 2
                  i32.const 40
                  i32.add
                  local.get 6
                  i32.const 24
                  i32.add
                  i64.load align=1
                  i64.store align=4
                  local.get 2
                  local.get 0
                  i32.const 160
                  i32.add
                  i32.store offset=12
                  local.get 2
                  local.get 6
                  i64.load align=1
                  i64.store offset=16 align=4
                  local.get 2
                  i32.const 48
                  i32.add
                  local.get 2
                  i32.const 16
                  i32.add
                  call 52
                  local.get 0
                  i32.const 304
                  i32.add
                  local.tee 1
                  local.get 2
                  i64.load offset=56
                  i64.store offset=8
                  local.get 1
                  local.get 2
                  i64.load offset=48
                  i64.store
                  local.get 2
                  i32.const 96
                  i32.add
                  global.set 0
                end
                local.get 0
                i64.load offset=304
                local.get 0
                i64.load offset=312
                call 60
                unreachable
              end
              local.get 0
              local.get 3
              i32.store8 offset=288
              local.get 0
              local.get 10
              i64.store offset=312
            end
            local.get 3
            local.get 0
            i32.const 288
            i32.add
            call 61
            unreachable
          end
          local.get 0
          i32.const 288
          i32.add
          local.tee 2
          local.get 0
          i32.const 160
          i32.add
          i32.const 128
          memory.copy
          local.get 2
          call 62
          i32.const 0
          local.get 0
          i32.const 544
          i32.add
          call 61
          unreachable
        end
        local.get 2
        i32.const 16384
        i32.const 67340
        call 18
        unreachable
      end
      i32.const 0
      local.get 2
      call 65
      unreachable
    end
    local.get 1
    i32.load offset=12
    local.tee 1
    i32.const 16385
    i32.ge_u
    if  ;; label = @1
      local.get 1
      i32.const 16384
      i32.const 67340
      call 18
      unreachable
    end
    local.get 2
    local.get 1
    call 65
    unreachable)

  ;; ============================================================================
  ;; DEPLOY DISPATCHER AND CONSTRUCTOR LOGIC
  ;; ============================================================================

  ;; Function 74: Deploy dispatcher (constructor entrypoint)
  ;; Decodes constructor selector and initializes contract state
  ;; Used for: Contract deployment/instantiation
  ;; Parameters: () -> never_returns (calls seal_return)
  ;; Constructor format: selector(4 bytes) + SCALE-encoded parameters
  (func $dispatch_deploy (;74;) (type 6)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i64 i64)
    ;; Local 0-8: i32 temps for pointers, flags, selector bytes
    ;; Local 9-10: i64 temps for u128 parameters
    
    global.get 0
    i32.const 272
    i32.sub
    local.tee 0          ;; Local 0: stack frame base
    global.set 0
    
    block  ;; @1 - Deployment error exit
      ;; Check payability - constructors should not be payable
      call 48            ;; check_value_transferred
      i32.const 255
      i32.and
      i32.const 5
      i32.eq             ;; 5 = no value transferred
      if
        ;; Read constructor input
        local.get 0
        i32.const 16384
        i32.store offset=144
        i32.const 69258  ;; Input buffer
        local.get 0
        i32.const 144
        i32.add
        local.tee 7      ;; Local 7: buffer size ptr
        call 1           ;; seal_input(buf_ptr, buf_len_ptr)
        
        ;; Validate input buffer
        local.get 0
        i32.const 8
        i32.add
        local.get 0
        i32.load offset=144 ;; actual_len
        i32.const 69258     ;; buffer_ptr
        i32.const 16384     ;; buffer_capacity
        i32.const 66964     ;; error context
        call 17             ;; check_slice_length
        
        ;; Check minimum length (4 bytes for selector)
        local.get 0
        i32.load offset=12  ;; input_len
        local.tee 3
        i32.const 4
        i32.lt_u
        br_if 1            ;; @1 - Error: too short
        
        ;; Extract selector
        local.get 3
        i32.const 4
        i32.sub
        local.set 8        ;; Local 8: params_len
        local.get 0
        i32.load offset=8  ;; input_ptr
        local.tee 1
        i32.load align=1   ;; Load 4-byte selector
        local.tee 2        ;; Local 2: full selector
        
        ;; Split selector into bytes
        i32.const 24
        i32.shr_u
        local.set 4        ;; Local 4: byte 3
        local.get 2
        i32.const 16
        i32.shr_u
        local.set 5        ;; Local 5: byte 2
        local.get 2
        i32.const 8
        i32.shr_u
        local.set 6        ;; Local 6: byte 1
        
        block  ;; @3 - Constructor matching
          ;; Check byte 0
          local.get 2
          i32.const 255
          i32.and
          local.tee 2      ;; Local 2: byte 0 (reused)
          i32.const 25
          i32.ne
          if               ;; if byte0 != 0x19
            ;; Check for selector 0xED41A969 (new_with_dust_trap constructor)
            local.get 2
            i32.const 237  ;; byte0 == 0xED
            i32.eq
            br_if 1        ;; @3 - Match
            
            ;; Check for selector 0x9E5E159B (burn_from or similar)
            local.get 3
            i32.const -4
            i32.and
            i32.const 20
            i32.eq
            local.get 2
            i32.const 155  ;; byte0 == 0x9B
            i32.ne
            i32.or
            local.get 4
            i32.const 94   ;; byte3 == 0x5E
            i32.ne
            local.get 8
            i32.const 16
            i32.lt_u       ;; Need at least 16 bytes for params
            i32.or
            i32.or
            local.get 6
            i32.const 255
            i32.and
            i32.const 174  ;; byte1 == 0xAE
            i32.ne
            local.get 5
            i32.const 255
            i32.and
            i32.const 157  ;; byte2 == 0x9D
            i32.ne
            i32.or
            i32.or
            br_if 3        ;; @1 - No match
            
            ;; Matched: decode burn_from parameters (AccountId + u128 + u32)
            local.get 7
            local.get 1
            i64.load offset=4 align=1  ;; Load first part of AccountId
            local.get 1
            i64.load offset=12 align=1 ;; Load second part
            local.get 1
            i32.load offset=20 align=1 ;; Load u32 parameter
            call 75                    ;; Initialize with params
            
            local.get 7
            call 62                    ;; Encode and return AccountData
            call 58                    ;; return_ok_unit
            unreachable
          end
          
          ;; Selector 0xA9F5411B (new constructor)
          local.get 4
          i32.const 169
          i32.ne
          local.get 8
          i32.const 16
          i32.lt_u
          i32.or
          local.get 6
          i32.const 255
          i32.and
          i32.const 65     ;; byte1 == 0x41
          i32.ne
          local.get 5
          i32.const 255
          i32.and
          i32.const 244    ;; byte2 == 0xF4
          i32.ne
          i32.or
          i32.or
          local.get 3
          i32.const -4
          i32.and
          i32.const 20
          i32.eq
          local.get 3
          i32.const 24
          i32.sub
          i32.const 31
          i32.le_u
          i32.or
          i32.or
          br_if 2          ;; @1 - No match
          
          ;; Decode new() parameters (existential_deposit, max_locks)
          local.get 1
          i32.load offset=20 align=1
          local.set 3                ;; max_locks
          local.get 1
          i64.load offset=4 align=1
          local.set 9                ;; ed_low
          local.get 1
          i64.load offset=12 align=1
          local.set 10               ;; ed_high
          
          ;; Build initial contract state
          local.get 0
          i32.const 160
          i32.add
          local.tee 2
          local.get 1
          i32.const 40
          i32.add
          i64.load align=1
          i64.store
          local.get 0
          i32.const 168
          i32.add
          local.tee 4
          local.get 1
          i32.const 48
          i32.add
          i64.load align=1
          i64.store
          local.get 0
          i32.const 152
          i32.add
          local.tee 5
          local.get 1
          i32.const 32
          i32.add
          i64.load align=1
          i64.store
          local.get 0
          local.get 1
          i64.load offset=24 align=1
          i64.store offset=144
          
          ;; Get caller as owner
          local.get 0
          i32.const -64
          i32.sub
          call 45                    ;; get_caller_account_id
          
          ;; Initialize contract storage structure
          local.get 0
          i32.const 40
          i32.add
          i64.const 0
          i64.store                  ;; active_issuance = 0
          local.get 0
          i32.const 32
          i32.add
          i64.const 0
          i64.store
          
          ;; Copy owner AccountId to offset 109
          local.get 0
          i32.const 109
          i32.add
          local.get 5
          i64.load
          i64.store align=1
          local.get 0
          i32.const 117
          i32.add
          local.get 2
          i64.load
          i64.store align=1
          local.get 0
          i32.const 125
          i32.add
          local.get 4
          i64.load
          i64.store align=1
          
          ;; Store constructor parameters
          local.get 0
          local.get 10
          i64.store offset=56        ;; ed_high
          local.get 0
          local.get 9
          i64.store offset=48        ;; ed_low
          local.get 0
          i64.const 0
          i64.store offset=24        ;; total_issuance = 0
          local.get 0
          i64.const 0
          i64.store offset=16
          local.get 0
          i32.const 1
          i32.store8 offset=100      ;; Some flag (for owner)
          local.get 0
          local.get 3
          i32.store offset=96        ;; max_locks
          local.get 0
          local.get 0
          i64.load offset=144
          i64.store offset=101 align=1
          
          ;; Write initial state and return
          local.get 0
          i32.const 16
          i32.add
          call 62                    ;; return_account_data (returns full state)
          call 58                    ;; return_ok_unit
          unreachable
        end
        
        ;; Selector 0x1B4D9B27 (default constructor)
        local.get 4
        i32.const 27
        i32.ne
        local.get 6
        i32.const 255
        i32.and
        i32.const 75
        i32.ne
        i32.or
        local.get 5
        i32.const 255
        i32.and
        i32.const 157
        i32.ne
        i32.or
        br_if 1                      ;; @1 - No match
        
        ;; Call default constructor: new(existential_deposit: 1, max_locks: 10)
        local.get 0
        i32.const 144
        i32.add
        local.tee 0
        i64.const 1                  ;; existential_deposit = 1
        i64.const 0
        i32.const 10                 ;; max_locks = 10
        call 75                      ;; Initialize with defaults
        
        local.get 0
        call 62                      ;; return_account_data
        call 58                      ;; return_ok_unit
        unreachable
      end
      
      ;; Invalid selector error
      local.get 0
      i32.const 4
      i32.store8 offset=144
      local.get 0
      i32.const 144
      i32.add
      call 69                        ;; panic_invalid_enum
      unreachable
    end
    
    ;; Payment received error
    call 59                          ;; return_err
    unreachable)

  ;; Function 75: Initialize contract state (constructor helper)
  ;; Sets up initial contract storage with provided parameters
  ;; Used for: Both new() and new_with_dust_trap() constructors
  ;; Parameters: (state_ptr, existential_deposit_low, existential_deposit_high, max_locks) -> void
  (func $initialize_contract_state (;75;) (type 19) (param i32 i64 i64 i32)
    ;; Get caller as owner
    local.get 0
    i32.const 48
    i32.add
    call 45              ;; get_caller_account_id -> stores at state+48
    
    ;; Store existential_deposit (u128)
    local.get 0
    local.get 2          ;; ed_high
    i64.store offset=40
    local.get 0
    local.get 1          ;; ed_low
    i64.store offset=32
    
    ;; Initialize issuance to zero
    local.get 0
    i32.const 24
    i32.add
    i64.const 0
    i64.store            ;; active_issuance_high = 0
    local.get 0
    i32.const 16
    i32.add
    i64.const 0
    i64.store            ;; active_issuance_low = 0
    local.get 0
    i32.const 8
    i32.add
    i64.const 0
    i64.store            ;; total_issuance_high = 0
    local.get 0
    i64.const 0
    i64.store            ;; total_issuance_low = 0
    
    ;; Store max_locks and dust_trap
    local.get 0
    i32.const 0
    i32.store8 offset=84 ;; dust_trap = None (discriminant 0)
    local.get 0
    local.get 3          ;; max_locks
    i32.store offset=80)

  ;; Function 76: Check deposit feasibility (helper for transfers)
  ;; Validates that a deposit can proceed given current account state
  ;; Used for: Pre-transfer validation, can_deposit implementation
  ;; Parameters: (config_ptr, account_ptr, new_balance_ptr) -> result_code
  ;; Returns: 7=Success, 4=Overflow, 2=BalanceLow, 6=BelowMinimum
  (func $check_deposit_feasibility (;76;) (type 0) (param i32 i32 i32) (result i32)
    (local i32 i32 i32 i32 i32 i64 i64 i64 i64)
    ;; Local 3-7: i32 temps
    ;; Local 8-11: i64 balance values
    
    global.get 0
    i32.const 112
    i32.sub
    local.tee 3
    global.set 0
    
    ;; Load new balance to check
    local.get 2
    i64.load offset=8
    local.set 11         ;; new_balance_high
    local.get 2
    i64.load
    local.set 8          ;; new_balance_low
    
    block (result i32)   ;; Result code determination
      block              ;; @2 - ED check path
        ;; Get caller and check ownership
        local.get 0
        i32.load8_u offset=84 ;; Check dust_trap flag or similar
        i32.const 1
        i32.eq
        if               ;; Special case for existing account
          ;; Read current account state
          local.get 3
          i32.const 16
          i32.add
          local.get 0
          i32.const 85
          i32.add
          local.tee 0    ;; Account data ptr
          call 52        ;; read_account_from_storage
          
          ;; Add new balance to current balance
          i32.const 4
          local.get 8    ;; new_balance_low
          local.get 3
          i64.load offset=16 ;; current_free_low
          local.tee 8
          i64.add
          local.tee 9    ;; sum_low
          local.get 8
          i64.lt_u       ;; carry
          local.tee 1
          local.get 1
          i64.extend_i32_u
          local.get 3
          i64.load offset=24 ;; current_free_high
          local.tee 8
          local.get 11   ;; new_balance_high
          i64.add
          i64.add
          local.tee 11   ;; sum_high
          local.get 8
          i64.lt_u
          local.get 8
          local.get 11
          i64.eq
          select
          br_if 2        ;; Return Overflow if overflow
          drop
          
          ;; Update account with new balance
          local.get 3
          local.get 9
          i64.store offset=16
          local.get 3
          local.get 11
          i64.store offset=24
          local.get 0
          local.get 3
          i32.const 16
          i32.add
          call 28        ;; write_account_to_storage
          
          ;; Zero out the balance change (it's been applied)
          local.get 2
          i64.const 0
          i64.store offset=8
          local.get 2
          i64.const 0
          i64.store
          br 1           ;; @2 - Success
        end
        
        ;; New account case: build Transfer event and emit
        local.get 3
        i32.const 40
        i32.add
        local.get 1
        i32.const 24
        i32.add
        i64.load align=1
        i64.store
        local.get 3
        i32.const 32
        i32.add
        local.get 1
        i32.const 16
        i32.add
        i64.load align=1
        i64.store
        local.get 3
        local.get 8
        i64.store offset=48
        local.get 3
        local.get 11
        i64.store offset=56
        local.get 3
        local.get 1
        i64.load align=1
        i64.store offset=16
        local.get 3
        local.get 1
        i32.const 8
        i32.add
        i64.load align=1
        i64.store offset=24
        
        ;; Initialize event encoder
        local.get 3
        i64.const 16384
        i64.store offset=88 align=4
        local.get 3
        i32.const 69258
        i32.store offset=84
        local.get 3
        i32.const 84
        i32.add
        local.tee 1
        
        ;; Encode Transfer event (2 topics)
        i32.const 2
        call 39          ;; encode event count
        local.get 1
        i32.const 67619  ;; Event signature (possibly "Endowed")
        call 34          ;; encode_event_topic
        
        ;; Build event data
        local.get 3
        i32.const 96
        i32.add
        local.tee 4
        local.get 1
        local.get 3
        i32.const 16
        i32.add
        local.tee 6
        call 43          ;; build_event_topic_hash
        
        local.get 3
        i32.const -64
        i32.sub
        local.tee 5
        local.get 4
        call 44          ;; copy_event_buffer_state
        
        local.get 3
        i32.const 104
        i32.add
        local.get 3
        i32.const 72
        i32.add
        i32.load
        i32.store
        local.get 3
        local.get 3
        i64.load offset=64 align=4
        local.tee 9
        i64.store offset=96
        
        ;; Save topics metadata
        local.get 3
        i32.load offset=76
        local.set 1      ;; topics_ptr
        local.get 3
        i32.load offset=80
        local.set 7      ;; topics_len
        
        ;; Reset encoder for event data
        local.get 3
        i32.const 0
        i32.store offset=72
        local.get 3
        local.get 9
        i64.store offset=64 align=4
        
        ;; Encode event fields
        local.get 6
        local.get 5
        call 36          ;; encode_account_id
        local.get 8      ;; amount_low
        local.get 11     ;; amount_high
        local.get 5
        call 33          ;; encode_u128
        
        ;; Get event data slice
        local.get 3
        local.get 3
        i64.load offset=64 align=4
        i64.store offset=96
        local.get 3
        i32.const 8
        i32.add
        local.get 4
        local.get 3
        i32.load offset=72
        call 22          ;; get_encoder_slice
        
        ;; Emit event
        local.get 1      ;; topics_ptr
        local.get 7      ;; topics_len
        local.get 3
        i32.load offset=8
        local.get 3
        i32.load offset=12
        call 2           ;; seal_deposit_event
        
        ;; Zero out balance change
        local.get 2
        i64.const 0
        i64.store offset=8
        local.get 2
        i64.const 0
        i64.store
        
        ;; Update total issuance
        local.get 0
        i64.const 0
        local.get 0
        i64.load         ;; total_issuance_low
        local.tee 9
        local.get 8      ;; amount_low
        i64.sub
        local.tee 10
        local.get 9
        local.get 10
        i64.lt_u
        local.get 0
        i64.load offset=8 ;; total_issuance_high
        local.tee 10
        local.get 11     ;; amount_high
        i64.sub
        local.get 8
        local.get 9
        i64.gt_u
        i64.extend_i32_u
        i64.sub
        local.tee 9
        local.get 10
        i64.gt_u
        local.get 9
        local.get 10
        i64.eq
        select
        local.tee 1      ;; underflow flag
        select
        i64.store
        
        local.get 0
        i64.const 0
        local.get 9
        local.get 1
        select
        i64.store offset=8
        
        ;; Update active_issuance similarly
        local.get 0
        i64.const 0
        local.get 0
        i64.load offset=16
        local.tee 9
        local.get 8
        i64.sub
        local.tee 10
        local.get 9
        local.get 10
        i64.lt_u
        local.get 0
        i64.load offset=24
        local.tee 10
        local.get 11
        i64.sub
        local.get 8
        local.get 9
        i64.gt_u
        i64.extend_i32_u
        i64.sub
        local.tee 8
        local.get 10
        i64.gt_u
        local.get 8
        local.get 10
        i64.eq
        select
        local.tee 1
        select
        i64.store offset=16
        
        local.get 0
        i64.const 0
        local.get 8
        local.get 1
        select
        i64.store offset=24
      end
      
      i32.const 7        ;; Success
    end
    local.set 0
    
    local.get 3
    i32.const 112
    i32.add
    global.set 0
    local.get 0)         ;; Return result code

  ;; ============================================================================
  ;; VECTOR CAPACITY MANAGEMENT
  ;; ============================================================================

  ;; Function 77: Reserve capacity for vector growth
  ;; Ensures vector has enough capacity for additional elements
  ;; Used for: Vec<BalanceLock> operations, dynamic buffer expansion
  ;; Parameters: (vec_metadata_ptr, additional_capacity) -> void
  ;; Panics if: Allocation fails
  (func $vec_reserve_capacity (;77;) (type 2) (param i32 i32)
    (local i32 i32)
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2          ;; Local 2: stack frame
    global.set 0
    
    block                ;; @1 - Success/no-growth exit
      ;; Check if additional capacity is needed
      ;; Formula: additional <= (capacity - len)
      local.get 1        ;; additional_capacity
      local.get 0
      i32.load           ;; vec.capacity (at offset 0)
      local.get 0
      i32.load offset=8  ;; vec.len (at offset 8)
      local.tee 3        ;; Local 3: current_len
      i32.sub            ;; capacity - len = available space
      i32.le_u
      br_if 0            ;; @1 - Exit if enough space available
      
      ;; Need to grow: call reserve with metadata
      local.get 2
      i32.const 8
      i32.add
      local.get 0        ;; vec_metadata_ptr
      local.get 3        ;; current_len
      local.get 1        ;; additional
      i32.const 1        ;; align (byte-aligned)
      i32.const 1        ;; element_size (1 byte per element)
      call 56            ;; vec_reserve (func 56)
      
      ;; Check allocation result
      local.get 2
      i32.load offset=8
      local.tee 0        ;; Local 0: result_code (reused)
      i32.const -2147483647
      i32.eq
      br_if 0            ;; @1 - Success if result == -2147483647
      
      ;; Allocation failed - panic
      local.get 0        ;; result_code (contains align on failure)
      local.get 2
      i32.load offset=12 ;; error_info (contains size on failure)
      i32.const 68104    ;; "memory allocation failed" context
      call 24            ;; panic_alloc_failed
      unreachable
    end
    
    ;; Success exit
    local.get 2
    i32.const 16
    i32.add
    global.set 0)

  ;; ============================================================================
  ;; HEAP ALLOCATION PRIMITIVES
  ;; ============================================================================

  ;; Function 78: Allocate memory with alignment
  ;; Low-level allocation function wrapping alloc implementation
  ;; Used for: Vector backing storage, buffer allocation
  ;; Parameters: (result_ptr, align, size) -> void
  ;; Result: Stores (ptr, actual_size) at result_ptr, or (0, size) if failed
  (func $alloc_aligned (;78;) (type 3) (param i32 i32 i32)
    ;; Check if size is non-zero
    local.get 2          ;; size
    if                   ;; if size > 0
      ;; Call actual allocator
      local.get 1        ;; align
      local.get 2        ;; size
      call 79            ;; alloc(align, size) -> ptr
      local.set 1        ;; Local 1: allocated_ptr (reused)
    end
    
    ;; Store result
    local.get 0
    local.get 2          ;; size (or actual_size)
    i32.store offset=4
    local.get 0
    local.get 1          ;; ptr (or 0 if failed/size=0)
    i32.store)

  ;; Function 79: Core allocation function
  ;; Allocates memory from heap using bump allocator strategy
  ;; Used for: All heap allocations in the contract
  ;; Parameters: (align, size) -> ptr
  ;; Returns: Pointer to allocated memory, or 0 if failed
  ;; Algorithm: Bump allocator with alignment adjustment
  (func $alloc (;79;) (type 1) (param i32 i32) (result i32)
    (local i32)
    
    block (result i32)   ;; Return allocated pointer
      ;; Get current heap top from global allocator state
      i32.const 69244
      i32.load8_u        ;; Check if allocator initialized
      if                 ;; if initialized
        i32.const 69248
        i32.load         ;; Load current heap top
        br 1             ;; Return it
      end
      
      ;; First-time initialization
      memory.size        ;; Get current memory size in pages
      local.set 2        ;; Local 2: current_pages
      i32.const 69248
      i32.const 85648    ;; Set heap start at 85648 (after static data)
      i32.store
      i32.const 69244
      i32.const 1
      i32.store8         ;; Mark allocator as initialized
      i32.const 69252
      local.get 2        ;; Store current memory bound
      i32.const 16
      i32.shl            ;; Convert pages to bytes (page = 64 KiB)
      i32.store
      i32.const 85648    ;; Return initial heap top
    end
    local.set 2          ;; Local 2: heap_top (reused)
    
    block                ;; Allocation logic
      block (result i32) ;; Calculate aligned address
        i32.const 0
        local.get 0      ;; align
        local.get 2      ;; heap_top
        i32.add
        i32.const 1
        i32.sub          ;; heap_top + align - 1
        i32.const 0
        local.get 0      ;; align
        i32.sub
        i32.and          ;; Round down to align boundary: (x + align - 1) & ~(align - 1)
        local.tee 0      ;; Local 0: aligned_ptr (reused)
        local.get 1      ;; size
        i32.add
        local.tee 2      ;; Local 2: new_heap_top (reused)
        local.get 0      ;; aligned_ptr
        i32.lt_u
        br_if 0          ;; Return 0 if overflow in addition
        drop
        
        ;; Check if we need more memory
        i32.const 69252
        i32.load         ;; Load memory bound
        local.get 2      ;; new_heap_top
        i32.lt_u
        if               ;; if new_top > memory_bound
          ;; Grow memory
          local.get 1    ;; size
          i32.const 65535
          i32.add
          local.tee 2    ;; Local 2: size_rounded (reused)
          i32.const 16
          i32.shr_u      ;; Convert to pages
          memory.grow    ;; Grow memory by N pages
          local.tee 0    ;; Local 0: old_pages (reused)
          i32.const -1
          i32.eq
          br_if 2        ;; Failed to grow - return 0
          
          ;; Calculate new memory bound
          local.get 0    ;; old_pages
          i32.const 16
          i32.shl        ;; Convert pages to bytes
          local.tee 0    ;; Local 0: old_bound (reused)
          local.get 2    ;; size_rounded
          i32.const -65536
          i32.and        ;; Round down to page boundary
          i32.add
          local.tee 2    ;; Local 2: new_bound (reused)
          local.get 0    ;; old_bound
          i32.lt_u
          br_if 2        ;; Overflow check - return 0
          
          ;; Update memory bound
          i32.const 69252
          local.get 2    ;; new_bound
          i32.store
          
          ;; Recalculate aligned address from old bound
          i32.const 0
          local.get 0    ;; old_bound
          local.get 1    ;; size
          i32.add
          local.tee 2    ;; Local 2: new_heap_top (reused)
          local.get 0    ;; old_bound
          i32.lt_u
          br_if 1        ;; Return 0 if overflow
          drop
        end
        
        ;; Update heap top and return allocated pointer
        i32.const 69248
        local.get 2      ;; new_heap_top
        i32.store
        local.get 0      ;; Return aligned_ptr
      end
      return
    end
    i32.const 0)         ;; Return null on failure

  ;; ============================================================================
  ;; FORMATTED OUTPUT AND DISPLAY TRAITS
  ;; ============================================================================

  ;; Function 80: Format struct with debug representation
  ;; Simple wrapper that delegates to generic formatter with fixed vtable
  ;; Used for: Debug trait implementations, struct display
  ;; Parameters: (value_ptr, formatter_ptr) -> format_result
  ;; Returns: 0 on success, non-zero on error
  (func $fmt_struct_debug (;80;) (type 1) (param i32 i32) (result i32)
    local.get 0          ;; value_ptr
    i32.const 68052      ;; Debug vtable/format descriptor at 68052
    local.get 1          ;; formatter_ptr
    call 81)             ;; fmt_with_args (func 81)

  ;; Function 81: Generic formatter with arguments
  ;; Formats output using format string and argument list
  ;; Used for: All complex formatting operations (Debug, Display)
  ;; Parameters: (formatter_ptr, vtable_ptr, format_args_ptr) -> format_result
  ;; Returns: 0 on success, non-zero on formatting error
  (func $fmt_with_args (;81;) (type 0) (param i32 i32 i32) (result i32)
    (local i32 i32 i32 i32 i32 i32 i32)
    ;; Locals 3-9: iteration counters, flags, temp values
    
    global.get 0
    i32.const 16
    i32.sub
    local.tee 3          ;; Local 3: stack frame
    global.set 0
    
    ;; Store formatter and vtable references
    local.get 3
    local.get 1          ;; vtable_ptr
    i32.store offset=4
    local.get 3
    local.get 0          ;; formatter_ptr
    i32.store
    local.get 3
    i64.const 3758096416 ;; Formatter metadata/flags
    i64.store offset=8 align=4
    
    block (result i32)   ;; Final result
      block              ;; @2 - Early exit on error
        block            ;; @3 - Main formatting loop
          ;; Load format arguments structure
          local.get 2
          i32.load offset=16 ;; args.specifiers_ptr
          local.tee 1        ;; Local 1: specifiers (reused)
          if                 ;; if has specifiers (positional args)
            ;; Process format specifiers (complex formatting)
            local.get 2
            i32.load offset=20 ;; args.specifier_count
            local.tee 7        ;; Local 7: spec_count
            i32.const 24
            i32.mul
            local.set 0        ;; Local 0: spec_bytes (reused)
            local.get 7
            i32.const 536870911
            i32.and
            local.set 7        ;; Clamp count
            local.get 2
            i32.load offset=12 ;; args.formatters_ptr
            local.set 6
            local.get 2
            i32.load offset=8  ;; args.formatter_count
            local.set 4
            local.get 2
            i32.load offset=4  ;; args.pieces_ptr
            local.set 9
            local.get 2
            i32.load          ;; args.piece_count
            local.tee 8
            local.set 2        ;; Local 2: piece_index (reused)
            
            ;; Iterate through format specifiers
            loop             ;; @5
              local.get 0
              i32.eqz
              br_if 2        ;; @3 - Done with specifiers
              
              ;; Process each format piece between specifiers
              local.get 2
              i32.const 4
              i32.add
              i32.load         ;; piece.length
              local.tee 5      ;; Local 5: piece_len
              if               ;; if piece has content
                ;; Write the format string piece
                local.get 3
                i32.load        ;; formatter.buf
                local.get 2
                i32.load        ;; piece.ptr
                local.get 5     ;; piece.len
                local.get 3
                i32.load offset=4
                i32.load offset=12 ;; vtable.write_str
                call_indirect (type 0) ;; write_str(buf, str_ptr, str_len)
                br_if 4        ;; @2 - Exit on error
              end
              
              ;; Get and process format specifier
              local.get 4    ;; formatters_ptr
              local.get 1    ;; current_specifier
              i32.const 8
              i32.add
              call 95        ;; Extract specifier metadata
              local.set 5
              
              ;; Store specifier info for processing
              local.get 3
              local.get 4
              local.get 1
              call 95
              i32.store16 offset=14
              local.get 3
              local.get 5
              i32.store16 offset=12
              local.get 3
              local.get 1
              i32.load offset=20 ;; specifier.flags
              i32.store offset=8
              
              ;; Advance to next piece/specifier
              local.get 2
              i32.const 8
              i32.add
              local.set 2
              local.get 0
              i32.const 24
              i32.sub
              local.set 0
              local.get 1
              i32.load offset=16 ;; specifier.formatter_index
              local.set 5
              local.get 1
              i32.const 24
              i32.add
              local.set 1
              
              ;; Call the formatter function for this argument
              local.get 4
              local.get 5
              i32.const 3
              i32.shl          ;; index * 8 (formatter entry size)
              i32.add
              local.tee 5      ;; formatter entry ptr
              i32.load         ;; formatter.value_ptr
              local.get 3      ;; formatter context
              local.get 5
              i32.load offset=4 ;; formatter.vtable/function
              call_indirect (type 1) ;; value.fmt(formatter)
              i32.eqz
              br_if 0          ;; @5 - Continue if successful
            end
            br 2             ;; @2 - Exit on formatting error
          end
          
          ;; Simple format without specifiers (just string pieces)
          local.get 2
          i32.load offset=12 ;; args.simple_count
          local.tee 7
          i32.const 3
          i32.shl
          local.set 0        ;; bytes for simple args
          local.get 2
          i32.load offset=4  ;; pieces_ptr
          local.set 9
          local.get 2
          i32.load           ;; piece_count
          local.set 8
          local.get 2
          i32.load offset=8  ;; simple_args_ptr
          local.set 2
          i32.const 0
          local.set 1        ;; Index counter
          
          ;; Iterate through simple format pieces
          loop               ;; @4
            local.get 0
            local.get 1
            i32.eq
            br_if 1          ;; @3 - Done
            
            local.get 1
            local.get 8      ;; pieces array base
            i32.add
            local.tee 4      ;; piece entry ptr
            i32.const 4
            i32.add
            i32.load         ;; piece.length
            local.tee 6
            if               ;; if has content
              ;; Write piece
              local.get 3
              i32.load       ;; formatter.buf
              local.get 4
              i32.load       ;; piece.ptr
              local.get 6    ;; piece.len
              local.get 3
              i32.load offset=4
              i32.load offset=12
              call_indirect (type 0)
              br_if 3        ;; @2 - Error
            end
            
            ;; Advance to next piece
            local.get 1
            i32.const 8
            i32.add
            local.set 1
            
            ;; Get formatter for this argument
            local.get 2
            i32.load offset=4 ;; formatter function
            local.set 4
            local.get 2
            i32.load          ;; argument value
            local.set 6
            local.get 2
            i32.const 8
            i32.add
            local.set 2
            
            ;; Call formatter
            local.get 6
            local.get 3
            local.get 4
            call_indirect (type 1) ;; arg.fmt(formatter)
            i32.eqz
            br_if 0          ;; @4 - Continue if successful
          end
          br 1               ;; @2 - Error
        end
        
        ;; Write final piece (after last argument)
        local.get 7        ;; piece_count
        local.get 9        ;; pieces_base
        i32.lt_u
        if                 ;; if there's a final piece
          local.get 3
          i32.load         ;; formatter.buf
          local.get 8      ;; pieces array
          local.get 7      ;; final piece index
          i32.const 3
          i32.shl
          i32.add
          local.tee 0      ;; final piece entry
          i32.load         ;; piece.ptr
          local.get 0
          i32.load offset=4 ;; piece.len
          local.get 3
          i32.load offset=4
          i32.load offset=12
          call_indirect (type 0)
          br_if 1          ;; @2 - Error
        end
        
        ;; Success
        i32.const 0
        br 1             ;; @1 - Return success
      end
      
      ;; Error path
      i32.const 1
    end
    local.set 1
    
    local.get 3
    i32.const 16
    i32.add
    global.set 0
    local.get 1)         ;; Return result

  ;; ============================================================================
  ;; STRING FORMATTING UTILITIES
  ;; ============================================================================

  ;; Function 82: Write bytes to formatter buffer (Vec<u8>::extend_from_slice)
  ;; Appends bytes to a growable buffer, reserving capacity as needed
  ;; Used for: String building during format operations, buffer accumulation
  ;; Parameters: (buffer_ptr, data_ptr, data_len) -> status
  ;; Returns: Always 0 (success)
  (func $formatter_write_bytes (;82;) (type 0) (param i32 i32 i32) (result i32)
    (local i32)
    
    ;; Reserve capacity for the new data
    local.get 0          ;; buffer_ptr (Vec metadata)
    local.get 2          ;; data_len
    call 77              ;; vec_reserve_capacity (ensures space available)
    
    ;; Get current buffer length (write position)
    local.get 0
    i32.load offset=8    ;; buffer.len
    local.set 3          ;; Local 3: old_len
    
    ;; Copy data if len > 0
    local.get 2          ;; data_len
    if                   ;; if data_len > 0
      local.get 0
      i32.load offset=4  ;; buffer.ptr (actual data pointer)
      local.get 3        ;; old_len (write offset)
      i32.add            ;; ptr + old_len = write position
      local.get 1        ;; data_ptr (source)
      local.get 2        ;; data_len
      memory.copy        ;; Copy bytes
    end
    
    ;; Update buffer length
    local.get 0
    local.get 2          ;; data_len
    local.get 3          ;; old_len
    i32.add              ;; new_len = old_len + data_len
    i32.store offset=8   ;; buffer.len = new_len
    
    i32.const 0)         ;; Always return 0 (success)

  ;; Function 83: No-op destructor
  ;; Empty drop function (no cleanup needed)
  ;; Used for: Types with no drop logic
  ;; Parameters: (ptr) -> void
  (func $nop_drop (;83;) (type 4) (param i32)
    nop)                 ;; Literally nothing

  ;; Function 84: Write UTF-8 character to formatter buffer
  ;; Encodes Unicode codepoint as UTF-8 and appends to buffer
  ;; Used for: Character formatting in Display/Debug traits
  ;; Parameters: (buffer_ptr, char_codepoint) -> format_result
  ;; Returns: Always 0 (success)
  (func $fmt_write_char (;84;) (type 1) (param i32 i32) (result i32)
    (local i32 i32 i32 i32)
    ;; Local 2: write_ptr
    ;; Local 3: old_len
    ;; Local 4: is_1byte flag
    ;; Local 5: byte_count
    
    ;; Save current buffer length
    local.get 0
    i32.load offset=8    ;; buffer.len
    local.set 3
    
    ;; Determine UTF-8 encoding length (1-4 bytes)
    local.get 0
    block (result i32)   ;; Calculate byte count needed
      i32.const 1
      local.get 1        ;; codepoint
      i32.const 128
      i32.lt_u           ;; Check if ASCII (< 128)
      local.tee 4        ;; Local 4: is_1byte flag
      br_if 0            ;; Return 1 if ASCII
      drop
      
      i32.const 2
      local.get 1
      i32.const 2048
      i32.lt_u           ;; Check if fits in 2 bytes (< 2048)
      br_if 0            ;; Return 2 if 2-byte encoding
      drop
      
      ;; 3 or 4 bytes
      i32.const 3
      i32.const 4
      local.get 1
      i32.const 65536
      i32.lt_u           ;; Check if fits in 3 bytes (< 65536)
      select             ;; Select 3 if true, 4 if false
    end
    local.tee 5          ;; Local 5: byte_count (1, 2, 3, or 4)
    call 77              ;; vec_reserve_capacity (ensure space for byte_count)
    
    ;; Calculate write position
    local.get 0
    i32.load offset=4    ;; buffer.ptr
    local.get 0
    i32.load offset=8    ;; buffer.len (current end position)
    i32.add
    local.set 2          ;; Local 2: write_ptr
    
    block                ;; @1 - Done encoding
      block              ;; @2 - 4-byte encoding
        block            ;; @3 - 2-byte encoding
          ;; Check which encoding to use
          local.get 4    ;; is_1byte
          i32.eqz
          if             ;; if NOT 1-byte (multi-byte encoding)
            local.get 1
            i32.const 2048
            i32.lt_u
            br_if 1      ;; @3 - 2-byte encoding
            
            local.get 1
            i32.const 65536
            i32.ge_u
            br_if 2      ;; @2 - 4-byte encoding
            
            ;; 3-byte encoding: 1110xxxx 10xxxxxx 10xxxxxx
            local.get 2
            local.get 1
            i32.const 63
            i32.and
            i32.const 128
            i32.or
            i32.store8 offset=2 ;; byte 2: 10(bits 5-0)
            
            local.get 2
            local.get 1
            i32.const 12
            i32.shr_u
            i32.const 224
            i32.or
            i32.store8       ;; byte 0: 1110(bits 15-12)
            
            local.get 2
            local.get 1
            i32.const 6
            i32.shr_u
            i32.const 63
            i32.and
            i32.const 128
            i32.or
            i32.store8 offset=1 ;; byte 1: 10(bits 11-6)
            br 3             ;; @1 - Done
          end
          
          ;; 1-byte encoding: 0xxxxxxx (ASCII)
          local.get 2
          local.get 1
          i32.store8         ;; Direct byte write
          br 2               ;; @1 - Done
        end
        
        ;; 2-byte encoding: 110xxxxx 10xxxxxx
        local.get 2
        local.get 1
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=1 ;; byte 1: 10(bits 5-0)
        
        local.get 2
        local.get 1
        i32.const 6
        i32.shr_u
        i32.const 192
        i32.or
        i32.store8       ;; byte 0: 110(bits 10-6)
        br 1             ;; @1 - Done
      end
      
      ;; 4-byte encoding: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
      local.get 2
      local.get 1
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=3 ;; byte 3: 10(bits 5-0)
      
      local.get 2
      local.get 1
      i32.const 18
      i32.shr_u
      i32.const 240
      i32.or
      i32.store8       ;; byte 0: 11110(bits 20-18)
      
      local.get 2
      local.get 1
      i32.const 6
      i32.shr_u
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=2 ;; byte 2: 10(bits 11-6)
      
      local.get 2
      local.get 1
      i32.const 12
      i32.shr_u
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 offset=1 ;; byte 1: 10(bits 17-12)
    end
    
    ;; Update buffer length
    local.get 0
    local.get 3          ;; old_len
    local.get 5          ;; byte_count
    i32.add
    i32.store offset=8   ;; buffer.len = old_len + byte_count
    
    i32.const 0)         ;; Always return 0 (success)

  ;; Function 85: Format integer (u32/usize) as decimal string
  ;; Converts unsigned integer to decimal ASCII representation
  ;; Used for: Formatting numbers in error messages, debug output
  ;; Parameters: (formatter_ptr, value_ptr) -> format_result
  ;; Returns: 0 on success, non-zero on error
  (func $fmt_u32_decimal (;85;) (type 1) (param i32 i32) (result i32)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i64)
    ;; Locals 2-10: digit buffer indices, division results
    ;; Local 11: i64 for intermediate calculations
    
    global.get 0
    i32.const 32
    i32.sub
    local.tee 4          ;; Local 4: stack frame
    global.set 0
    
    i32.const 10
    local.set 3          ;; Local 3: buffer_offset (start from end)
    local.get 0
    i32.load             ;; Load value to format
    local.tee 6          ;; Local 6: remaining_value
    local.set 0          ;; Local 0: work_value (reused)
    
    block                ;; @1 - Exit when value fully processed
      loop               ;; @2 - Divide by powers of 10
        ;; Check if we can stop (value < 1000)
        local.get 0
        i32.const 999
        i32.le_u
        if                 ;; if value <= 999
          ;; Final digit(s) processing
          block            ;; @4
            local.get 0
            i32.const 9
            i32.gt_u
            br_if 0        ;; @4 - Need 2+ digits
            
            ;; Single digit case
            local.get 0
            local.set 2
            br 3           ;; @1 - Exit
          end
        else
          ;; Process 4 digits at a time using division by 10000
          local.get 4
          i32.const 22
          i32.add
          local.get 3
          i32.add
          local.tee 2      ;; Write position
          i32.const 3
          i32.sub
          local.get 0
          local.get 0
          i32.const 10000
          i32.div_u      ;; value / 10000
          local.tee 0    ;; quotient
          i32.const 55536
          i32.mul
          i32.add        ;; remainder = value - (quotient * 10000)
          local.tee 5    ;; Local 5: remainder (reused for hundreds)
          i32.const 65535
          i32.and
          i32.const 100
          i32.div_u      ;; remainder / 100
          local.tee 7    ;; Local 7: hundreds
          i32.const 1
          i32.shl
          local.tee 8    ;; Local 8: table_offset
          i32.const 68530 ;; Two-digit lookup table
          i32.add
          i32.load8_u
          i32.store8     ;; Write tens digit
          
          local.get 2
          i32.const 4
          i32.sub
          local.get 8
          i32.const 68529
          i32.add
          i32.load8_u
          i32.store8     ;; Write hundreds digit
          
          local.get 2
          i32.const 1
          i32.sub
          local.get 7
          i32.const -100
          i32.mul
          local.get 5
          i32.add        ;; units = remainder - (hundreds * 100)
          i32.const 65535
          i32.and
          i32.const 1
          i32.shl
          local.tee 5    ;; table offset for units
          i32.const 68530
          i32.add
          i32.load8_u
          i32.store8     ;; Write units digit
          
          local.get 2
          i32.const 2
          i32.sub
          local.get 5
          i32.const 68529
          i32.add
          i32.load8_u
          i32.store8     ;; Write tens of units
          
          local.get 3
          i32.const 4
          i32.sub
          local.set 3    ;; Move buffer offset back 4
          br 1           ;; @2 - Continue with quotient
        end
      end
      
      ;; Process final 1-3 digits
      local.get 4
      i32.const 22
      i32.add
      local.get 3
      i32.add
      local.tee 5        ;; Write position
      i32.const 1
      i32.sub
      local.get 0
      i32.const 65535
      i32.and
      i32.const 100
      i32.div_u
      local.tee 2        ;; Local 2: final_digits (reused)
      i32.const -100
      i32.mul
      local.get 0
      i32.add
      i32.const 65535
      i32.and
      i32.const 1
      i32.shl
      local.tee 0        ;; Table offset for last 2 digits
      i32.const 68530
      i32.add
      i32.load8_u
      i32.store8         ;; Write ones digit
      
      local.get 5
      i32.const 2
      i32.sub
      local.get 0
      i32.const 68529
      i32.add
      i32.load8_u
      i32.store8         ;; Write tens digit
      
      local.get 3
      i32.const 2
      i32.sub
      local.set 3        ;; Adjust offset
    end
    
    ;; Handle leading digit(s)
    i32.const 0
    local.get 6          ;; original_value
    local.get 2          ;; final_digits
    select
    i32.eqz
    if                   ;; if value >= 100, need leading digit
      local.get 3
      i32.const 1
      i32.sub
      local.tee 3
      local.get 4
      i32.const 22
      i32.add
      i32.add
      local.get 2
      i32.const 1
      i32.shl
      i32.const 30
      i32.and            ;; Ensure valid offset
      i32.const 68530
      i32.add
      i32.load8_u
      i32.store8         ;; Write leading digit
    end
    
    ;; Calculate string length and position
    i32.const 10
    local.get 3
    i32.sub
    local.tee 5          ;; Local 5: str_len
    local.get 1
    i32.load offset=8    ;; formatter.flags
    local.tee 2          ;; Local 2: flags (reused)
    i32.const 2097152
    i32.and              ;; SIGN_PLUS flag
    local.tee 7
    i32.const 21
    i32.shr_u
    i32.add
    local.set 0          ;; Local 0: total_len (with sign)
    
    i32.const 0
    local.set 6          ;; Local 6: sign_written flag
    i32.const 43         ;; '+' character
    i32.const 1114112    ;; No sign marker
    local.get 7
    select
    local.set 7          ;; Local 7: sign_char
    
    local.get 4
    i32.const 22
    i32.add
    local.get 3
    i32.add
    local.set 3          ;; Local 3: digit_ptr
    
    ;; Handle padding for sign
    local.get 2
    i32.const 8388608
    i32.and              ;; SIGN_AWARE_ZERO_PAD flag
    if
      i32.const 1
      local.set 6        ;; sign_written = true
      i32.const 1
      i32.const 1
      call 88            ;; Calculate padding
      local.get 0
      i32.add
      local.set 0        ;; Adjust total length
    end
    
    block                ;; Padding and output logic
      block              ;; @2
        block            ;; @3
          block          ;; @4
            ;; Check if padding needed
            local.get 1
            i32.load16_u offset=12 ;; formatter.width
            local.tee 8
            local.get 0
            i32.gt_u
            if             ;; if width > content_len
              local.get 2
              i32.const 16777216
              i32.and      ;; LEFT_ALIGN flag
              br_if 1      ;; @4 - Left-aligned padding
              
              ;; Right-aligned padding (pad before content)
              i32.const 1
              local.set 2
              local.get 4
              local.get 1
              local.get 8
              local.get 0
              i32.sub
              i32.const 1  ;; Padding type
              call 91      ;; Insert padding
              
              local.get 4
              i32.load     ;; Check padding result
              local.tee 8
              i32.const 1114112
              i32.eq
              br_if 4      ;; @1 - Padding failed
              
              local.get 4
              i32.load16_u offset=4
              local.set 9  ;; Padding count
              
              ;; Write sign if needed
              local.get 1
              i32.load     ;; formatter.buf
              local.tee 0
              local.get 1
              i32.load offset=4
              local.tee 1
              local.get 7  ;; sign_char
              local.get 6  ;; sign_written
              call 90      ;; Write sign
              br_if 4      ;; @1 - Error
              
              ;; Write digit string
              local.get 0
              local.get 3  ;; digit_ptr
              local.get 5  ;; str_len
              local.get 1
              i32.load offset=12
              call_indirect (type 0)
              br_if 4      ;; @1 - Error
              
              ;; Write padding
              local.get 8  ;; pad_char
              local.get 9  ;; pad_count
              local.get 0
              local.get 1
              call 92      ;; Write padding
              local.set 2
              br 4         ;; @1 - Return result
            end
            
            ;; No padding needed - direct output
            local.get 1
            i32.load     ;; formatter.buf
            local.tee 0
            local.get 1
            i32.load offset=4
            local.tee 1
            local.get 7  ;; sign_char
            local.get 6  ;; sign_written
            call 90      ;; Write sign
            i32.eqz
            br_if 1      ;; @3 - Continue to digits
            br 2         ;; @2 - Error
          end
          
          ;; Left-aligned: content then padding
          local.get 1
          local.get 1
          i64.load offset=8 align=4
          local.tee 11
          i32.wrap_i64
          i32.const -1612709888
          i32.and
          i32.const 536870960
          i32.or
          i32.store offset=8 ;; Set formatter flags
          
          local.get 1
          i32.load        ;; formatter.buf
          local.tee 9
          local.get 1
          i32.load offset=4
          local.tee 10
          local.get 7     ;; sign_char
          local.get 6     ;; sign_written
          call 90
          br_if 1         ;; @2 - Error
          
          ;; Prepare padding after content
          i32.const 1
          local.set 2
          local.get 4
          i32.const 8
          i32.add
          local.get 1
          local.get 8     ;; width
          local.get 0     ;; content_len
          i32.sub
          i32.const 1     ;; Padding type
          call 91
          
          local.get 4
          i32.load offset=8
          local.tee 0
          i32.const 1114112
          i32.eq
          br_if 2         ;; @1 - Padding failed
          
          local.get 4
          i32.load16_u offset=12
          local.set 6     ;; Padding count
          
          ;; Write content
          local.get 9
          local.get 3     ;; digit_ptr
          local.get 5     ;; str_len
          local.get 10
          i32.load offset=12
          call_indirect (type 0)
          br_if 2         ;; @1 - Error
          
          ;; Write trailing padding
          local.get 0     ;; pad_char
          local.get 6     ;; pad_count
          local.get 9
          local.get 10
          call 92
          br_if 2         ;; @1 - Error
          
          ;; Restore formatter flags
          local.get 1
          local.get 11
          i64.store offset=8 align=4
          i32.const 0
          local.set 2
          br 2            ;; @1 - Return success
        end
        
        ;; No padding: write sign and digits
        local.get 0
        local.get 3       ;; digit_ptr
        local.get 5       ;; str_len
        local.get 1
        i32.load offset=12
        call_indirect (type 0)
        local.set 2
        br 1              ;; @1
      end
      
      ;; Error path
      i32.const 1
      local.set 2
    end
    
    local.get 4
    i32.const 32
    i32.add
    global.set 0
    local.get 2)

  ;; Function 86: Allocate and copy bytes (string/slice allocation)
  ;; Creates a new heap allocation and copies data into it
  ;; Used for: String duplication, error message building
  ;; Parameters: (result_ptr, size, source_ptr) -> void
  ;; Result: Stores (capacity, ptr, len) at result_ptr
  ;; Panics if: Allocation fails
  (func $alloc_and_copy_bytes (;86;) (type 3) (param i32 i32 i32)
    (local i32 i32 i32)
    ;; Local 3-5: stack frame, pointers
    
    global.get 0
    i32.const 16
    i32.sub
    local.tee 3
    global.set 0
    
    block                ;; Allocation and copy logic
      ;; Validate size is non-negative
      local.get 1        ;; size
      i32.const 0
      i32.ge_s
      if                 ;; if size >= 0
        local.get 1
        i32.eqz
        if               ;; if size == 0
          i32.const 1    ;; Use dummy non-null pointer
          local.set 5
          br 2           ;; Exit - nothing to copy
        end
        
        ;; Allocate memory
        i32.const 1
        local.set 4      ;; align = 1 (byte-aligned)
        local.get 3
        i32.const 8
        i32.add
        i32.const 1      ;; align
        local.get 1      ;; size
        call 78          ;; alloc_aligned
        
        local.get 3
        i32.load offset=8 ;; allocated_ptr
        local.tee 5
        br_if 1          ;; Continue if allocation succeeded
      end
      
      ;; Allocation failed or invalid size
      local.get 4        ;; align
      local.get 1        ;; size
      local.get 2        ;; error_context_ptr
      call 24            ;; panic_alloc_failed
      unreachable
    end
    
    ;; Store allocation metadata
    local.get 0
    i32.const 0
    i32.store offset=8   ;; len = 0 initially
    local.get 0
    local.get 5          ;; ptr
    i32.store offset=4
    local.get 0
    local.get 1          ;; capacity = size
    i32.store
    
    local.get 3
    i32.const 16
    i32.add
    global.set 0)

  ;; Function 87: Display panic message and abort
  ;; Final panic handler that formats and displays error before aborting
  ;; Used for: All panic paths in the contract
  ;; Parameters: (panic_info_ptr) -> never_returns
  (func $display_panic_and_abort (;87;) (type 4) (param i32)
    (local i32 i32 i32 i32 i32 i32 i32 i32)
    ;; Locals 1-8: formatting state, buffer pointers
    
    global.get 0
    i32.const 48
    i32.sub
    local.tee 1          ;; Local 1: stack frame
    global.set 0
    
    ;; Build panic message prefix
    local.get 1
    local.get 0          ;; panic_info_ptr
    i32.store
    local.get 1
    i32.const 2
    i32.store offset=20
    local.get 1
    i32.const 69092      ;; "panicked at " string
    i32.store offset=16
    local.get 1
    i64.const 1
    i64.store offset=28 align=4
    local.get 1
    i32.const 8
    i32.store offset=44
    local.get 1
    local.get 1
    i32.const 40
    i32.add
    i32.store offset=24
    local.get 1
    local.get 1
    i32.store offset=40
    
    ;; Format the panic message
    local.get 1
    i32.const 4
    i32.add
    local.set 4          ;; Output buffer descriptor
    i32.const 0
    local.set 0          ;; Buffer length
    
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2          ;; Local 2: inner stack frame
    global.set 0
    
    ;; Load panic info structure
    local.get 1
    i32.const 16
    i32.add
    local.tee 5          ;; Local 5: panic_args_ptr
    i32.load offset=12   ;; args.count
    local.set 6
    local.get 5
    i32.load             ;; args.fmt_string
    local.set 3
    
    block                ;; Message building logic
      block              ;; @2
        block            ;; @3
          ;; Allocate output buffer
          local.get 2
          block (result i32)
            block          ;; @5
              block        ;; @6
                block (result i32) ;; @7
                  block    ;; @8
                    block  ;; @9
                      ;; Determine buffer strategy based on args
                      local.get 5
                      i32.load offset=4
                      local.tee 8
                      br_table 0 (;@9;) 1 (;@8;) 3 (;@6;)
                    end
                    
                    ;; No arguments case
                    local.get 6
                    br_if 3  ;; @5 - Has complex args
                    i32.const 1
                    br 1     ;; @7 - Simple string
                  end
                  
                  ;; One argument case
                  local.get 6
                  br_if 1    ;; @6 - Has args to process
                  
                  ;; Load single string argument
                  local.get 3
                  i32.load offset=4
                  local.set 0
                  local.get 3
                  i32.load
                end
                local.set 3
                
                ;; Allocate for single string
                local.get 2
                local.get 0
                i32.const 68292  ;; String context
                call 86          ;; alloc_and_copy_bytes
                
                ;; Copy string content if non-empty
                local.get 0
                if                 ;; if len > 0
                  local.get 2
                  i32.load offset=4
                  local.get 3      ;; source
                  local.get 0      ;; len
                  memory.copy
                end
                
                ;; Store result in output descriptor
                local.get 4
                i32.const 8
                i32.add
                local.get 0
                i32.store
                local.get 4
                local.get 2
                i64.load align=4
                i64.store align=4
                br 3             ;; @3 - Done
              end
              
              ;; Multiple arguments: calculate total size
              local.get 3
              i32.const 4
              i32.add
              local.set 7      ;; String pieces iterator
              loop             ;; Calculate total string length
                local.get 7
                i32.load       ;; piece.length
                local.get 0
                i32.add
                local.set 0    ;; Accumulate length
                local.get 7
                i32.const 8
                i32.add
                local.set 7
                local.get 8
                i32.const 1
                i32.sub
                local.tee 8
                br_if 0        ;; Continue for each piece
              end
              
              ;; Additional length from arguments
              local.get 0
              local.get 6
              i32.eqz
              br_if 1        ;; @4 - Use calculated length
              drop
              
              ;; Estimate argument lengths (conservative upper bound)
              local.get 0
              i32.const 15
              i32.gt_u
              br_if 0        ;; @5 - Complex size calculation
              
              i32.const 0
              local.get 3
              i32.load offset=4
              i32.eqz
              br_if 1        ;; @4
              drop
            end
            
            ;; Complex size calculation (double for safety margin)
            local.get 0
            i32.const 0
            local.get 0
            i32.const 0
            i32.gt_s
            select
            i32.const 1
            i32.shl        ;; size * 2
          end
          i32.const 68308  ;; Allocation context
          call 86          ;; alloc_and_copy_bytes
          
          ;; Format the message into buffer
          local.get 2
          local.get 5      ;; panic_args_ptr
          call 80          ;; fmt_struct_display
          br_if 1          ;; @2 - Formatting error
          
          ;; Store formatted result
          local.get 4
          local.get 2
          i64.load align=4
          i64.store align=4
          local.get 4
          i32.const 8
          i32.add
          local.get 2
          i32.const 8
          i32.add
          i32.load
          i32.store
        end
        
        ;; Success path
        local.get 2
        i32.const 16
        i32.add
        global.set 0
        br 1             ;; Continue to display
      end
      
      ;; Formatting failed - report error
      i32.const 68188    ;; "formatting failed" context
      i32.const 86
      local.get 2
      i32.const 15
      i32.add
      i32.const 68028    ;; Error location
      i32.const 68276    ;; Additional context
      call 47            ;; panic_with_context
      unreachable
    end
    
    ;; Display the formatted panic message
    local.get 1
    i32.load offset=8    ;; message.len
    local.set 0
    local.get 1
    i32.load offset=12   ;; message.ptr
    local.set 1
    
    block                ;; Debug message output
      ;; Check if debug output is enabled
      i32.const 69256
      i32.load8_u        ;; debug_enabled flag
      i32.eqz
      if
        i32.const 69257
        i32.load8_u      ;; abort_on_panic flag
        br_if 1          ;; Skip debug if already aborting
      end
      
      ;; Output debug message
      local.get 0        ;; message.len
      local.get 1        ;; message.ptr
      call 5             ;; seal_debug_message
      i32.const 9        ;; Expected return value
      i32.ne
      if
        ;; Mark debug as successful
        i32.const 69256
        i32.const 1
        i32.store8
      end
      
      ;; Mark abort in progress
      i32.const 69257
      i32.const 1
      i32.store8
    end
    
    unreachable)         ;; Trap execution

  ;; ============================================================================
  ;; STRING LENGTH AND PADDING UTILITIES
  ;; ============================================================================

  ;; Function 88: Calculate string length in code points (UTF-8 aware)
  ;; Counts Unicode characters (not bytes) in a string range
  ;; Used for: Padding calculations, width determination
  ;; Parameters: (start_ptr, end_ptr) -> char_count
  ;; Returns: Number of Unicode code points in range
  (func $utf8_char_count (;88;) (type 1) (param i32 i32) (result i32)
    (local i32 i32 i32 i32 i32 i32 i32)
    ;; Local 2: char_count
    ;; Locals 3-8: loop variables, byte masks
    
    block                ;; Fast path check
      ;; Calculate byte count
      local.get 1        ;; end_ptr
      local.get 0        ;; start_ptr
      i32.sub
      local.tee 2        ;; Local 2: byte_count
      i32.const 16
      i32.ge_u
      if                 ;; if >= 16 bytes, use optimized loop
        ;; Align start pointer to 4-byte boundary
        local.get 0
        local.get 0
        i32.const 3
        i32.add
        i32.const -4
        i32.and
        local.tee 1      ;; Local 1: aligned_start (reused)
        local.get 0
        i32.sub
        local.tee 0      ;; Local 0: alignment_offset (reused)
        call 89          ;; Count chars in alignment bytes
        
        ;; Process aligned 4-byte chunks
        local.get 1
        local.get 2
        local.get 0
        i32.sub
        local.tee 0      ;; remaining bytes
        i32.const -4
        i32.and          ;; Round down to multiple of 4
        i32.add
        
        ;; Count chars in aligned portion
        local.get 0
        i32.const 3
        i32.and          ;; trailing bytes (not aligned)
        call 89
        i32.add
        local.set 3      ;; Local 3: total_count (accumulated)
        
        ;; Process 4-byte chunks efficiently
        local.get 0
        i32.const 2
        i32.shr_u        ;; Divide by 4 (number of words)
        local.set 0
        
        loop             ;; Process in batches
          local.get 0    ;; words_remaining
          local.tee 5
          i32.eqz
          br_if 2        ;; @1 - Done
          
          ;; Process up to 192 words at a time
          local.get 1    ;; current_ptr
          local.tee 2
          i32.const 192
          local.get 0
          local.get 0
          i32.const 192
          i32.ge_u
          select
          local.tee 6    ;; Local 6: batch_size
          i32.const 2
          i32.shl        ;; batch_size * 4 (bytes)
          local.tee 7    ;; Local 7: batch_bytes
          i32.const 1008
          i32.and        ;; Ensure within bounds
          i32.add
          local.set 8    ;; Local 8: batch_end
          
          ;; Count UTF-8 continuation bytes in batch
          i32.const 0
          local.set 0    ;; continuation_count
          local.get 2
          local.set 4    ;; read_ptr
          
          loop           ;; Process 16 words (64 bytes) at a time
            block
              local.get 4
              local.get 8
              i32.ne
              if           ;; if not at end
                i32.const 0
                local.set 1
                
                ;; Inner loop: process 16 bytes
                loop
                  local.get 1
                  i32.const 16
                  i32.eq
                  br_if 2  ;; Done with this chunk
                  
                  ;; Count UTF-8 continuation bytes (0b10xxxxxx)
                  ;; Algorithm: ((byte ^ 0xC0) >> 7) & ((byte >> 6) ^ 0b11)
                  local.get 0  ;; continuation_count
                  local.get 1
                  local.get 4
                  i32.add
                  i32.load     ;; Load 4 bytes
                  local.tee 0  ;; Local 0: word (reused)
                  i32.const -1
                  i32.xor
                  i32.const 7
                  i32.shr_u    ;; Invert and shift
                  local.get 0
                  i32.const 6
                  i32.shr_u
                  i32.or
                  i32.const 16843009  ;; Magic number for byte-parallel ops
                  i32.and
                  i32.add
                  local.set 0  ;; Accumulate continuation bytes
                  
                  local.get 1
                  i32.const 4
                  i32.add
                  local.set 1
                  br 0
                end
                unreachable
              end
              
              ;; Reduce continuation count to actual char count
              local.get 0
              i32.const 8
              i32.shr_u
              i32.const 16711935
              i32.and
              local.get 0
              i32.const 16711935
              i32.and
              i32.add
              i32.const 65537
              i32.mul
              i32.const 16
              i32.shr_u
              local.get 3    ;; Previous total
              i32.add
              local.set 3    ;; New total
              
              ;; Continue to next batch
              local.get 5
              local.get 6
              i32.sub
              local.set 0
              local.get 2
              local.get 7
              i32.add
              local.set 1
              
              ;; Check if more whole batches remain
              local.get 6
              i32.const 3
              i32.and
              i32.eqz
              br_if 2        ;; Continue outer loop
              
              ;; Process remaining partial batch (< 192 words)
              local.get 2
              local.get 6
              i32.const 252  ;; Align to 4-word boundary
              i32.and
              i32.const 2
              i32.shl
              i32.add
              local.set 0    ;; Start of partial batch
              
              ;; Calculate partial batch size
              i32.const 192
              local.get 5
              local.get 5
              i32.const 192
              i32.ge_u
              select
              i32.const 3
              i32.and
              i32.const 2
              i32.shl
              local.set 1    ;; Partial batch byte count
              
              i32.const 0
              local.set 2    ;; continuation_count
              
              ;; Process partial batch
              loop
                local.get 1
                if
                  ;; Same continuation byte counting logic
                  local.get 2
                  local.get 0
                  i32.load
                  local.tee 2
                  i32.const -1
                  i32.xor
                  i32.const 7
                  i32.shr_u
                  local.get 2
                  i32.const 6
                  i32.shr_u
                  i32.or
                  i32.const 16843009
                  i32.and
                  i32.add
                  local.set 2
                  
                  local.get 1
                  i32.const 4
                  i32.sub
                  local.set 1
                  local.get 0
                  i32.const 4
                  i32.add
                  local.set 0
                  br 1
                end
              end
              
              ;; Add partial batch count
              local.get 2
              i32.const 8
              i32.shr_u
              i32.const 16711935
              i32.and
              local.get 2
              i32.const 16711935
              i32.and
              i32.add
              i32.const 65537
              i32.mul
              i32.const 16
              i32.shr_u
              local.get 3
              i32.add
              return         ;; Return total char count
            end
            
            local.get 4
            i32.const 16
            i32.add
            local.set 4
            br 0
          end
          unreachable
        end
        unreachable
      end
      
      ;; Simple byte counting (no alignment optimization)
      local.get 0
      local.get 2
      call 89            ;; Count continuation bytes
      local.set 3
    end
    
    local.get 3)         ;; Return char count

  ;; Function 89: Count UTF-8 continuation bytes
  ;; Counts bytes that are part of multi-byte UTF-8 sequences
  ;; Used for: Character counting in UTF-8 strings
  ;; Parameters: (ptr, len) -> continuation_count
  ;; Returns: Number of continuation bytes (0b10xxxxxx bytes)
  (func $count_utf8_continuation_bytes (;89;) (type 1) (param i32 i32) (result i32)
    (local i32)
    ;; Local 2: count accumulator
    
    local.get 1          ;; len
    if                   ;; if len > 0
      loop
        ;; Check if byte is continuation byte (top 2 bits = 10)
        local.get 2      ;; count
        local.get 0
        i32.load8_s      ;; Load signed byte
        i32.const -65    ;; Compare with 10111111 (-65)
        i32.gt_s         ;; Continuation bytes are >= 10000000 and < 11000000
        i32.add
        local.set 2      ;; Increment if continuation byte
        
        local.get 0
        i32.const 1
        i32.add
        local.set 0
        local.get 1
        i32.const 1
        i32.sub
        local.tee 1
        br_if 0          ;; Continue for all bytes
      end
    end
    
    local.get 2)         ;; Return count

  ;; Function 90: Write optional character (sign, padding, etc.)
  ;; Writes a character if it's not the "omit" marker (1114112)
  ;; Used for: Sign handling, optional prefix/suffix
  ;; Parameters: (formatter_buf, formatter_vtable, char, should_write_flag) -> result
  ;; Returns: 0 on success, non-zero on error
  (func $write_optional_char (;90;) (type 7) (param i32 i32 i32 i32) (result i32)
    block                ;; Check if should write
      local.get 2        ;; char value
      i32.const 1114112
      i32.eq             ;; 1114112 = "no character" marker
      br_if 0            ;; Skip if marker
      
      ;; Write the character
      local.get 0        ;; formatter_buf
      local.get 2        ;; char
      local.get 1
      i32.load offset=16 ;; vtable.write_char function
      call_indirect (type 1)
      i32.eqz
      br_if 0            ;; Continue if successful
      
      i32.const 1
      return             ;; Return error
    end
    
    ;; Check padding flag
    local.get 3          ;; should_write_flag
    i32.eqz
    if                   ;; if no padding needed
      i32.const 0
      return             ;; Return success
    end
    
    ;; Write padding/content
    local.get 0          ;; formatter_buf
    local.get 3          ;; content_len
    i32.const 0          ;; No additional content
    local.get 1
    i32.load offset=12   ;; vtable.write_str
    call_indirect (type 0))

  ;; Function 91: Generate padding for formatted output
  ;; Calculates padding character and count based on formatter alignment settings
  ;; Used for: Format string width padding, field alignment
  ;; Parameters: (result_ptr, formatter_ptr, pad_width, fill_type) -> void
  ;; Result: Stores (pad_char, pad_count) at result_ptr
  (func $calculate_padding (;91;) (type 5) (param i32 i32 i32 i32)
    (local i32 i32 i32)
    ;; Local 4: iteration counter
    ;; Local 5: target_count (adjusted padding width)
    ;; Local 6: formatter.flags
    
    block                ;; @1 - Exit point
      block              ;; @2 - Center alignment case
        block            ;; @3 - Right alignment case
          block          ;; @4 - Left alignment case
            ;; Extract alignment from formatter flags (bits 29-30)
            local.get 1
            i32.load offset=8    ;; formatter.flags
            local.tee 6
            i32.const 29
            i32.shr_u        ;; Shift to get bits 29-30
            i32.const 3
            i32.and          ;; Mask to 2 bits (0-3)
            i32.const 1
            i32.sub          ;; Subtract 1 for br_table offset
            br_table 0 2 1 3 ;; Jump based on alignment type
            ;; 0 (was 1): Left   -> @4
            ;; 1 (was 2): Center -> @2
            ;; 2 (was 3): Right  -> @3
            ;; 3 (was 0): default -> @1
          end
          
          ;; Left alignment: use full padding width
          local.get 2        ;; pad_width
          local.set 5
          br 2               ;; @1
        end
        
        ;; Right alignment: conditional padding based on fill_type
        local.get 2          ;; pad_width
        i32.const 0
        local.get 3          ;; fill_type
        i32.const 255
        i32.and
        select               ;; Use pad_width if fill_type != 0, else 0
        local.set 5
        br 1                 ;; @1
      end
      
      ;; Center alignment: divide padding by 2
      local.get 2            ;; pad_width
      i32.const 65534
      i32.and                ;; Clear low bit (even number)
      i32.const 1
      i32.shr_u              ;; Divide by 2
      local.set 5            ;; target_count = pad_width / 2
    end
    
    ;; Extract fill character from formatter flags
    local.get 6            ;; formatter.flags
    i32.const 2097151
    i32.and                ;; Mask to get fill char (bits 0-20)
    local.set 3            ;; Local 3: fill_char
    
    ;; Load formatter function pointers
    local.get 1
    i32.load offset=4      ;; formatter.vtable
    local.set 6            ;; Local 6: vtable (reused)
    local.get 1
    i32.load               ;; formatter.buf
    local.set 1            ;; Local 1: buf (reused)
    
    block                  ;; @1 - Exit after padding
      block                ;; @2 - Padding completed
        ;; Write padding characters
        loop               ;; @3 - Padding loop
          ;; Check if we've written enough padding
          local.get 4      ;; iteration counter
          i32.const 65535
          i32.and
          local.get 5      ;; target_count
          i32.const 65535
          i32.and
          i32.ge_u
          br_if 1          ;; @2 - Done padding
          
          ;; Write one padding character
          local.get 4
          i32.const 1
          i32.add
          local.set 4      ;; counter++
          
          local.get 1      ;; buf
          local.get 3      ;; fill_char
          local.get 6
          i32.load offset=16 ;; vtable.write_char
          call_indirect (type 1)
          i32.eqz
          br_if 0          ;; @3 - Continue if successful
        end
        
        ;; Write failed - set error marker
        i32.const 1114112  ;; Error sentinel value
        local.set 3
        br 1               ;; @1 - Exit with error
      end
      
      ;; Padding completed successfully
      ;; Calculate actual padding written
      local.get 2          ;; pad_width
      local.get 5          ;; target_count
      i32.sub              ;; remaining = pad_width - target_count
      local.set 4          ;; Store remaining as count
    end
    
    ;; Store result
    local.get 0
    local.get 4            ;; padding count (or iteration count on error)
    i32.store16 offset=4   ;; result.count (16-bit)
    local.get 0
    local.get 3            ;; fill_char (or error marker 1114112)
    i32.store)             ;; result.char (32-bit)

  ;; Function 92: Write repeated padding character
  ;; Writes a character multiple times for field width padding
  ;; Used for: Field width padding, alignment filling
  ;; Parameters: (pad_char, pad_count, formatter_buf, formatter_vtable) -> bool
  ;; Returns: 1 if padding incomplete (stopped early), 0 if completed
  (func $write_padding (;92;) (type 7) (param i32 i32 i32 i32) (result i32)
    (local i32 i32)
    ;; Local 4: iteration counter
    ;; Local 5: saved counter value
    
    loop                 ;; @1 - Padding write loop
      local.get 4        ;; iteration counter
      local.tee 5        ;; Local 5: save counter value
      i32.const 65535
      i32.and            ;; Mask to 16-bit (handle overflow)
      local.get 1        ;; pad_count (target)
      i32.const 65535
      i32.and
      i32.lt_u
      if                 ;; if counter < pad_count
        ;; Increment counter
        local.get 5
        i32.const 1
        i32.add
        local.set 4      ;; counter++
        
        ;; Write one padding character
        local.get 2      ;; formatter_buf
        local.get 0      ;; pad_char
        local.get 3
        i32.load offset=16 ;; vtable.write_char
        call_indirect (type 1)
        i32.eqz
        br_if 1          ;; @1 - Continue loop if successful
      end
    end
    
    ;; Return status: did we complete all padding?
    local.get 5          ;; final counter value
    i32.const 65535
    i32.and
    local.get 1          ;; pad_count (target)
    i32.const 65535
    i32.and
    i32.lt_u)            ;; Return 1 if counter < target (incomplete), 0 if done

  ;; ============================================================================
  ;; FORMATTER VTABLE AND TRAIT IMPLEMENTATIONS
  ;; ============================================================================

  ;; Function 93: Format string with width padding
  ;; Implements Formatter::pad - formats a string with width/alignment
  ;; Used for: String Display/Debug with width specification
  ;; Parameters: (formatter_ptr, str_info_ptr) -> format_result
  ;; Returns: 0 on success, non-zero on error
  (func $fmt_with_padding (;93;) (type 1) (param i32 i32) (result i32)
    (local i32 i32 i32 i32 i32 i32 i32)
    ;; Local 2: current_ptr (for UTF-8 iteration)
    ;; Local 3: str_len
    ;; Local 4: str_ptr
    ;; Local 5: width or char_count
    ;; Local 6: char_counter or pad_count
    ;; Local 7: stack frame
    ;; Local 8: end_ptr
    
    global.get 0
    i32.const 16
    i32.sub
    local.tee 7
    global.set 0
    
    ;; Load string info
    local.get 0
    i32.load offset=4    ;; formatter.vtable
    local.set 3          ;; Local 3: vtable (reused for str_len later)
    local.get 0
    i32.load             ;; formatter.buf
    local.set 4          ;; Local 4: buf (reused for str_ptr later)
    
    block                ;; @1 - Exit point
      ;; Check formatter flags
      local.get 1
      i32.load offset=8  ;; str_info.flags
      local.tee 0        ;; Local 0: flags (reused)
      i32.const 402653184
      i32.and            ;; Check special formatting flags (bits 27-28)
      i32.eqz
      if                 ;; if no special formatting
        ;; Simple case: direct write without padding
        local.get 1
        i32.load         ;; str_info.ptr
        local.get 4      ;; buf
        local.get 3      ;; vtable
        local.get 1
        i32.load offset=4 ;; str_info.len
        i32.load offset=12 ;; vtable.write_str
        call_indirect (type 0)
        local.set 0      ;; Store result
        br 1             ;; @1 - Exit
      end
      
      block (result i32) ;; @2 - Calculate string length in chars
        ;; Check if width is specified
        local.get 0
        i32.const 268435456
        i32.and          ;; WIDTH_SPECIFIED flag (bit 28)
        if               ;; if width specified
          block          ;; @4 - Exit char counting
            block        ;; @5 - Start char counting
              ;; Load width value
              local.get 1
              i32.load16_u offset=14 ;; str_info.width
              local.tee 5            ;; Local 5: width
              i32.eqz
              if                     ;; if width == 0
                i32.const 0
                local.set 3          ;; char_count = 0
                br 1                 ;; @5 - Skip counting
              end
              
              ;; Calculate string end pointer
              local.get 3            ;; str_len (from earlier)
              local.get 4            ;; str_ptr
              i32.add
              local.set 8            ;; Local 8: end_ptr
              
              ;; Initialize char counting
              i32.const 0
              local.set 3            ;; char_count = 0
              local.get 4            ;; str_ptr
              local.set 0            ;; current_ptr
              local.get 5            ;; width
              local.set 6            ;; Local 6: chars_remaining
              
              ;; Count UTF-8 characters up to width
              loop                   ;; @6 - Char counting loop
                local.get 0          ;; current_ptr
                local.tee 2          ;; Local 2: char_start
                local.get 8          ;; end_ptr
                i32.eq
                br_if 2              ;; @4 - Done counting (reached end)
                
                ;; Decode one UTF-8 character and get its byte length
                block (result i32)   ;; @7 - Get next char position
                  local.get 2
                  i32.const 1
                  i32.add
                  local.get 2
                  i32.load8_s        ;; Load signed byte
                  local.tee 0        ;; Local 0: first_byte (reused)
                  i32.const 0
                  i32.ge_s           ;; Check if ASCII (>= 0)
                  br_if 0            ;; @7 - 1-byte char
                  drop
                  
                  ;; Multi-byte character
                  local.get 2
                  i32.const 2
                  i32.add
                  local.get 0
                  i32.const -32      ;; 0xE0
                  i32.lt_u           ;; Check if 2-byte (< 0xE0)
                  br_if 0            ;; @7 - 2-byte char
                  drop
                  
                  local.get 2
                  i32.const 3
                  i32.add
                  local.get 0
                  i32.const -16      ;; 0xF0
                  i32.lt_u           ;; Check if 3-byte (< 0xF0)
                  br_if 0            ;; @7 - 3-byte char
                  drop
                  
                  ;; 4-byte character - validate it's not invalid
                  local.get 0
                  i32.const 255
                  i32.and
                  i32.const 18
                  i32.shl
                  i32.const 1835008
                  i32.and
                  local.get 2
                  i32.load8_u offset=3
                  i32.const 63
                  i32.and
                  local.get 2
                  i32.load8_u offset=2
                  i32.const 63
                  i32.and
                  i32.const 6
                  i32.shl
                  local.get 2
                  i32.load8_u offset=1
                  i32.const 63
                  i32.and
                  i32.const 12
                  i32.shl
                  i32.or
                  i32.or
                  i32.or
                  i32.const 1114112   ;; Invalid codepoint
                  i32.eq
                  br_if 3            ;; @4 - Invalid UTF-8, stop counting
                  
                  local.get 2
                  i32.const 4
                  i32.add            ;; 4-byte char
                end
                local.tee 0          ;; next_ptr
                local.get 3          ;; char_count (byte offset so far)
                local.get 2          ;; char_start
                i32.sub
                i32.add
                local.set 3          ;; char_count += (next_ptr - char_start)
                
                local.get 6
                i32.const 1
                i32.sub
                local.tee 6          ;; chars_remaining--
                br_if 0              ;; @6 - Continue counting
              end
            end
            
            ;; Finished counting characters
            i32.const 0
            local.set 6              ;; No more chars to process
          end
          
          ;; Calculate padding needed
          local.get 5        ;; width
          local.get 6        ;; chars we didn't count (if stopped early)
          i32.sub
          br 1               ;; @2 - Return char_count or adjusted width
        end
        
        ;; No width specified: count all characters
        local.get 4          ;; str_ptr
        local.get 3          ;; str_len
        local.get 4
        i32.add              ;; end_ptr
        call 88              ;; utf8_char_count
      end
      local.tee 0            ;; Local 0: char_count (reused)
      
      ;; Check if padding needed
      local.get 1
      i32.load16_u offset=12 ;; str_info.min_width
      local.tee 5
      i32.ge_u
      if                     ;; if char_count >= min_width
        ;; No padding needed: direct write
        local.get 1
        i32.load             ;; str_info.ptr
        local.get 4          ;; buf
        local.get 3          ;; vtable
        local.get 1
        i32.load offset=4    ;; str_info.len
        i32.load offset=12   ;; vtable.write_str
        call_indirect (type 0)
        local.set 0
        br 1                 ;; @1 - Exit
      end
      
      ;; Need padding: calculate padding parameters
      local.get 7
      i32.const 8
      i32.add
      local.get 1            ;; str_info_ptr
      local.get 5            ;; min_width
      local.get 0            ;; char_count
      i32.sub                ;; padding needed = min_width - char_count
      i32.const 0            ;; fill_type
      call 91                ;; calculate_padding
      
      i32.const 1
      local.set 0            ;; Default to error
      
      ;; Check if padding calculation succeeded
      local.get 7
      i32.load offset=8      ;; padding.char
      local.tee 2
      i32.const 1114112      ;; Error marker
      i32.eq
      br_if 0                ;; @1 - Exit with error
      
      ;; Get padding count
      local.get 7
      i32.load16_u offset=12 ;; padding.count
      local.set 6
      
      ;; Write the string content
      local.get 1
      i32.load               ;; str_info.ptr
      local.tee 5            ;; Local 5: content_ptr (reused)
      local.get 4            ;; buf
      local.get 3            ;; vtable (actually str_len here)
      local.get 1
      i32.load offset=4      ;; str_info.len (actually vtable ptr)
      local.tee 1            ;; Local 1: actual_vtable (reused)
      i32.load offset=12     ;; vtable.write_str
      call_indirect (type 0)
      br_if 0                ;; @1 - Exit on error
      
      ;; Write the padding
      local.get 2            ;; pad_char
      local.get 6            ;; pad_count
      local.get 5            ;; buf
      local.get 1            ;; vtable
      call 92                ;; write_padding
      local.set 0            ;; Store result
    end
    
    local.get 7
    i32.const 16
    i32.add
    global.set 0
    local.get 0)             ;; Return result

  ;; Function 94: Call formatter through trait object vtable
  ;; Dispatches to Display/Debug implementation via vtable indirection
  ;; Used for: Generic formatting via trait objects (dyn Display, dyn Debug)
  ;; Parameters: (trait_object_ptr, formatter_ptr) -> format_result
  ;; Returns: 0 on success, non-zero on error
  (func $fmt_closure_call (;94;) (type 1) (param i32 i32) (result i32)
    local.get 0
    i32.load             ;; trait_object.data_ptr (the actual value)
    local.get 1          ;; formatter_ptr
    local.get 0
    i32.load offset=4    ;; trait_object.vtable_ptr
    i32.load offset=12   ;; vtable.fmt (function pointer at offset 12)
    call_indirect (type 1))  ;; Call: value.fmt(formatter)

  ;; Function 95: Get format specifier value from argument list
  ;; Extracts format width/precision from either immediate value or argument reference
  ;; Used for: Format string parsing, dynamic width/precision resolution
  ;; Parameters: (args_ptr, spec_descriptor_ptr) -> value
  ;; Returns: The resolved width or precision value (16-bit)
  (func $get_format_specifier (;95;) (type 1) (param i32 i32) (result i32)
    (local i32)
    ;; Local 2: result value
    
    block                ;; @1 - Return point
      block              ;; @2 - Argument reference case
        block            ;; @3 - Immediate value case
          ;; Load discriminant (type tag)
          local.get 1
          i32.load16_u   ;; spec.discriminant
          i32.const 1
          i32.sub        ;; Adjust for br_table (0-based)
          br_table 1 2 0 ;; Jump based on discriminant:
                         ;; 0 (was 1): @2 - Argument reference
                         ;; 1 (was 2): @1 - Implied/default (return 0)
                         ;; 2 (was 0): @3 - Immediate value  
        end
        
        ;; Immediate value case
        local.get 1
        i32.load16_u offset=2  ;; spec.immediate_value
        return
      end
      
      ;; Argument reference case: look up in args array
      local.get 0        ;; args_ptr
      local.get 1
      i32.load offset=4  ;; spec.arg_index
      i32.const 3
      i32.shl            ;; arg_index * 8 (each arg is 8 bytes)
      i32.add
      i32.load16_u offset=4  ;; args[arg_index].value (at offset 4 in arg struct)
      local.set 2
    end
    
    local.get 2)         ;; Return result (0 for default case, arg value for reference case)

  ;; ============================================================================
  ;; COMPLEX FORMATTING OPERATIONS
  ;; ============================================================================

  ;; Function 96: Format string with newline-aware indentation
  ;; Writes string to formatter, inserting indentation after newlines
  ;; Used for: Pretty-printing with Debug formatting (#? alternate flag)
  ;; Parameters: (formatter_state_ptr, str_ptr, str_len) -> format_result
  ;; Returns: 0 on success, 1 on error
  (func $fmt_with_newlines (;96;) (type 0) (param i32 i32 i32) (result i32)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)
    ;; Local 3: newline_pos
    ;; Local 4: current_segment_start
    ;; Local 5: stack_frame
    ;; Local 6: search_offset
    ;; Local 7: error_flag
    ;; Local 8: last_write_pos
    ;; Local 9: temp_ptr
    ;; Local 10: formatter.vtable
    ;; Local 11: formatter.buf
    ;; Local 12: formatter.flags_ptr
    ;; Local 13: result (return value)
    ;; Local 14: str_len - 1
    ;; Local 15: temp value
    
    global.get 0
    i32.const 32
    i32.sub
    local.tee 5
    global.set 0
    
    ;; Precalculate str_len - 1 for bounds checking
    local.get 1
    i32.const 1
    i32.sub
    local.set 14
    
    ;; Load formatter state
    local.get 0
    i32.load offset=4    ;; formatter.vtable
    local.set 10
    local.get 0
    i32.load             ;; formatter.buf
    local.set 11
    local.get 0
    i32.load offset=8    ;; formatter.flags_ptr (contains newline state)
    local.set 12
    
    block                ;; @1 - Exit point
      loop               ;; @2 - Main processing loop
        local.get 7      ;; error_flag
        br_if 1          ;; @1 - Exit on error
        
        block (result i32) ;; @3 - Find next newline segment
          loop           ;; @4 - Newline search loop
            block        ;; @5 - Process found segment
              ;; Check if we've scanned the entire string
              local.get 2 ;; str_len
              local.get 6 ;; search_offset
              i32.ge_u
              if         ;; if search_offset < str_len
                ;; Calculate current search position
                local.get 1  ;; str_ptr
                local.get 6  ;; search_offset
                i32.add
                local.set 4  ;; current_segment_start
                
                ;; Calculate remaining length to search
                block (result i32) ;; @7 - Find newline in segment
                  local.get 2    ;; str_len
                  local.get 6    ;; search_offset
                  i32.sub
                  local.tee 7    ;; remaining_len
                  i32.const 8
                  i32.ge_u
                  if             ;; if remaining_len >= 8 (use SIMD-style search)
                    i32.const 0
                    local.set 0  ;; align_offset = 0
                    
                    block        ;; @9 - Alignment check
                      ;; Check if pointer is already 4-byte aligned
                      local.get 4
                      i32.const 3
                      i32.add
                      i32.const -4
                      i32.and    ;; aligned_ptr = (ptr + 3) & ~3
                      local.tee 3
                      local.get 4
                      i32.eq
                      br_if 0    ;; @9 - Already aligned
                      
                      ;; Search unaligned prefix
                      local.get 5
                      i32.const 24
                      i32.add
                      local.get 4 ;; current_segment_start
                      local.get 3 ;; aligned_ptr
                      local.get 4
                      i32.sub
                      local.tee 0 ;; align_offset
                      call 97     ;; find_newline_in_chunk
                      
                      local.get 5
                      i32.load offset=24  ;; result.found
                      local.tee 3
                      i32.const 1
                      i32.and
                      i32.eqz
                      br_if 0     ;; @9 - Not found in prefix
                      
                      ;; Found in prefix
                      local.get 5
                      i32.load offset=28  ;; result.offset
                      br 2        ;; @7 - Return offset
                    end
                    
                    ;; Search 8-byte chunks
                    local.get 7
                    i32.const 8
                    i32.sub
                    local.set 3  ;; search_limit
                    
                    loop         ;; @9 - 8-byte chunk search
                      block      ;; @10 - Check chunk
                        local.get 0  ;; align_offset
                        local.get 3  ;; search_limit
                        i32.le_u
                        if           ;; if offset <= limit
                          ;; SIMD-style newline detection using magic constants
                          ;; Check if any byte in 8-byte span is '\n' (0x0A)
                          i32.const 16843008  ;; Magic constant: 0x01010101
                          local.get 0
                          local.get 4
                          i32.add
                          local.tee 9
                          i32.load           ;; Load first 4 bytes
                          local.tee 15
                          i32.const 168430090 ;; Magic constant: 0x0A0A0A0A
                          i32.xor
                          i32.sub
                          local.get 15
                          i32.or
                          
                          i32.const 16843008
                          local.get 9
                          i32.const 4
                          i32.add
                          i32.load           ;; Load next 4 bytes
                          local.tee 9
                          i32.const 168430090
                          i32.xor
                          i32.sub
                          local.get 9
                          i32.or
                          i32.and
                          
                          i32.const -2139062144 ;; Magic constant: 0x80808080
                          i32.and
                          i32.const -2139062144
                          i32.eq
                          br_if 1    ;; @10 - No newline in this chunk
                        end
                        
                        ;; Found newline in chunk - do byte-by-byte search
                        local.get 5
                        i32.const 16
                        i32.add
                        local.get 0
                        local.get 4
                        i32.add
                        local.get 7  ;; remaining_len
                        local.get 0
                        i32.sub
                        call 97      ;; find_newline_in_chunk
                        
                        local.get 5
                        i32.load offset=16  ;; result.found
                        i32.const 1
                        i32.and
                        local.set 3
                        local.get 5
                        i32.load offset=20  ;; result.offset
                        local.get 0
                        i32.add
                        br 3         ;; @7 - Return offset
                      end
                      
                      ;; Move to next 8-byte chunk
                      local.get 0
                      i32.const 8
                      i32.add
                      local.set 0
                      br 0           ;; @9 - Continue chunk search
                    end
                    unreachable
                  end
                  
                  ;; remaining_len < 8: simple byte search
                  local.get 5
                  i32.const 8
                  i32.add
                  local.get 4        ;; current_segment_start
                  local.get 7        ;; remaining_len
                  call 97            ;; find_newline_in_chunk
                  
                  local.get 5
                  i32.load offset=8  ;; result.found
                  local.set 3
                  local.get 5
                  i32.load offset=12 ;; result.offset
                end
                local.set 0          ;; newline_offset
                
                ;; Check if newline found
                local.get 3
                i32.const 1
                i32.and
                br_if 1              ;; @5 - Process segment with newline
                
                ;; No newline found - set search_offset to end
                local.get 2
                local.set 6
              end
              
              ;; Reached end without newline
              local.get 2            ;; str_len
              local.get 8            ;; last_write_pos
              i32.eq
              br_if 4                ;; @1 - Done, exit
              
              ;; Set error flag and prepare final segment
              i32.const 1
              local.set 7
              local.get 8            ;; last_write_pos
              local.set 4
              local.get 2            ;; str_len
              br 2                   ;; @3 - Return final segment end
            end
            
            ;; Found newline at offset
            local.get 0
            local.get 6
            i32.add
            local.tee 3              ;; absolute newline position
            i32.const 1
            i32.add
            local.set 6              ;; search_offset = newline_pos + 1
            
            ;; Check if position is valid
            local.get 2
            local.get 3
            i32.le_u
            br_if 0                  ;; @4 - Continue search if at end
            
            ;; Check if character at position is actually '\n'
            local.get 0
            local.get 4
            i32.add
            i32.load8_u
            i32.const 10             ;; '\n'
            i32.ne
            br_if 0                  ;; @4 - False positive, continue
          end
          
          ;; Found valid newline segment
          i32.const 0
          local.set 7                ;; Clear error flag
          local.get 6                ;; Next search position
          local.tee 4
        end
        local.set 0                  ;; segment_end
        
        block                        ;; @3 - Write segment
          ;; Check if we need to write indentation
          local.get 12
          i32.load8_u                ;; formatter.at_newline_flag
          if                         ;; if at_newline
            ;; Write indentation (4 spaces)
            local.get 11             ;; buf
            i32.const 68520          ;; "    " (4 spaces)
            i32.const 4
            local.get 10
            i32.load offset=12       ;; vtable.write_str
            call_indirect (type 0)
            br_if 1                  ;; @3 - Exit on error
          end
          
          ;; Determine if this segment ends with newline
          i32.const 0
          local.set 3                ;; at_newline = false
          local.get 0                ;; segment_end
          local.get 8                ;; last_write_pos
          i32.ne
          if                         ;; if segment not empty
            ;; Check if last character is newline
            local.get 0
            local.get 14             ;; str_len - 1
            i32.add
            i32.load8_u
            i32.const 10             ;; '\n'
            i32.eq
            local.set 3              ;; at_newline = (last_char == '\n')
          end
          
          ;; Calculate segment length
          local.get 0
          local.get 8
          i32.sub
          local.set 0                ;; segment_len = segment_end - last_write_pos
          
          ;; Calculate segment start pointer
          local.get 1
          local.get 8
          i32.add
          local.set 9                ;; segment_ptr = str_ptr + last_write_pos
          
          ;; Update newline flag
          local.get 12
          local.get 3
          i32.store8                 ;; formatter.at_newline_flag = at_newline
          
          ;; Update last write position
          local.get 4
          local.set 8                ;; last_write_pos = segment_end
          
          ;; Write segment
          local.get 11               ;; buf
          local.get 9                ;; segment_ptr
          local.get 0                ;; segment_len
          local.get 10
          i32.load offset=12         ;; vtable.write_str
          call_indirect (type 0)
          i32.eqz
          br_if 1                    ;; @2 - Continue loop on success
        end
      end
      
      ;; Error occurred
      i32.const 1
      local.set 13                   ;; result = 1 (error)
    end
    
    local.get 5
    i32.const 32
    i32.add
    global.set 0
    local.get 13)                    ;; Return result

  ;; Function 97: Find newline in buffer
  ;; Searches for newline character in byte range
  ;; Used for: Line-by-line formatting, text processing
  ;; Parameters: (result_ptr, ptr, len) -> void
  ;; Result: Stores (found_flag, offset) at result_ptr
  (func $find_newline (;97;) (type 3) (param i32 i32 i32)
    (local i32 i32)
    ;; Local 3-4: iteration vars
    
    loop                 ;; Search loop
      block              ;; Exit when found or end
        local.get 2      ;; remaining_len
        local.get 3      ;; offset
        i32.eq
        if               ;; if offset == len
          local.get 2
          local.set 3    ;; Set offset to len (not found)
          br 1           ;; Exit
        end
        
        ;; Check current byte
        local.get 1      ;; ptr
        local.get 3      ;; offset
        i32.add
        i32.load8_u      ;; byte at offset
        i32.const 10     ;; '\n'
        i32.eq
        if               ;; if found newline
          i32.const 1
          local.set 4    ;; found = true
        else
          local.get 3
          i32.const 1
          i32.add
          local.set 3    ;; offset++
          br 2           ;; Continue searching
        end
      end
    end
    
    ;; Store result
    local.get 0
    local.get 3          ;; offset (of newline or end)
    i32.store offset=4
    local.get 0
    local.get 4          ;; found flag
    i32.store)

  ;; Function 98: Write character with newline tracking
  ;; Writes char and updates newline flag for formatter state
  ;; Used for: Maintaining formatter state during output
  ;; Parameters: (formatter_state_ptr, char) -> result
  ;; Returns: 0 on success, non-zero on error
  (func $write_char_track_newline (;98;) (type 1) (param i32 i32) (result i32)
    (local i32 i32)
    ;; Locals 2-3: formatter pointers
    
    ;; Load formatter metadata
    local.get 0
    i32.load offset=4    ;; state.vtable
    local.set 2
    local.get 0
    i32.load             ;; state.buf
    local.set 3
    
    block                ;; Write and update state
      ;; Check if we need to track newlines
      local.get 0
      i32.load offset=8  ;; state.flags
      local.tee 0        ;; Local 0: flags (reused)
      i32.load8_u        ;; flags.track_newlines
      i32.eqz
      br_if 0            ;; Skip if not tracking
      
      ;; Write newline prefix if previous char was newline
      local.get 3
      i32.const 68520    ;; Newline indent string
      i32.const 4
      local.get 2
      i32.load offset=12
      call_indirect (type 0)
      i32.eqz
      br_if 0            ;; Continue if successful
      
      i32.const 1
      return             ;; Return error
    end
    
    ;; Update newline flag
    local.get 0
    local.get 1          ;; char
    i32.const 10         ;; '\n'
    i32.eq
    i32.store8           ;; Set flag if this was newline
    
    ;; Write the character
    local.get 3
    local.get 1          ;; char
    local.get 2
    i32.load offset=16   ;; vtable.write_char
    call_indirect (type 1))

  ;; Function 99: Format with alternate Display mode
  ;; Handles alternate formatting flag (#) for Debug output
  ;; Used for: Pretty-printing, alternate Display implementations
  ;; Parameters: (formatter_ptr, value_ptr) -> format_result
  ;; Returns: 0 on success, non-zero on error
  (func $fmt_alternate_display (;99;) (type 1) (param i32 i32) (result i32)
    (local i32 i32)
    ;; Locals 2-3: temp storage
    
    global.get 0
    i32.const 16
    i32.sub
    local.tee 2
    global.set 0
    
    ;; Check if value needs indenting wrapper
    local.get 2
    i32.const 8
    i32.add
    local.get 1          ;; value_ptr
    call 100             ;; Check if should use alternate format
    
    block (result i32)   ;; Format result
      local.get 2
      i32.load offset=8  ;; should_indent flag
      local.tee 3
      if                 ;; if should use alternate
        ;; Use alternate formatter with indenting
        local.get 0
        local.get 3      ;; indent_wrapper
        local.get 2
        i32.load offset=12 ;; wrapped_formatter
        call 96          ;; fmt_with_newlines
        br 1
      end
      
      ;; Regular formatting
      local.get 0
      i32.const 68496    ;; Default vtable
      local.get 1
      call 81            ;; fmt_with_args
    end
    local.set 1
    
    local.get 2
    i32.const 16
    i32.add
    global.set 0
    local.get 1)

  ;; Function 100: Get formatter fill character
  ;; Extracts fill/padding character from formatter state
  ;; Used for: Padding calculations, alignment
  ;; Parameters: (result_ptr, formatter_ptr) -> void
  ;; Result: Stores fill char info (or 0 if default)
  (func $get_formatter_fill (;100;) (type 2) (param i32 i32)
    (local i32)
    
    block                ;; Fill character extraction
      ;; Check formatter state structure
      local.get 1
      i32.load offset=4  ;; formatter.metadata
      i32.const 1
      i32.ne
      br_if 0            ;; Use default if not specified
      
      local.get 1
      i32.load offset=12 ;; formatter.custom_fill
      br_if 0            ;; Use default if flag not set
      
      ;; Has custom fill character
      local.get 1
      i32.load           ;; formatter.fill_char_info
      i32.load offset=4  ;; fill.char
      local.set 2
    end
    
    ;; Store result
    local.get 0
    local.get 2          ;; fill_char (or 0 for default)
    i32.store offset=4
    local.get 0
    i32.const 0
    i32.store)           ;; result_code = 0

  ;; Function 101: Format with argument list (core formatter)
  ;; Main formatting function that processes format string and arguments
  ;; Used for: All formatted output operations
  ;; Parameters: (formatter_buf, formatter_vtable, format_args_ptr) -> result
  ;; Returns: 0 on success, non-zero on error
  (func $format_with_args (;101;) (type 0) (param i32 i32 i32) (result i32)
    (local i32 i32)
    ;; Locals 3-4: temp storage
    
    global.get 0
    i32.const 16
    i32.sub
    local.tee 3
    global.set 0
    
    ;; Check if format args need indenting wrapper
    local.get 3
    i32.const 8
    i32.add
    local.get 2          ;; format_args_ptr
    call 100             ;; Check indenting
    
    block (result i32)   ;; Formatting dispatch
      local.get 3
      i32.load offset=8  ;; indent_info
      local.tee 4
      if                 ;; if needs indenting
        ;; Use newline-aware formatter
        local.get 0
        local.get 4      ;; indent_level
        local.get 3
        i32.load offset=12 ;; indent_config
        local.get 1      ;; vtable
        i32.load offset=12 ;; vtable.write_str
        call_indirect (type 0)
        br 1
      end
      
      ;; Regular formatting
      local.get 0
      local.get 1
      local.get 2
      call 81            ;; fmt_with_args
    end
    local.set 2
    
    local.get 3
    i32.const 16
    i32.add
    global.set 0
    local.get 2)

  ;; Function 102: Format Error with custom display
  ;; Formats Error enum with detailed information
  ;; Used for: Error Display trait implementation
  ;; Parameters: (formatter_ptr, error_ptr) -> format_result
  ;; Returns: 0 on success, non-zero on error
  (func $fmt_error_display (;102;) (type 1) (param i32 i32) (result i32)
    (local i32 i32 i32 i32 i32)
    ;; Locals 2-6: formatting state and metadata
    
    global.get 0
    i32.const -64
    i32.add
    local.tee 2
    global.set 0
    
    ;; Load error data structure
    local.get 0
    i32.load             ;; formatter.buf
    local.tee 3
    i32.const 4
    i32.add
    i32.load             ;; error.inner_ptr
    local.set 0          ;; Local 0: inner_error_ptr (reused)
    local.get 3
    i32.load             ;; error.type
    local.set 3
    
    i32.const 1
    local.set 5          ;; Default: error result
    
    block                ;; @1 - Exit point
      ;; Write error prefix
      local.get 1
      i32.load           ;; formatter.buf
      local.tee 4
      i32.const 68396    ;; "Error: " prefix
      i32.const 12
      local.get 1
      i32.load offset=4  ;; formatter.vtable
      local.tee 1        ;; Local 1: vtable (reused)
      i32.load offset=12 ;; vtable.write_str
      local.tee 6        ;; Local 6: write_str function
      call_indirect (type 0)
      br_if 0            ;; @1 - Exit on error
      
      ;; Store error context for formatting
      local.get 2
      local.get 0
      i32.load           ;; error.details.ptr
      i32.store offset=32
      local.get 2
      local.get 0
      i32.load offset=4  ;; error.details.len
      i32.const 1
      i32.sub
      i32.store offset=36
      
      ;; Build format argument structure
      local.get 2
      i32.const 3
      i32.store offset=12
      local.get 2
      i32.const 68372    ;; Format template
      i32.store offset=8
      local.get 2
      i64.const 3
      i64.store offset=20 align=4
      
      ;; Set up argument references
      local.get 2
      i32.const 7
      i32.store offset=60
      local.get 2
      local.get 0
      i32.const 12
      i32.add
      i32.store offset=56
      local.get 2
      i32.const 7
      i32.store offset=52
      local.get 2
      local.get 0
      i32.const 8
      i32.add
      i32.store offset=48
      local.get 2
      i32.const 5
      i32.store offset=44
      local.get 2
      local.get 2
      i32.const 40
      i32.add
      local.tee 0
      i32.store offset=16
      local.get 2
      local.get 2
      i32.const 32
      i32.add
      i32.store offset=40
      
      ;; Format error details
      local.get 4
      local.get 1
      local.get 2
      i32.const 8
      i32.add
      call 101           ;; format_with_args
      br_if 0            ;; @1 - Error
      
      ;; Write separator before cause chain
      local.get 4
      i32.const 68408
      i32.const 2
      local.get 6
      call_indirect (type 0)
      br_if 0            ;; @1 - Error
      
      ;; Format error cause/source if present
      local.get 2
      i32.const 56
      i32.add
      local.get 3
      i32.const 16
      i32.add
      i64.load align=4
      i64.store
      local.get 2
      i32.const 48
      i32.add
      local.get 3
      i32.const 8
      i32.add
      i64.load align=4
      i64.store
      local.get 2
      local.get 3
      i64.load align=4
      i64.store offset=40
      
      ;; Format cause
      local.get 4
      local.get 1
      local.get 0
      call 101
      local.set 5        ;; Final result
    end
    
    local.get 2
    i32.const -64
    i32.sub
    global.set 0
    local.get 5)

  ;; Function 103: Panic with range/index error formatting
  ;; Formats panic message for index/range out of bounds errors
  ;; Used for: Array bounds violations, slice operations
  ;; Parameters: (start, end, location_ptr, panic_handler_ptr) -> never_returns
  (func $panic_with_range_error (;103;) (type 5) (param i32 i32 i32 i32)
    (local i32)
    ;; Local 4: stack frame
    
    global.get 0
    i32.const 48
    i32.sub
    local.tee 4
    global.set 0
    
    ;; Store error values
    local.get 4
    local.get 1          ;; end
    i32.store offset=4
    local.get 4
    local.get 0          ;; start
    i32.store
    
    ;; Build panic message structure
    local.get 4
    i32.const 2
    i32.store offset=12
    local.get 4
    local.get 3          ;; panic_handler_ptr
    i32.store offset=8
    local.get 4
    i64.const 2
    i64.store offset=20 align=4
    
    ;; Set up format specifiers
    local.get 4
    i32.const 7          ;; Display format for integers
    i32.store offset=44
    local.get 4
    i32.const 7
    i32.store offset=36
    
    ;; Link argument pointers
    local.get 4
    local.get 4
    i32.const 32
    i32.add
    i32.store offset=16
    local.get 4
    local.get 4
    i32.const 4
    i32.add
    i32.store offset=40
    local.get 4
    local.get 4
    i32.store offset=32
    
    ;; Panic with formatted message
    local.get 4
    i32.const 8
    i32.add
    local.get 2          ;; location_ptr
    call 27              ;; panic_fmt
    unreachable)

  ;; Function 104: Encode Result<(), Error> and return (wrapper)
  ;; Convenience wrapper for encoding and returning boolean result
  ;; Used for: Simplifying return paths in message handlers
  ;; Parameters: (success_flag) -> never_returns
  (func $encode_and_return_bool_result (;104;) (type 4) (param i32)
    (local i32 i32)
    ;; Locals 1-2: encoder state
    
    global.get 0
    i32.const 16
    i32.sub
    local.tee 1
    global.set 0
    
    ;; Initialize encoder
    local.get 1
    i64.const 16384
    i64.store offset=8 align=4
    local.get 1
    i32.const 69258      ;; Global encoder buffer
    i32.store offset=4
    local.get 1
    i32.const 4
    i32.add
    local.tee 2          ;; encoder_ptr
    
    ;; Encode the boolean as Result discriminant
    local.get 0          ;; success_flag (0 or 1)
    call 64              ;; Write as byte
    local.get 2
    local.get 0          ;; Write again (for Result<()> encoding)
    call 64
    
    ;; Validate encoded length
    local.get 1
    i32.load offset=12   ;; encoder.used
    local.tee 1
    i32.const 16385      ;; Max allowed
    i32.ge_u
    if
      ;; Length check failed
      local.get 1
      i32.const 16384
      i32.const 67340    ;; Error context
      call 18            ;; panic_bounds_check
      unreachable
    end
    
    ;; Return encoded result
    local.get 0          ;; flags (0=success, 1=error)
    local.get 1          ;; data_len
    call 65              ;; seal_return_wrapper
    unreachable)

  ;; ============================================================================
  ;; EXPORTS AND MODULE METADATA
  ;; ============================================================================

  ;; Function table for indirect calls (vtables, closures)
  ;; Index 0: Reserved/null
  ;; Indices 1-16: Various trait implementations and formatters
  (table (;0;) 17 17 funcref)
  
  ;; Global 0: Stack pointer (mutable)
  ;; Starts at 65536 (after static data, before heap)
  (global (;0;) (mut i32) (i32.const 65536))
  
  ;; Global 1: Heap start marker (immutable)
  ;; Points to first allocatable address
  (global (;1;) i32 (i32.const 85648))
  
  ;; Global 2: Data section end marker (immutable)
  ;; Points to end of static data
  (global (;2;) i32 (i32.const 85642))
  
  ;; Exported contract entrypoints
  (export "call" (func $dispatch_call))        ;; Message call dispatcher (func 73)
  (export "deploy" (func $dispatch_deploy))    ;; Constructor dispatcher (func 74)
  
  ;; Module initialization (runs before any function calls)
  (start $__init)                               ;; func 10
  
  ;; Function table initialization
  ;; Maps indices to actual function references for indirect calls
  (elem (;0;) (i32.const 1) func 
    $fmt_error_enum                  ;; 1: Format Error enum
    $fmt_result_enum                 ;; 2: Format Result enum
    $fmt_error_discriminant          ;; 3: Format error variant name
    $fmt_closure_call                ;; 4: Generic closure call
    $fmt_with_padding                ;; 5: Format with padding
    $fmt_preservation_enum           ;; 6: Format Preservation enum
    $fmt_u32_decimal                 ;; 7: Format u32 as decimal
    $fmt_error_display               ;; 8: Format Error with details
    $fmt_result_enum                 ;; 9: Format Result (duplicate)
    $nop_drop                        ;; 10: No-op destructor
    $formatter_write_bytes           ;; 11: Write bytes to formatter
    $fmt_write_char                  ;; 12: Write UTF-8 character
    $fmt_struct_debug                ;; 13: Format struct
    $fmt_with_newlines               ;; 14: Format with newline handling
    $write_char_track_newline        ;; 15: Write char, track newlines
    $fmt_alternate_display           ;; 16: Alternate display mode
  )
  
  ;; ============================================================================
  ;; STATIC DATA SECTION
  ;; ============================================================================
  
  ;; Data Section 0: Source file paths, error messages, and constants (offset 65536)
  (data (;0;) (i32.const 65536)
    ;; === SOURCE FILE PATHS ===
    ;; Path 0 (offset 65536): Pallet contracts UAPI host bindings
    "/home/diagoras/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pallet-contracts-uapi-9.0.0/src/host.rs\00"
    
    ;; Path 1 (offset 65644): Rust standard library formatting
    "/home/diagoras/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/fmt.rs\00"
    
    ;; Path 2 (offset 65756): SCALE codec compact encoding
    "/home/diagoras/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/compact.rs\00"
    
    ;; Path 3 (offset 65864): Ink environment on-chain implementations
    "/home/diagoras/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ink_env-5.1.1/src/engine/on_chain/impls.rs\00"
    
    ;; Path 4 (offset 65976): Ink environment on-chain buffer
    "/home/diagoras/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ink_env-5.1.1/src/engine/on_chain/buffer.rs\00"
    
    ;; Path 5 (offset 66088): Rust standard library string
    "/home/diagoras/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs\00"
    
    ;; Path 6 (offset 66200): Ink storage lazy mapping
    "/home/diagoras/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ink_storage-5.1.1/src/lazy/mapping.rs\00"
    
    ;; Path 7 (offset 66308): Rust standard library slice
    "/home/diagoras/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs\00"
    
    ;; Path 8 (offset 66418): Rust standard library raw_vec
    "/home/diagoras/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/raw_vec/mod.rs\00"
    
    ;; Path 9 (offset 66534): Rust standard library allocator
    "/home/diagoras/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/alloc.rs\00"
    
    ;; Path 10 (offset 66644): SCALE codec main module
    "/home/diagoras/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs\00"
    
    ;; Path 11 (offset 66752): Main contract source file
    "/home/diagoras/Git/w3f-bulbasaur/balances_contract/lib.rs\00"
    
    ;; === ERROR MESSAGES AND FORMAT STRINGS ===
    ;; Offset 66812: Struct size marker (220 bytes, 1, 108)
    "\dc\00\01\00l\00\00\00"
    "H\00\00\00 \00\00\00"  ;; Line 72, column 32
    
    ;; Offset 66824: XOR key for account ID encoding
    "\ff\df\a2?\b4z}\fd"
    
    ;; Offset 66832: Mapping error message
    "Failed to get value in Mapping: "
    
    ;; Offset 66864: Path reference and location
    "\1c\05\01\00 \00\00\00"  ;; Path at 66844, length 32
    "\9a\02\01\00j\00\00\00"  ;; Line 666
    "\c4\00\00\00%\00\00\00"  ;; Column 196, offset 37
    
    ;; Offset 66888: Path reference (impls.rs)
    "H\01\01\00o\00\00\00"    ;; Path at 65864, length 111
    "\94\00\00\00 \00\00\00"  ;; Line 148, column 32
    
    ;; Offset 66904: Another location
    "H\01\01\00o\00\00\00"
    "\94\00\00\000\00\00\00"  ;; Line 148, column 48
    
    ;; Offset 66920: Buffer.rs locations
    "`\04\01\00j\00\00\00"    ;; Path at 66656, length 106
    "n\04\00\00\0f\00\00\00"  ;; Line 1134, column 15
    
    "`\04\01\00j\00\00\00"
    "\a1\04\00\00\10\00\00\00" ;; Line 1185, column 16
    
    ;; === CONTRACT ERROR ENUM DISCRIMINANTS ===
    ;; Offset 66952: Error type metadata
    "\00\00\01\00l\00\00\00-\00\00\00\14\00\00\00"
    "\00\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00"
    
    ;; Offset 66976: Error variant names (concatenated)
    "DecodeBuffer"
    "TooSmall"
    "ReturnError"
    "Success"
    "CalleeTrapped"
    "CalleeReverted"
    "KeyNotFound"
    "_BelowSubsistenceThreshold"
    "TransferFailed"
    "_EndowmentTooLow"
    "CodeNotFound"
    "NotCallable"
    "LoggingDisabled"
    "CallRuntimeFailed"
    "EcdsaRecoveryFailed"
    "Sr25519VerifyFailed"
    "XcmExecutionFailed"
    "XcmSendFailed"
    "Unknown"
    
    ;; === PANIC MESSAGES ===
    ;; Offset 67352: Caller validation error
    "The executed contract must have a caller with a valid account id."
    
    ;; Offset 67417: Location info
    "H\01\01\00o\00\00\00"    ;; impls.rs path
    "\83\01\00\00\0e\00\00\00" ;; Line 387, column 14
    
    "H\01\01\00o\00\00\00"
    "\1b\01\00\002\00\00\00"  ;; Line 283, column 50
    
    ;; Offset 67449: Unexpected error message
    "encountered unexpected error"
    
    ;; Offset 67477: Location
    "\1c\07\01\00\1c\00\00\00"
    "H\01\01\00o\00\00\00"
    "\e4\00\00\00\17\00\00\00" ;; Line 228, column 23
    
    ;; === STRING.RS PANIC LOCATIONS ===
    ;; Offset 67509: Multiple string.rs references
    "\b7\01\01\00p\00\00\00"   ;; string.rs path
    "\cf\00\00\00=\00\00\00"   ;; Line 207, column 61
    
    "\b7\01\01\00p\00\00\00"
    "\d2\00\00\00;\00\00\00"   ;; Line 210, column 59
    
    ;; === CODEC ERROR MESSAGES ===
    ;; Offset 67557: Codec.rs path
    "\ca\04\01\00:\00\00\00"   ;; codec.rs, length 58
    "\e7\00\00\00\05\00\00\00" ;; Line 231, column 5
    
    ;; Offset 67573: Storage errors
    "storage entry was empty\00"
    "\80\07\01\00\17\00\00\00"
    "could not properly decode storage entry\00"
    "\a0\07\01\00'\00\00\00"
    
    ;; Offset 67656: Another codec location
    "\ca\04\01\00:\00\00\00"
    "5\04\00\00\17\00\00\00"   ;; Line 1077, column 23
    
    ;; === CRYPTOGRAPHIC CONSTANTS ===
    ;; Offset 67672: SHA-256/Keccak-256 initial state vectors (16 x 32 bytes = 512 bytes)
    "\01\b5\b6\1a>j!\a1k\e4\f0D\b5\17\c2\8a\c6\92I/s\c5\bf\d3\f6\01x\ad\98\c7g\f4\cb"
    "\01\d8>B\e4<_\bc\d3\1c\e6\a9[\13(F\12\acM\a9\1b)\17\d0\d5\bd\ad\be\ff\b6@\db\bc"
    "\01\b7~\08\8e\0f,r\a8\81+&\02M\5c\a3\014\9b3p\ce>\d5o\c3\eas3\b0\9c\0bR"
    "\01 \85\7f\1e\c4\a4\e9\8e\83\bb\ec\a3\e9\98\22\88WS1\07t\11\fe\d94\ea\0bCn\e3\deU"
    "\01\89\f3\e8\aa\18\97\bb\8d8\e2o=S\bdJ]\ae\06\bb\14\c9Lz@}\b5\1c\98\da{j\11"
    "\01\c5w\1e\b4zW\e5OXR\fb\b9\12\bc6hS\d8N9\ec\b1\95W\a0\b9\f0\ac\f4\18\f9\7f"
    "\01\d6\d3\1a\dew%%\df\03\80\07.\13\9d\03U>\d7m\c5[\18\f9\c8\0e\a6x\a2\8d\a28#"
    "\01\e6\c5\e2\a1\0d\92\bc\c1\87O\98\182\ab}K\e9\7f\09\b2\f8\e8\88ih~?}\c0\84\de\9b"
    "\01\8b\cf\93\86\9b\87\f1\f2s\91\ca\d4\09\a3\cd\d3\87\93\0c\ba\d3\07\f9\e1j\8df\00Ozb1"
    "\01A(&C\d6\e8\01\b1\b3\ed\0f1\f9\94b\c2\9b\e6\94\1c\fb\cdV;\d9UGG\f6%\a9+"
    
    ;; === ERROR VARIANT LENGTH TABLE ===
    ;; Offset 68184: Length of each error variant name (16 entries)
    "\00\00"        ;; Padding
    "\07\00\00\00"  ;; 7: "Success"
    "\0d\00\00\00"  ;; 13: "CalleeTrapped"
    "\0e\00\00\00"  ;; 14: "CalleeReverted"
    "\0b\00\00\00"  ;; 11: "KeyNotFound"
    "\1a\00\00\00"  ;; 26: "_BelowSubsistenceThreshold"
    "\0e\00\00\00"  ;; 14: "TransferFailed"
    "\10\00\00\00"  ;; 16: "_EndowmentTooLow"
    "\0c\00\00\00"  ;; 12: "CodeNotFound"
    "\0b\00\00\00"  ;; 11: "NotCallable"
    "\0f\00\00\00"  ;; 15: "LoggingDisabled"
    "\11\00\00\00"  ;; 17: "CallRuntimeFailed"
    "\13\00\00\00"  ;; 19: "EcdsaRecoveryFailed"
    "\13\00\00\00"  ;; 19: "Sr25519VerifyFailed"
    "\12\00\00\00"  ;; 18: "XcmExecutionFailed"
    "\0d\00\00\00"  ;; 13: "XcmSendFailed"
    "\07\00\00\00"  ;; 7: "Unknown"
    
    ;; === ERROR VARIANT NAME POINTERS ===
    ;; Offset 68248: Pointers to each error name string
    "\d3\05\01\00"  ;; Ptr to "Success"
    "\da\05\01\00"  ;; Ptr to "CalleeTrapped"
    "\e7\05\01\00"  ;; Ptr to "CalleeReverted"
    "\f5\05\01\00"  ;; Ptr to "KeyNotFound"
    "\00\06\01\00"  ;; Ptr to "_BelowSubsistenceThreshold"
    "\1a\06\01\00"  ;; Ptr to "TransferFailed"
    "(\06\01\00"    ;; Ptr to "_EndowmentTooLow"
    "8\06\01\00"    ;; Ptr to "CodeNotFound"
    "D\06\01\00"    ;; Ptr to "NotCallable"
    "O\06\01\00"    ;; Ptr to "LoggingDisabled"
    "^\06\01\00"    ;; Ptr to "CallRuntimeFailed"
    "o\06\01\00"    ;; Ptr to "EcdsaRecoveryFailed"
    "\82\06\01\00"  ;; Ptr to "Sr25519VerifyFailed"
    "\95\06\01\00"  ;; Ptr to "XcmExecutionFailed"
    "\a7\06\01\00"  ;; Ptr to "XcmSendFailed"
    "\b4\06\01\00"  ;; Ptr to "Unknown"
    
    ;; === SELECTOR DISPATCH TABLE ===
    ;; Offset 68312: Function selector bytes (1 byte each, 15 functions)
    "\10"           ;; Selector 0x10
    "\01\02\03\04\05\06\07\08\09\0a\0b\0c\0d\0e"  ;; Selectors 0x01-0x0E
  )
  
  ;; Data Section 1: Additional panic messages and format strings (offset 68036)
  (data (;1;) (i32.const 68036)
    ;; === TYPE INFO ===
    ;; Offset 68036: Type metadata
    "\01\00\00\00"  ;; Type tag: 1
    "\09\00\00\00"  ;; Length: 9
    "Error\00\00\00"
    
    ;; Offset 68052: More type info
    "\0a\00\00\00\0c\00\00\00\04\00\00\00"
    "\0b\00\00\00\0c\00\00\00\0d\00\00\00"
    
    ;; === ALLOCATION ERRORS ===
    ;; Offset 68076: Capacity overflow panic
    "capacity overflow\00\00\00"
    
    ;; Offset 68094: Location info
    "\ec\09\01\00\11\00\00\00"  ;; raw_vec/mod.rs path, length 17
    "v\03\01\00x\00\00\00"      ;; Another path
    ".\02\00\00\11\00\00\00"    ;; Line 558, column 17
    
    ;; Offset 68118: Allocation failure message
    "memory allocation of  bytes failed\00\00"
    
    ;; Offset 68154: Location
    "\18\0a\01\00\15\00\00\00"  ;; Message start, length 21
    "-\0a\01\00\0d\00\00\00"    ;; " bytes failed", length 13
    
    ;; Offset 68170: alloc.rs reference
    "\ee\03\01\00r\00\00\00"    ;; alloc.rs path, length 114
    "\b6\01\00\00\0d\00\00\00"  ;; Line 438, column 13
    
    ;; === FORMAT TRAIT ERROR ===
    ;; Offset 68186: Formatter error message
    "a formatting trait implementation returned an error when the underlying stream did not\00\00"
    
    ;; Offset 68276: fmt.rs locations
    "l\00\01\00p\00\00\00"      ;; fmt.rs path, length 112
    "\8a\02\00\00\0e\00\00\00"  ;; Line 650, column 14
    
    "\04\03\01\00r\00\00\00"    ;; Another path, length 114
    "\c1\01\00\00\1d\00\00\00"  ;; Line 449, column 29
    
    "'\02\01\00s\00\00\00"      ;; Path, length 115
    "\e8\01\00\00\17\00\00\00"  ;; Line 488, column 23
    
    ;; === UNWRAP PANIC ===
    ;; Offset 68332: Option::unwrap panic message
    "):called `Option::unwrap()` on a `None` value\00\00\00"
    
    ;; Offset 68378: Empty placeholders
    "\01\00\00\00\00\00\00\00"
    "\e5\0a\01\00\01\00\00\00"
    "\e5\0a\01\00\01\00\00\00"
    
    ;; === PANIC FORMAT TEMPLATES ===
    ;; Offset 68402: Panic format string
    "panicked at :\0a"
    
    ;; Offset 68416: Index out of bounds format
    "index out of bounds: the len is  but the index is "
    
    ;; Offset 68468: Location separator
    ":\0b\01\00 \00\00\00"      ;; ": " at 68362, length 32
    "Z\0b\01\00\12\00\00\00"    ;; Template continuation
    
    ;; Offset 68484: Field separator
    ": \00\00"
    
    ;; Offset 68488: Padding/alignment
    "\01\00\00\00\00\00\00\00"
    "|\0b\01\00\02\00\00\00"    ;; ": ", length 2
    
    ;; === TYPE METADATA ===
    ;; Offset 68504: More type info
    "\00\00\00\00\0c\00\00\00\04\00\00\00"
    "\0e\00\00\00\0f\00\00\00\10\00\00\00"
    
    ;; === FORMAT LITERALS ===
    ;; Offset 68520: Indentation and separators (used by formatter)
    "    "           ;; 4 spaces for indentation
    ",\0a"           ;; Comma newline
    "("              ;; Open paren
    "(\0a"           ;; Open paren newline
    
    ;; Offset 68529: Hexadecimal digit table (100 bytes: "00" through "99")
    "00010203040506070809"
    "10111213141516171819"
    "20212223242526272829"
    "30313233343536373839"
    "40414243444546474849"
    "50515253545556575859"
    "60616263646566676869"
    "70717273747576777879"
    "80818283848586878889"
    "90919293949596979899"
    
    ;; === SLICE RANGE PANIC MESSAGES ===
    ;; Offset 68629: Range start panic
    "range start index  out of range for slice of length \00\00\00"
    
    ;; Offset 68683: Location info
    "y\0c\01\00\12\00\00\00"    ;; "range start index ", length 18
    "\8b\0c\01\00\22\00\00\00"  ;; " out of range...", length 34
    
    ;; Offset 68699: Range end panic
    "range end index "
    
    ;; Offset 68715: Location
    "\c0\0c\01\00\10\00\00\00"  ;; "range end index ", length 16
    "\8b\0c\01\00\22\00\00\00"  ;; Same suffix as above
    
    ;; Offset 68731: Copy slice length mismatch
    "copy_from_slice: source slice length () does not match destination slice length (\00\00\00"
    
    ;; Offset 68815: Location
    "\e0\0c\01\00&\00\00\00"    ;; First part, length 38
    "\06\0d\01\00+\00\00\00"    ;; Second part, length 43
    "\e4\0a\01\00\01\00\00\00"  ;; Closing paren
    "\01\00\00\00\00\00\00\00"
    
    ;; === INK! CONTRACT ERRORS ===
    ;; Offset 68839: Decoder errors
    "unable to decode selector"
    "encountered unknown selector"
    "unable to decode input"
    "could not read input"
    "paid an unpayable message"
    
    ;; === SLICE MID > LEN PANIC ===
    ;; Offset 68972: Mid assertion
    "mid > len\00\00\00"
    
    ;; Offset 68982: Location
    "\cc\0d\01\00\09\00\00\00"  ;; "mid > len", length 9
    "\0a\00\00\00\01\00\00\00"  ;; Line 10, column 1
    
    ;; Offset 68998: Empty marker
    "\00\00\00\00"
    "\e0\0d\01\00\01\00\00\00"
    
    ;; === STRING.RS MULTIPLE PANIC LOCATIONS ===
    ;; Offset 69014: Series of string.rs panic locations
    "\b7\01\01\00p\00\00\00"    ;; string.rs path
    "\5c\00\00\00;\00\00\00"    ;; Line 92, column 59
    
    "\b7\01\01\00p\00\00\00"
    "\5c\00\00\00\14\00\00\00"  ;; Line 92, column 20
    
    "\b7\01\01\00p\00\00\00"
    "h\00\00\00\09\00\00\00"    ;; Line 104, column 9
    
    "\b7\01\01\00p\00\00\00"
    "\86\00\00\00%\00\00\00"    ;; Line 134, column 37
    
    "\b7\01\01\00p\00\00\00"
    "\90\00\00\00!\00\00\00"    ;; Line 144, column 33
    
    ;; === CONTRACT ERROR DISPATCH TABLE ===
    ;; Offset 69094: Error type info
    "\00\00\01\00l\00\00\00"    ;; Type 1, related to path
    "-\00\00\00\17\00\00\00"    ;; Offset 45, length 23
    "\19\00\00\00\1c\00\00\00"  ;; Line 25, column 28
    "\16\00\00\00\14\00\00\00"  ;; Length 22, offset 20
    "\19\00\00\00"              ;; Line 25
    
    ;; Offset 69126: Error message pointers
    "T\0d\01\00"  ;; Ptr to "unable to decode selector"
    "m\0d\01\00"  ;; Ptr to "encountered unknown selector"
    "\89\0d\01\00" ;; Ptr to "unable to decode input"
    "\9f\0d\01\00" ;; Ptr to "could not read input"
    "\b3\0d\01"    ;; Ptr to "paid an unpayable message"
  )

)  ;; End of module
